INFO  02:52:15,089 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program_mjDokumentija_pr1.mj
INFO  02:52:15,093 - #1 program
INFO  02:52:15,093 - #46 p
INFO  02:52:15,093 - #7 const
INFO  02:52:15,093 - #46 int
INFO  02:52:15,093 - #46 size
INFO  02:52:15,093 - #32 =
INFO  02:52:15,093 - #47 10
INFO  02:52:15,094 - #35 ;
INFO  02:52:15,094 - #4 class
INFO  02:52:15,094 - #46 Table
INFO  02:52:15,094 - #43 {
INFO  02:52:15,094 - #46 int
INFO  02:52:15,094 - #46 pos
INFO  02:52:15,094 - #41 [
INFO  02:52:15,094 - #42 ]
INFO  02:52:15,094 - #37 ,
INFO  02:52:15,094 - #46 neg
INFO  02:52:15,094 - #41 [
INFO  02:52:15,095 - #42 ]
INFO  02:52:15,096 - #37 ,
INFO  02:52:15,096 - #46 factor
INFO  02:52:15,096 - #35 ;
INFO  02:52:15,096 - #43 {
INFO  02:52:15,096 - #46 Table
INFO  02:52:15,096 - #39 (
INFO  02:52:15,096 - #46 int
INFO  02:52:15,096 - #46 factor
INFO  02:52:15,097 - #40 )
INFO  02:52:15,097 - #43 {
INFO  02:52:15,097 - #46 this
INFO  02:52:15,097 - #38 .
INFO  02:52:15,097 - #46 factor
INFO  02:52:15,097 - #32 =
INFO  02:52:15,097 - #46 factor
INFO  02:52:15,097 - #35 ;
INFO  02:52:15,097 - #44 }
INFO  02:52:15,097 - #13 void
INFO  02:52:15,097 - #46 putp
INFO  02:52:15,097 - #39 (
INFO  02:52:15,097 - #46 int
INFO  02:52:15,098 - #46 a
INFO  02:52:15,098 - #37 ,
INFO  02:52:15,098 - #46 int
INFO  02:52:15,098 - #46 idx
INFO  02:52:15,098 - #40 )
INFO  02:52:15,098 - #43 {
INFO  02:52:15,098 - #46 this
INFO  02:52:15,098 - #38 .
INFO  02:52:15,098 - #46 pos
INFO  02:52:15,098 - #41 [
INFO  02:52:15,098 - #46 idx
INFO  02:52:15,098 - #42 ]
INFO  02:52:15,099 - #32 =
INFO  02:52:15,099 - #46 a
INFO  02:52:15,099 - #35 ;
INFO  02:52:15,099 - #44 }
INFO  02:52:15,099 - #13 void
INFO  02:52:15,099 - #46 putn
INFO  02:52:15,099 - #39 (
INFO  02:52:15,099 - #46 int
INFO  02:52:15,099 - #46 a
INFO  02:52:15,099 - #37 ,
INFO  02:52:15,099 - #46 int
INFO  02:52:15,099 - #46 idx
INFO  02:52:15,099 - #40 )
INFO  02:52:15,099 - #43 {
INFO  02:52:15,099 - #46 this
INFO  02:52:15,099 - #38 .
INFO  02:52:15,099 - #46 neg
INFO  02:52:15,099 - #41 [
INFO  02:52:15,099 - #46 idx
INFO  02:52:15,100 - #42 ]
INFO  02:52:15,100 - #32 =
INFO  02:52:15,100 - #46 a
INFO  02:52:15,100 - #35 ;
INFO  02:52:15,100 - #44 }
INFO  02:52:15,100 - #46 int
INFO  02:52:15,100 - #46 getp
INFO  02:52:15,100 - #39 (
INFO  02:52:15,100 - #46 int
INFO  02:52:15,100 - #46 idx
INFO  02:52:15,100 - #40 )
INFO  02:52:15,100 - #43 {
INFO  02:52:15,101 - #3 return
INFO  02:52:15,101 - #46 pos
INFO  02:52:15,101 - #41 [
INFO  02:52:15,101 - #46 idx
INFO  02:52:15,101 - #42 ]
INFO  02:52:15,101 - #35 ;
INFO  02:52:15,101 - #44 }
INFO  02:52:15,101 - #46 int
INFO  02:52:15,101 - #46 getn
INFO  02:52:15,101 - #39 (
INFO  02:52:15,101 - #46 int
INFO  02:52:15,101 - #46 idx
INFO  02:52:15,101 - #40 )
INFO  02:52:15,101 - #43 {
INFO  02:52:15,101 - #3 return
INFO  02:52:15,102 - #46 neg
INFO  02:52:15,102 - #41 [
INFO  02:52:15,102 - #46 idx
INFO  02:52:15,102 - #42 ]
INFO  02:52:15,102 - #35 ;
INFO  02:52:15,102 - #44 }
INFO  02:52:15,102 - #44 }
INFO  02:52:15,102 - #44 }
INFO  02:52:15,102 - #46 Table
INFO  02:52:15,102 - #46 val
INFO  02:52:15,102 - #35 ;
INFO  02:52:15,102 - #46 Int
INFO  02:52:15,102 - #46 rows
INFO  02:52:15,103 - #37 ,
INFO  02:52:15,103 - #46 columns
INFO  02:52:15,103 - #35 ;
INFO  02:52:15,103 - #43 {
INFO  02:52:15,103 - #13 void
INFO  02:52:15,103 - #46 f
INFO  02:52:15,103 - #39 (
INFO  02:52:15,103 - #46 char
INFO  02:52:15,103 - #46 ch
INFO  02:52:15,103 - #37 ,
INFO  02:52:15,103 - #46 int
INFO  02:52:15,103 - #46 a
INFO  02:52:15,103 - #37 ,
INFO  02:52:15,104 - #46 int
INFO  02:52:15,104 - #46 arg
INFO  02:52:15,104 - #40 )
INFO  02:52:15,104 - #46 int
INFO  02:52:15,104 - #46 x
INFO  02:52:15,104 - #35 ;
INFO  02:52:15,104 - #43 {
INFO  02:52:15,104 - #46 x
INFO  02:52:15,104 - #32 =
INFO  02:52:15,104 - #46 arg
INFO  02:52:15,104 - #35 ;
INFO  02:52:15,104 - #44 }
INFO  02:52:15,105 - #13 void
INFO  02:52:15,105 - #46 main
INFO  02:52:15,105 - #39 (
INFO  02:52:15,105 - #40 )
INFO  02:52:15,105 - #46 int
INFO  02:52:15,105 - #46 x
INFO  02:52:15,105 - #37 ,
INFO  02:52:15,105 - #46 i
INFO  02:52:15,105 - #35 ;
INFO  02:52:15,105 - #46 char
INFO  02:52:15,105 - #46 c
INFO  02:52:15,105 - #37 ,
INFO  02:52:15,105 - #46 int
INFO  02:52:15,105 - #41 [
INFO  02:52:15,105 - #42 ]
INFO  02:52:15,105 - #46 arr
INFO  02:52:15,105 - #35 ;
INFO  02:52:15,106 - #43 {
INFO  02:52:15,106 - #46 val
INFO  02:52:15,106 - #32 =
INFO  02:52:15,106 - #11 new
INFO  02:52:15,106 - #46 Table
INFO  02:52:15,106 - #39 (
INFO  02:52:15,106 - #47 2
INFO  02:52:15,106 - #40 )
INFO  02:52:15,106 - #35 ;
INFO  02:52:15,106 - #46 arr
INFO  02:52:15,106 - #32 =
INFO  02:52:15,106 - #11 new
INFO  02:52:15,106 - #46 int
INFO  02:52:15,106 - #41 [
INFO  02:52:15,106 - #47 3
INFO  02:52:15,106 - #42 ]
INFO  02:52:15,106 - #35 ;
INFO  02:52:15,106 - #46 i
INFO  02:52:15,106 - #32 =
INFO  02:52:15,107 - #47 0
INFO  02:52:15,107 - #35 ;
INFO  02:52:15,107 - #10 while
INFO  02:52:15,107 - #39 (
INFO  02:52:15,107 - #46 i
INFO  02:52:15,107 - #28 <
INFO  02:52:15,107 - #47 3
INFO  02:52:15,107 - #40 )
INFO  02:52:15,107 - #43 {
INFO  02:52:15,107 - #46 arr
INFO  02:52:15,107 - #41 [
INFO  02:52:15,107 - #46 i
INFO  02:52:15,107 - #42 ]
INFO  02:52:15,107 - #32 =
INFO  02:52:15,107 - #46 i
INFO  02:52:15,107 - #35 ;
INFO  02:52:15,107 - #46 i
INFO  02:52:15,107 - #33 ++
INFO  02:52:15,107 - #35 ;
INFO  02:52:15,107 - #44 }
INFO  02:52:15,108 - #46 arr
INFO  02:52:15,108 - #38 .
INFO  02:52:15,108 - #46 foreach
INFO  02:52:15,108 - #39 (
INFO  02:52:15,108 - #46 x
INFO  02:52:15,108 - #45 =>
INFO  02:52:15,108 - #2 print
INFO  02:52:15,108 - #39 (
INFO  02:52:15,108 - #46 x
INFO  02:52:15,108 - #40 )
INFO  02:52:15,108 - #35 ;
INFO  02:52:15,108 - #40 )
INFO  02:52:15,108 - #35 ;
INFO  02:52:15,108 - #46 val
INFO  02:52:15,108 - #38 .
INFO  02:52:15,108 - #46 pos
INFO  02:52:15,108 - #32 =
INFO  02:52:15,108 - #11 new
INFO  02:52:15,108 - #46 int
INFO  02:52:15,108 - #41 [
INFO  02:52:15,108 - #46 size
INFO  02:52:15,108 - #42 ]
INFO  02:52:15,108 - #35 ;
INFO  02:52:15,108 - #46 val
INFO  02:52:15,108 - #38 .
INFO  02:52:15,109 - #46 neg
INFO  02:52:15,109 - #32 =
INFO  02:52:15,109 - #11 new
INFO  02:52:15,109 - #46 int
INFO  02:52:15,109 - #41 [
INFO  02:52:15,109 - #46 size
INFO  02:52:15,109 - #42 ]
INFO  02:52:15,109 - #35 ;
INFO  02:52:15,109 - #12 read
INFO  02:52:15,109 - #39 (
INFO  02:52:15,109 - #46 x
INFO  02:52:15,109 - #40 )
INFO  02:52:15,109 - #35 ;
INFO  02:52:15,109 - #41 [
INFO  02:52:15,109 - #46 i
INFO  02:52:15,109 - #37 ,
INFO  02:52:15,109 - #37 ,
INFO  02:52:15,109 - #46 x
INFO  02:52:15,109 - #42 ]
INFO  02:52:15,109 - #32 =
INFO  02:52:15,109 - #46 arr
INFO  02:52:15,109 - #35 ;
INFO  02:52:15,109 - #10 while
INFO  02:52:15,110 - #39 (
INFO  02:52:15,110 - #46 i
INFO  02:52:15,110 - #28 <
INFO  02:52:15,110 - #46 size
INFO  02:52:15,110 - #40 )
INFO  02:52:15,110 - #43 {
INFO  02:52:15,110 - #46 val
INFO  02:52:15,110 - #38 .
INFO  02:52:15,110 - #46 putp
INFO  02:52:15,110 - #39 (
INFO  02:52:15,110 - #47 0
INFO  02:52:15,110 - #37 ,
INFO  02:52:15,110 - #46 i
INFO  02:52:15,110 - #40 )
INFO  02:52:15,110 - #35 ;
INFO  02:52:15,110 - #46 val
INFO  02:52:15,110 - #38 .
INFO  02:52:15,110 - #46 putn
INFO  02:52:15,110 - #39 (
INFO  02:52:15,111 - #47 0
INFO  02:52:15,111 - #37 ,
INFO  02:52:15,111 - #46 i
INFO  02:52:15,111 - #40 )
INFO  02:52:15,111 - #35 ;
INFO  02:52:15,111 - #46 i
INFO  02:52:15,111 - #33 ++
INFO  02:52:15,111 - #35 ;
INFO  02:52:15,111 - #44 }
INFO  02:52:15,111 - #46 f
INFO  02:52:15,111 - #39 (
INFO  02:52:15,111 - #46 c
INFO  02:52:15,111 - #37 ,
INFO  02:52:15,111 - #46 x
INFO  02:52:15,111 - #37 ,
INFO  02:52:15,111 - #46 i
INFO  02:52:15,111 - #40 )
INFO  02:52:15,111 - #35 ;
INFO  02:52:15,111 - #12 read
INFO  02:52:15,111 - #39 (
INFO  02:52:15,112 - #46 rows
INFO  02:52:15,112 - #40 )
INFO  02:52:15,112 - #35 ;
INFO  02:52:15,112 - #46 x
INFO  02:52:15,112 - #32 =
INFO  02:52:15,112 - #46 rows
INFO  02:52:15,112 - #35 ;
INFO  02:52:15,112 - #10 while
INFO  02:52:15,112 - #39 (
INFO  02:52:15,112 - #48 true
INFO  02:52:15,112 - #40 )
INFO  02:52:15,112 - #43 {
INFO  02:52:15,112 - #8 if
INFO  02:52:15,112 - #39 (
INFO  02:52:15,113 - #46 x
INFO  02:52:15,113 - #29 <=
INFO  02:52:15,113 - #47 0
INFO  02:52:15,113 - #40 )
INFO  02:52:15,113 - #18 break
INFO  02:52:15,113 - #35 ;
INFO  02:52:15,113 - #8 if
INFO  02:52:15,113 - #39 (
INFO  02:52:15,113 - #47 0
INFO  02:52:15,113 - #29 <=
INFO  02:52:15,113 - #46 x
INFO  02:52:15,113 - #30 &&
INFO  02:52:15,113 - #46 x
INFO  02:52:15,113 - #28 <
INFO  02:52:15,113 - #46 size
INFO  02:52:15,113 - #40 )
INFO  02:52:15,113 - #43 {
INFO  02:52:15,113 - #46 val
INFO  02:52:15,113 - #38 .
INFO  02:52:15,113 - #46 putp
INFO  02:52:15,113 - #39 (
INFO  02:52:15,113 - #46 val
INFO  02:52:15,113 - #38 .
INFO  02:52:15,113 - #46 getp
INFO  02:52:15,114 - #39 (
INFO  02:52:15,114 - #46 x
INFO  02:52:15,114 - #40 )
INFO  02:52:15,114 - #19 +
INFO  02:52:15,114 - #47 1
INFO  02:52:15,114 - #40 )
INFO  02:52:15,114 - #35 ;
INFO  02:52:15,114 - #44 }
INFO  02:52:15,114 - #6 else
INFO  02:52:15,114 - #8 if
INFO  02:52:15,114 - #39 (
INFO  02:52:15,115 - #46 size
INFO  02:52:15,115 - #28 <
INFO  02:52:15,115 - #46 x
INFO  02:52:15,115 - #30 &&
INFO  02:52:15,115 - #46 x
INFO  02:52:15,115 - #28 <
INFO  02:52:15,116 - #47 0
INFO  02:52:15,116 - #40 )
INFO  02:52:15,116 - #43 {
INFO  02:52:15,116 - #46 val
INFO  02:52:15,116 - #38 .
INFO  02:52:15,116 - #46 putn
INFO  02:52:15,116 - #39 (
INFO  02:52:15,116 - #46 val
INFO  02:52:15,116 - #38 .
INFO  02:52:15,116 - #46 getn
INFO  02:52:15,116 - #39 (
INFO  02:52:15,116 - #46 x
INFO  02:52:15,116 - #40 )
INFO  02:52:15,116 - #19 +
INFO  02:52:15,116 - #47 1
INFO  02:52:15,116 - #40 )
INFO  02:52:15,117 - #35 ;
INFO  02:52:15,117 - #44 }
INFO  02:52:15,117 - #12 read
INFO  02:52:15,117 - #39 (
INFO  02:52:15,117 - #46 x
INFO  02:52:15,117 - #40 )
INFO  02:52:15,117 - #35 ;
INFO  02:52:15,117 - #44 }
INFO  02:52:15,117 - #44 }
INFO  02:52:15,117 - #44 }
