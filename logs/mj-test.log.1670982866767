INFO  02:54:01,738 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program_mjDokumentija_pr1.mj
INFO  02:54:01,742 - #1 program
INFO  02:54:01,742 - #46 p
INFO  02:54:01,742 - #7 const
INFO  02:54:01,742 - #46 int
INFO  02:54:01,742 - #46 size
INFO  02:54:01,743 - #32 =
INFO  02:54:01,743 - #47 10
INFO  02:54:01,743 - #35 ;
INFO  02:54:01,743 - #4 class
INFO  02:54:01,743 - #46 Table
INFO  02:54:01,743 - #43 {
INFO  02:54:01,743 - #46 int
INFO  02:54:01,743 - #46 pos
INFO  02:54:01,743 - #41 [
INFO  02:54:01,743 - #42 ]
INFO  02:54:01,743 - #37 ,
INFO  02:54:01,743 - #46 neg
INFO  02:54:01,743 - #41 [
INFO  02:54:01,743 - #42 ]
INFO  02:54:01,743 - #37 ,
INFO  02:54:01,744 - #46 factor
INFO  02:54:01,744 - #35 ;
INFO  02:54:01,744 - #43 {
INFO  02:54:01,744 - #46 Table
INFO  02:54:01,744 - #39 (
INFO  02:54:01,744 - #46 int
INFO  02:54:01,744 - #46 factor
INFO  02:54:01,744 - #40 )
INFO  02:54:01,744 - #43 {
INFO  02:54:01,744 - #46 this
INFO  02:54:01,744 - #38 .
INFO  02:54:01,744 - #46 factor
INFO  02:54:01,744 - #32 =
INFO  02:54:01,744 - #46 factor
INFO  02:54:01,744 - #35 ;
INFO  02:54:01,744 - #44 }
INFO  02:54:01,745 - #13 void
INFO  02:54:01,745 - #46 putp
INFO  02:54:01,745 - #39 (
INFO  02:54:01,745 - #46 int
INFO  02:54:01,745 - #46 a
INFO  02:54:01,745 - #37 ,
INFO  02:54:01,745 - #46 int
INFO  02:54:01,745 - #46 idx
INFO  02:54:01,745 - #40 )
INFO  02:54:01,745 - #43 {
INFO  02:54:01,745 - #46 this
INFO  02:54:01,745 - #38 .
INFO  02:54:01,745 - #46 pos
INFO  02:54:01,745 - #41 [
INFO  02:54:01,746 - #46 idx
INFO  02:54:01,746 - #42 ]
INFO  02:54:01,746 - #32 =
INFO  02:54:01,746 - #46 a
INFO  02:54:01,746 - #35 ;
INFO  02:54:01,746 - #44 }
INFO  02:54:01,746 - #13 void
INFO  02:54:01,746 - #46 putn
INFO  02:54:01,746 - #39 (
INFO  02:54:01,746 - #46 int
INFO  02:54:01,746 - #46 a
INFO  02:54:01,746 - #37 ,
INFO  02:54:01,746 - #46 int
INFO  02:54:01,746 - #46 idx
INFO  02:54:01,747 - #40 )
INFO  02:54:01,747 - #43 {
INFO  02:54:01,747 - #46 this
INFO  02:54:01,747 - #38 .
INFO  02:54:01,747 - #46 neg
INFO  02:54:01,747 - #41 [
INFO  02:54:01,747 - #46 idx
INFO  02:54:01,747 - #42 ]
INFO  02:54:01,747 - #32 =
INFO  02:54:01,747 - #46 a
INFO  02:54:01,747 - #35 ;
INFO  02:54:01,747 - #44 }
INFO  02:54:01,747 - #46 int
INFO  02:54:01,747 - #46 getp
INFO  02:54:01,747 - #39 (
INFO  02:54:01,747 - #46 int
INFO  02:54:01,747 - #46 idx
INFO  02:54:01,747 - #40 )
INFO  02:54:01,748 - #43 {
INFO  02:54:01,748 - #3 return
INFO  02:54:01,748 - #46 pos
INFO  02:54:01,748 - #41 [
INFO  02:54:01,748 - #46 idx
INFO  02:54:01,748 - #42 ]
INFO  02:54:01,748 - #35 ;
INFO  02:54:01,748 - #44 }
INFO  02:54:01,748 - #46 int
INFO  02:54:01,748 - #46 getn
INFO  02:54:01,748 - #39 (
INFO  02:54:01,748 - #46 int
INFO  02:54:01,748 - #46 idx
INFO  02:54:01,748 - #40 )
INFO  02:54:01,748 - #43 {
INFO  02:54:01,748 - #3 return
INFO  02:54:01,748 - #46 neg
INFO  02:54:01,748 - #41 [
INFO  02:54:01,749 - #46 idx
INFO  02:54:01,749 - #42 ]
INFO  02:54:01,749 - #35 ;
INFO  02:54:01,749 - #44 }
INFO  02:54:01,749 - #44 }
INFO  02:54:01,749 - #44 }
INFO  02:54:01,749 - #46 Table
INFO  02:54:01,749 - #46 val
INFO  02:54:01,749 - #35 ;
INFO  02:54:01,749 - #46 Int
INFO  02:54:01,749 - #46 rows
INFO  02:54:01,749 - #37 ,
INFO  02:54:01,749 - #46 columns
INFO  02:54:01,749 - #35 ;
INFO  02:54:01,749 - #43 {
INFO  02:54:01,749 - #13 void
INFO  02:54:01,749 - #46 f
INFO  02:54:01,750 - #39 (
INFO  02:54:01,750 - #46 char
INFO  02:54:01,750 - #46 ch
INFO  02:54:01,750 - #37 ,
INFO  02:54:01,750 - #46 int
INFO  02:54:01,750 - #46 a
INFO  02:54:01,750 - #37 ,
INFO  02:54:01,750 - #46 int
INFO  02:54:01,750 - #46 arg
INFO  02:54:01,750 - #40 )
INFO  02:54:01,751 - #46 int
INFO  02:54:01,751 - #46 x
INFO  02:54:01,751 - #35 ;
INFO  02:54:01,751 - #43 {
INFO  02:54:01,751 - #46 x
INFO  02:54:01,751 - #32 =
INFO  02:54:01,751 - #46 arg
INFO  02:54:01,751 - #35 ;
INFO  02:54:01,751 - #44 }
INFO  02:54:01,751 - #13 void
INFO  02:54:01,751 - #46 main
INFO  02:54:01,751 - #39 (
INFO  02:54:01,752 - #40 )
INFO  02:54:01,752 - #46 int
INFO  02:54:01,752 - #46 x
INFO  02:54:01,752 - #37 ,
INFO  02:54:01,752 - #46 i
INFO  02:54:01,752 - #35 ;
INFO  02:54:01,752 - #46 char
INFO  02:54:01,752 - #46 c
INFO  02:54:01,752 - #37 ,
INFO  02:54:01,752 - #46 int
INFO  02:54:01,752 - #41 [
INFO  02:54:01,752 - #42 ]
INFO  02:54:01,753 - #46 arr
INFO  02:54:01,753 - #35 ;
INFO  02:54:01,753 - #43 {
INFO  02:54:01,753 - #46 val
INFO  02:54:01,753 - #32 =
INFO  02:54:01,753 - #11 new
INFO  02:54:01,753 - #46 Table
INFO  02:54:01,753 - #39 (
INFO  02:54:01,753 - #47 2
INFO  02:54:01,753 - #40 )
INFO  02:54:01,753 - #35 ;
INFO  02:54:01,753 - #46 arr
INFO  02:54:01,753 - #32 =
INFO  02:54:01,753 - #11 new
INFO  02:54:01,753 - #46 int
INFO  02:54:01,754 - #41 [
INFO  02:54:01,754 - #47 3
INFO  02:54:01,754 - #42 ]
INFO  02:54:01,754 - #35 ;
INFO  02:54:01,754 - #46 i
INFO  02:54:01,754 - #32 =
INFO  02:54:01,754 - #47 0
INFO  02:54:01,754 - #35 ;
INFO  02:54:01,754 - #10 while
INFO  02:54:01,754 - #39 (
INFO  02:54:01,754 - #46 i
INFO  02:54:01,754 - #28 <
INFO  02:54:01,755 - #47 3
INFO  02:54:01,755 - #40 )
INFO  02:54:01,755 - #43 {
INFO  02:54:01,755 - #46 arr
INFO  02:54:01,755 - #41 [
INFO  02:54:01,755 - #46 i
INFO  02:54:01,755 - #42 ]
INFO  02:54:01,755 - #32 =
INFO  02:54:01,755 - #46 i
INFO  02:54:01,755 - #35 ;
INFO  02:54:01,755 - #46 i
INFO  02:54:01,755 - #33 ++
INFO  02:54:01,756 - #35 ;
INFO  02:54:01,756 - #44 }
INFO  02:54:01,756 - #46 arr
INFO  02:54:01,756 - #38 .
INFO  02:54:01,756 - #46 foreach
INFO  02:54:01,756 - #39 (
INFO  02:54:01,756 - #46 x
INFO  02:54:01,756 - #45 =>
INFO  02:54:01,756 - #2 print
INFO  02:54:01,756 - #39 (
INFO  02:54:01,756 - #46 x
INFO  02:54:01,756 - #40 )
INFO  02:54:01,756 - #35 ;
INFO  02:54:01,756 - #40 )
INFO  02:54:01,756 - #35 ;
INFO  02:54:01,757 - #46 val
INFO  02:54:01,757 - #38 .
INFO  02:54:01,757 - #46 pos
INFO  02:54:01,757 - #32 =
INFO  02:54:01,757 - #11 new
INFO  02:54:01,757 - #46 int
INFO  02:54:01,757 - #41 [
INFO  02:54:01,757 - #46 size
INFO  02:54:01,757 - #42 ]
INFO  02:54:01,757 - #35 ;
INFO  02:54:01,757 - #46 val
INFO  02:54:01,757 - #38 .
INFO  02:54:01,757 - #46 neg
INFO  02:54:01,757 - #32 =
INFO  02:54:01,757 - #11 new
INFO  02:54:01,757 - #46 int
INFO  02:54:01,758 - #41 [
INFO  02:54:01,758 - #46 size
INFO  02:54:01,758 - #42 ]
INFO  02:54:01,758 - #35 ;
INFO  02:54:01,758 - #12 read
INFO  02:54:01,758 - #39 (
INFO  02:54:01,758 - #46 x
INFO  02:54:01,758 - #40 )
INFO  02:54:01,758 - #35 ;
INFO  02:54:01,758 - #41 [
INFO  02:54:01,758 - #46 i
INFO  02:54:01,758 - #37 ,
INFO  02:54:01,758 - #37 ,
INFO  02:54:01,758 - #46 x
INFO  02:54:01,758 - #42 ]
INFO  02:54:01,758 - #32 =
INFO  02:54:01,758 - #46 arr
INFO  02:54:01,758 - #35 ;
INFO  02:54:01,758 - #10 while
INFO  02:54:01,758 - #39 (
INFO  02:54:01,758 - #46 i
INFO  02:54:01,759 - #28 <
INFO  02:54:01,759 - #46 size
INFO  02:54:01,759 - #40 )
INFO  02:54:01,759 - #43 {
INFO  02:54:01,759 - #46 val
INFO  02:54:01,759 - #38 .
INFO  02:54:01,759 - #46 putp
INFO  02:54:01,759 - #39 (
INFO  02:54:01,759 - #47 0
INFO  02:54:01,759 - #37 ,
INFO  02:54:01,759 - #46 i
INFO  02:54:01,759 - #40 )
INFO  02:54:01,759 - #35 ;
INFO  02:54:01,759 - #46 val
INFO  02:54:01,759 - #38 .
INFO  02:54:01,759 - #46 putn
INFO  02:54:01,759 - #39 (
INFO  02:54:01,759 - #47 0
INFO  02:54:01,759 - #37 ,
INFO  02:54:01,759 - #46 i
INFO  02:54:01,759 - #40 )
INFO  02:54:01,759 - #35 ;
INFO  02:54:01,759 - #46 i
INFO  02:54:01,760 - #33 ++
INFO  02:54:01,760 - #35 ;
INFO  02:54:01,760 - #44 }
INFO  02:54:01,760 - #46 f
INFO  02:54:01,760 - #39 (
INFO  02:54:01,760 - #46 c
INFO  02:54:01,760 - #37 ,
INFO  02:54:01,760 - #46 x
INFO  02:54:01,760 - #37 ,
INFO  02:54:01,760 - #46 i
INFO  02:54:01,760 - #40 )
INFO  02:54:01,760 - #35 ;
INFO  02:54:01,760 - #12 read
INFO  02:54:01,760 - #39 (
INFO  02:54:01,760 - #46 rows
INFO  02:54:01,760 - #40 )
INFO  02:54:01,760 - #35 ;
INFO  02:54:01,760 - #46 x
INFO  02:54:01,761 - #32 =
INFO  02:54:01,761 - #46 rows
INFO  02:54:01,761 - #35 ;
INFO  02:54:01,761 - #10 while
INFO  02:54:01,761 - #39 (
INFO  02:54:01,761 - #48 true
INFO  02:54:01,761 - #40 )
INFO  02:54:01,761 - #43 {
INFO  02:54:01,761 - #8 if
INFO  02:54:01,761 - #39 (
INFO  02:54:01,761 - #46 x
INFO  02:54:01,761 - #29 <=
INFO  02:54:01,761 - #47 0
INFO  02:54:01,761 - #40 )
INFO  02:54:01,761 - #18 break
INFO  02:54:01,761 - #35 ;
INFO  02:54:01,761 - #8 if
INFO  02:54:01,761 - #39 (
INFO  02:54:01,761 - #47 0
INFO  02:54:01,761 - #29 <=
INFO  02:54:01,762 - #46 x
INFO  02:54:01,762 - #30 &&
INFO  02:54:01,762 - #46 x
INFO  02:54:01,762 - #28 <
INFO  02:54:01,762 - #46 size
INFO  02:54:01,762 - #40 )
INFO  02:54:01,762 - #43 {
INFO  02:54:01,762 - #46 val
INFO  02:54:01,762 - #38 .
INFO  02:54:01,762 - #46 putp
INFO  02:54:01,762 - #39 (
INFO  02:54:01,762 - #46 val
INFO  02:54:01,762 - #38 .
INFO  02:54:01,762 - #46 getp
INFO  02:54:01,762 - #39 (
INFO  02:54:01,762 - #46 x
INFO  02:54:01,762 - #40 )
INFO  02:54:01,762 - #19 +
INFO  02:54:01,762 - #47 1
INFO  02:54:01,762 - #40 )
INFO  02:54:01,763 - #35 ;
INFO  02:54:01,763 - #44 }
INFO  02:54:01,763 - #6 else
INFO  02:54:01,763 - #8 if
INFO  02:54:01,763 - #39 (
INFO  02:54:01,763 - #46 size
INFO  02:54:01,763 - #28 <
INFO  02:54:01,763 - #46 x
INFO  02:54:01,764 - #30 &&
INFO  02:54:01,764 - #46 x
INFO  02:54:01,764 - #28 <
INFO  02:54:01,764 - #47 0
INFO  02:54:01,764 - #40 )
INFO  02:54:01,764 - #43 {
INFO  02:54:01,764 - #46 val
INFO  02:54:01,764 - #38 .
INFO  02:54:01,764 - #46 putn
INFO  02:54:01,764 - #39 (
INFO  02:54:01,764 - #46 val
INFO  02:54:01,764 - #38 .
INFO  02:54:01,764 - #46 getn
INFO  02:54:01,764 - #39 (
INFO  02:54:01,764 - #46 x
INFO  02:54:01,764 - #40 )
INFO  02:54:01,764 - #19 +
INFO  02:54:01,764 - #47 1
INFO  02:54:01,764 - #40 )
INFO  02:54:01,764 - #35 ;
INFO  02:54:01,765 - #44 }
INFO  02:54:01,765 - #12 read
INFO  02:54:01,765 - #39 (
INFO  02:54:01,765 - #46 x
INFO  02:54:01,765 - #40 )
INFO  02:54:01,765 - #35 ;
INFO  02:54:01,765 - #44 }
INFO  02:54:01,765 - #44 }
INFO  02:54:01,765 - #44 }
