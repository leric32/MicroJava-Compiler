INFO  02:11:29,545 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\pr1.mj
INFO  02:11:29,591 - #2 program
INFO  02:11:29,591 - #48 p
INFO  02:11:29,591 - #8 const
INFO  02:11:29,592 - #48 int
INFO  02:11:29,593 - #48 size
INFO  02:11:29,593 - #33 =
INFO  02:11:29,594 - #47 10
INFO  02:11:29,594 - #36 ;
INFO  02:11:29,595 - #5 class
INFO  02:11:29,595 - #48 Table
INFO  02:11:29,596 - #44 {
INFO  02:11:29,597 - #48 int
INFO  02:11:29,598 - #48 pos
INFO  02:11:29,598 - #42 [
INFO  02:11:29,598 - #43 ]
INFO  02:11:29,598 - #38 ,
INFO  02:11:29,599 - #48 neg
INFO  02:11:29,599 - #42 [
INFO  02:11:29,599 - #43 ]
INFO  02:11:29,600 - #38 ,
INFO  02:11:29,601 - #48 factor
INFO  02:11:29,601 - #36 ;
INFO  02:11:29,602 - #44 {
INFO  02:11:29,602 - #48 Table
INFO  02:11:29,602 - #40 (
INFO  02:11:29,602 - #48 int
INFO  02:11:29,602 - #48 factor
INFO  02:11:29,602 - #41 )
INFO  02:11:29,603 - #44 {
INFO  02:11:29,604 - #17 this
INFO  02:11:29,605 - #39 .
INFO  02:11:29,605 - #48 factor
INFO  02:11:29,605 - #33 =
INFO  02:11:29,605 - #48 factor
INFO  02:11:29,605 - #36 ;
INFO  02:11:29,606 - #45 }
INFO  02:11:29,606 - #14 void
INFO  02:11:29,607 - #48 putp
INFO  02:11:29,607 - #40 (
INFO  02:11:29,607 - #48 int
INFO  02:11:29,607 - #48 a
INFO  02:11:29,607 - #38 ,
INFO  02:11:29,607 - #48 int
INFO  02:11:29,607 - #48 idx
INFO  02:11:29,607 - #41 )
INFO  02:11:29,608 - #44 {
INFO  02:11:29,608 - #17 this
INFO  02:11:29,608 - #39 .
INFO  02:11:29,608 - #48 pos
INFO  02:11:29,608 - #42 [
INFO  02:11:29,608 - #48 idx
INFO  02:11:29,608 - #43 ]
INFO  02:11:29,608 - #33 =
INFO  02:11:29,608 - #48 a
INFO  02:11:29,609 - #36 ;
INFO  02:11:29,609 - #45 }
INFO  02:11:29,609 - #14 void
INFO  02:11:29,609 - #48 putn
INFO  02:11:29,609 - #40 (
INFO  02:11:29,609 - #48 int
INFO  02:11:29,609 - #48 a
INFO  02:11:29,609 - #38 ,
INFO  02:11:29,609 - #48 int
INFO  02:11:29,609 - #48 idx
INFO  02:11:29,609 - #41 )
INFO  02:11:29,609 - #44 {
INFO  02:11:29,609 - #17 this
INFO  02:11:29,609 - #39 .
INFO  02:11:29,609 - #48 neg
INFO  02:11:29,610 - #42 [
INFO  02:11:29,610 - #48 idx
INFO  02:11:29,610 - #43 ]
INFO  02:11:29,610 - #33 =
INFO  02:11:29,610 - #48 a
INFO  02:11:29,610 - #36 ;
INFO  02:11:29,610 - #45 }
INFO  02:11:29,610 - #48 int
INFO  02:11:29,610 - #48 getp
INFO  02:11:29,610 - #40 (
INFO  02:11:29,610 - #48 int
INFO  02:11:29,610 - #48 idx
INFO  02:11:29,610 - #41 )
INFO  02:11:29,610 - #44 {
INFO  02:11:29,610 - #4 return
INFO  02:11:29,610 - #48 pos
INFO  02:11:29,610 - #42 [
INFO  02:11:29,611 - #48 idx
INFO  02:11:29,611 - #43 ]
INFO  02:11:29,611 - #36 ;
INFO  02:11:29,611 - #45 }
INFO  02:11:29,611 - #48 int
INFO  02:11:29,611 - #48 getn
INFO  02:11:29,611 - #40 (
INFO  02:11:29,611 - #48 int
INFO  02:11:29,611 - #48 idx
INFO  02:11:29,611 - #41 )
INFO  02:11:29,611 - #44 {
INFO  02:11:29,611 - #4 return
INFO  02:11:29,612 - #48 neg
INFO  02:11:29,612 - #42 [
INFO  02:11:29,612 - #48 idx
INFO  02:11:29,612 - #43 ]
INFO  02:11:29,612 - #36 ;
INFO  02:11:29,612 - #45 }
INFO  02:11:29,612 - #45 }
INFO  02:11:29,612 - #45 }
INFO  02:11:29,612 - #48 Table
INFO  02:11:29,612 - #48 val
INFO  02:11:29,612 - #36 ;
INFO  02:11:29,613 - #48 Int
INFO  02:11:29,613 - #48 rows
INFO  02:11:29,613 - #38 ,
INFO  02:11:29,613 - #48 columns
INFO  02:11:29,613 - #36 ;
INFO  02:11:29,614 - #44 {
INFO  02:11:29,614 - #14 void
INFO  02:11:29,614 - #48 f
INFO  02:11:29,614 - #40 (
INFO  02:11:29,615 - #48 char
INFO  02:11:29,615 - #48 ch
INFO  02:11:29,615 - #38 ,
INFO  02:11:29,615 - #48 int
INFO  02:11:29,615 - #48 a
INFO  02:11:29,615 - #38 ,
INFO  02:11:29,615 - #48 int
INFO  02:11:29,615 - #48 arg
INFO  02:11:29,615 - #41 )
INFO  02:11:29,615 - #48 int
INFO  02:11:29,615 - #48 x
INFO  02:11:29,615 - #36 ;
INFO  02:11:29,615 - #44 {
INFO  02:11:29,615 - #48 x
INFO  02:11:29,615 - #33 =
INFO  02:11:29,615 - #48 arg
INFO  02:11:29,615 - #36 ;
INFO  02:11:29,616 - #45 }
INFO  02:11:29,616 - #14 void
INFO  02:11:29,616 - #48 main
INFO  02:11:29,616 - #40 (
INFO  02:11:29,616 - #41 )
INFO  02:11:29,616 - #48 int
INFO  02:11:29,617 - #48 x
INFO  02:11:29,617 - #38 ,
INFO  02:11:29,617 - #48 i
INFO  02:11:29,617 - #36 ;
INFO  02:11:29,617 - #48 char
INFO  02:11:29,617 - #48 c
INFO  02:11:29,617 - #36 ;
INFO  02:11:29,617 - #48 int
INFO  02:11:29,617 - #48 arr
INFO  02:11:29,617 - #42 [
INFO  02:11:29,617 - #43 ]
INFO  02:11:29,617 - #36 ;
INFO  02:11:29,617 - #44 {
INFO  02:11:29,618 - #48 val
INFO  02:11:29,618 - #33 =
INFO  02:11:29,618 - #12 new
INFO  02:11:29,618 - #48 Table
INFO  02:11:29,618 - #40 (
INFO  02:11:29,618 - #47 2
INFO  02:11:29,618 - #41 )
INFO  02:11:29,618 - #36 ;
INFO  02:11:29,618 - #48 arr
INFO  02:11:29,618 - #33 =
INFO  02:11:29,618 - #12 new
INFO  02:11:29,619 - #48 int
INFO  02:11:29,619 - #42 [
INFO  02:11:29,619 - #47 3
INFO  02:11:29,619 - #43 ]
INFO  02:11:29,619 - #36 ;
INFO  02:11:29,619 - #48 i
INFO  02:11:29,619 - #33 =
INFO  02:11:29,619 - #47 0
INFO  02:11:29,619 - #36 ;
INFO  02:11:29,619 - #11 while
INFO  02:11:29,619 - #40 (
INFO  02:11:29,619 - #48 i
INFO  02:11:29,619 - #29 <
INFO  02:11:29,619 - #47 3
INFO  02:11:29,620 - #41 )
INFO  02:11:29,620 - #44 {
INFO  02:11:29,621 - #48 arr
INFO  02:11:29,621 - #42 [
INFO  02:11:29,621 - #48 i
INFO  02:11:29,621 - #43 ]
INFO  02:11:29,621 - #33 =
INFO  02:11:29,621 - #48 i
INFO  02:11:29,621 - #36 ;
INFO  02:11:29,621 - #48 i
INFO  02:11:29,621 - #34 ++
INFO  02:11:29,621 - #36 ;
INFO  02:11:29,621 - #45 }
INFO  02:11:29,621 - #48 arr
INFO  02:11:29,621 - #39 .
INFO  02:11:29,621 - #18 foreach
INFO  02:11:29,621 - #40 (
INFO  02:11:29,621 - #48 x
INFO  02:11:29,621 - #46 =>
INFO  02:11:29,621 - #3 print
INFO  02:11:29,622 - #40 (
INFO  02:11:29,622 - #48 x
INFO  02:11:29,622 - #41 )
INFO  02:11:29,622 - #36 ;
INFO  02:11:29,622 - #41 )
INFO  02:11:29,622 - #36 ;
INFO  02:11:29,622 - #48 val
INFO  02:11:29,622 - #39 .
INFO  02:11:29,622 - #48 pos
INFO  02:11:29,622 - #33 =
INFO  02:11:29,622 - #12 new
INFO  02:11:29,622 - #48 int
INFO  02:11:29,622 - #42 [
INFO  02:11:29,622 - #48 size
INFO  02:11:29,622 - #43 ]
INFO  02:11:29,622 - #36 ;
INFO  02:11:29,622 - #48 val
INFO  02:11:29,622 - #39 .
INFO  02:11:29,622 - #48 neg
INFO  02:11:29,622 - #33 =
INFO  02:11:29,623 - #12 new
INFO  02:11:29,623 - #48 int
INFO  02:11:29,623 - #42 [
INFO  02:11:29,623 - #48 size
INFO  02:11:29,623 - #43 ]
INFO  02:11:29,623 - #36 ;
INFO  02:11:29,623 - #13 read
INFO  02:11:29,623 - #40 (
INFO  02:11:29,623 - #48 x
INFO  02:11:29,623 - #41 )
INFO  02:11:29,623 - #36 ;
INFO  02:11:29,623 - #42 [
INFO  02:11:29,624 - #48 i
INFO  02:11:29,624 - #38 ,
INFO  02:11:29,624 - #38 ,
INFO  02:11:29,625 - #48 x
INFO  02:11:29,625 - #43 ]
INFO  02:11:29,625 - #33 =
INFO  02:11:29,625 - #48 arr
INFO  02:11:29,625 - #36 ;
INFO  02:11:29,625 - #11 while
INFO  02:11:29,626 - #40 (
INFO  02:11:29,626 - #48 i
INFO  02:11:29,626 - #29 <
INFO  02:11:29,626 - #48 size
INFO  02:11:29,626 - #41 )
INFO  02:11:29,626 - #44 {
INFO  02:11:29,626 - #48 val
INFO  02:11:29,626 - #39 .
INFO  02:11:29,626 - #48 putp
INFO  02:11:29,626 - #40 (
INFO  02:11:29,626 - #47 0
INFO  02:11:29,626 - #38 ,
INFO  02:11:29,626 - #48 i
INFO  02:11:29,626 - #41 )
INFO  02:11:29,626 - #36 ;
INFO  02:11:29,626 - #48 val
INFO  02:11:29,627 - #39 .
INFO  02:11:29,627 - #48 putn
INFO  02:11:29,627 - #40 (
INFO  02:11:29,627 - #47 0
INFO  02:11:29,627 - #38 ,
INFO  02:11:29,627 - #48 i
INFO  02:11:29,627 - #41 )
INFO  02:11:29,627 - #36 ;
INFO  02:11:29,627 - #48 i
INFO  02:11:29,627 - #34 ++
INFO  02:11:29,627 - #36 ;
INFO  02:11:29,627 - #45 }
INFO  02:11:29,627 - #48 f
INFO  02:11:29,627 - #40 (
INFO  02:11:29,627 - #48 c
INFO  02:11:29,627 - #38 ,
INFO  02:11:29,627 - #48 x
INFO  02:11:29,627 - #38 ,
INFO  02:11:29,627 - #48 i
INFO  02:11:29,627 - #41 )
INFO  02:11:29,627 - #36 ;
INFO  02:11:29,627 - #13 read
INFO  02:11:29,628 - #40 (
INFO  02:11:29,628 - #48 rows
INFO  02:11:29,628 - #41 )
INFO  02:11:29,628 - #36 ;
INFO  02:11:29,628 - #48 x
INFO  02:11:29,628 - #33 =
INFO  02:11:29,628 - #48 rows
INFO  02:11:29,628 - #36 ;
INFO  02:11:29,628 - #11 while
INFO  02:11:29,628 - #40 (
INFO  02:11:29,628 - #50 true
INFO  02:11:29,628 - #41 )
INFO  02:11:29,628 - #44 {
INFO  02:11:29,629 - #9 if
INFO  02:11:29,629 - #40 (
INFO  02:11:29,629 - #48 x
INFO  02:11:29,629 - #30 <=
INFO  02:11:29,629 - #47 0
INFO  02:11:29,629 - #41 )
INFO  02:11:29,629 - #19 break
INFO  02:11:29,630 - #36 ;
INFO  02:11:29,630 - #9 if
INFO  02:11:29,630 - #40 (
INFO  02:11:29,630 - #47 0
INFO  02:11:29,630 - #30 <=
INFO  02:11:29,630 - #48 x
INFO  02:11:29,630 - #31 &&
INFO  02:11:29,630 - #48 x
INFO  02:11:29,630 - #29 <
INFO  02:11:29,631 - #48 size
INFO  02:11:29,631 - #41 )
INFO  02:11:29,631 - #44 {
INFO  02:11:29,631 - #48 val
INFO  02:11:29,631 - #39 .
INFO  02:11:29,631 - #48 putp
INFO  02:11:29,631 - #40 (
INFO  02:11:29,631 - #48 val
INFO  02:11:29,631 - #39 .
INFO  02:11:29,631 - #48 getp
INFO  02:11:29,631 - #40 (
INFO  02:11:29,631 - #48 x
INFO  02:11:29,631 - #41 )
INFO  02:11:29,631 - #20 +
INFO  02:11:29,631 - #47 1
INFO  02:11:29,632 - #41 )
INFO  02:11:29,633 - #36 ;
INFO  02:11:29,633 - #45 }
INFO  02:11:29,633 - #7 else
INFO  02:11:29,633 - #9 if
INFO  02:11:29,633 - #40 (
INFO  02:11:29,633 - #21 -
INFO  02:11:29,633 - #48 size
INFO  02:11:29,633 - #29 <
INFO  02:11:29,633 - #48 x
INFO  02:11:29,633 - #31 &&
INFO  02:11:29,633 - #48 x
INFO  02:11:29,633 - #29 <
INFO  02:11:29,633 - #47 0
INFO  02:11:29,634 - #41 )
INFO  02:11:29,634 - #44 {
INFO  02:11:29,634 - #48 val
INFO  02:11:29,634 - #39 .
INFO  02:11:29,634 - #48 putn
INFO  02:11:29,634 - #40 (
INFO  02:11:29,634 - #48 val
INFO  02:11:29,634 - #39 .
INFO  02:11:29,634 - #48 getn
INFO  02:11:29,634 - #40 (
INFO  02:11:29,634 - #21 -
INFO  02:11:29,634 - #48 x
INFO  02:11:29,634 - #41 )
INFO  02:11:29,634 - #20 +
INFO  02:11:29,634 - #47 1
INFO  02:11:29,634 - #41 )
INFO  02:11:29,634 - #36 ;
INFO  02:11:29,634 - #45 }
INFO  02:11:29,634 - #13 read
INFO  02:11:29,634 - #40 (
INFO  02:11:29,634 - #48 x
INFO  02:11:29,634 - #41 )
INFO  02:11:29,634 - #36 ;
INFO  02:11:29,634 - #45 }
INFO  02:11:29,634 - #45 }
INFO  02:11:29,634 - #45 }
INFO  02:11:29,635 - rs.ac.bg.etf.pp1.ast.Program@1e9e725a
INFO  02:11:29,635 - ====================================
INFO  02:11:29,638 - Print count calls = 1
