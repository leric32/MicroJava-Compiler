INFO  02:18:42,448 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\pr2.mj
INFO  02:18:42,490 - #2 program
INFO  02:18:42,490 - #48 Program
INFO  02:18:42,490 - #5 class
INFO  02:18:42,491 - #48 A
INFO  02:18:42,491 - #44 {
INFO  02:18:42,492 - #48 int
INFO  02:18:42,492 - #48 x
INFO  02:18:42,493 - #42 [
INFO  02:18:42,493 - #43 ]
INFO  02:18:42,493 - #38 ,
INFO  02:18:42,494 - #48 y
INFO  02:18:42,494 - #42 [
INFO  02:18:42,494 - #43 ]
INFO  02:18:42,495 - #36 ;
INFO  02:18:42,495 - #45 }
INFO  02:18:42,495 - #8 const
INFO  02:18:42,495 - #48 int
INFO  02:18:42,495 - #48 pi
INFO  02:18:42,495 - #33 =
INFO  02:18:42,496 - #47 3
INFO  02:18:42,497 - #38 ,
INFO  02:18:42,498 - #48 e
INFO  02:18:42,498 - #33 =
INFO  02:18:42,498 - #47 2
INFO  02:18:42,498 - #36 ;
INFO  02:18:42,498 - #48 int
INFO  02:18:42,499 - #48 a
INFO  02:18:42,499 - #38 ,
INFO  02:18:42,499 - #48 b
INFO  02:18:42,499 - #36 ;
INFO  02:18:42,500 - #5 class
INFO  02:18:42,500 - #48 B
INFO  02:18:42,500 - #15 extends
INFO  02:18:42,500 - #48 A
INFO  02:18:42,500 - #44 {
INFO  02:18:42,500 - #48 int
INFO  02:18:42,501 - #48 i
INFO  02:18:42,501 - #36 ;
INFO  02:18:42,501 - #44 {
INFO  02:18:42,501 - #48 int
INFO  02:18:42,501 - #48 getValue
INFO  02:18:42,501 - #40 (
INFO  02:18:42,501 - #48 int
INFO  02:18:42,501 - #48 a
INFO  02:18:42,501 - #41 )
INFO  02:18:42,501 - #48 int
INFO  02:18:42,502 - #48 b
INFO  02:18:42,502 - #36 ;
INFO  02:18:42,502 - #48 bool
INFO  02:18:42,502 - #48 c
INFO  02:18:42,502 - #36 ;
INFO  02:18:42,502 - #44 {
INFO  02:18:42,502 - #4 return
INFO  02:18:42,503 - #17 this
INFO  02:18:42,503 - #39 .
INFO  02:18:42,503 - #48 i
INFO  02:18:42,503 - #20 +
INFO  02:18:42,504 - #17 this
INFO  02:18:42,505 - #39 .
INFO  02:18:42,505 - #48 x
INFO  02:18:42,506 - #42 [
INFO  02:18:42,506 - #47 0
INFO  02:18:42,506 - #43 ]
INFO  02:18:42,506 - #20 +
INFO  02:18:42,506 - #48 a
INFO  02:18:42,506 - #36 ;
INFO  02:18:42,507 - #45 }
INFO  02:18:42,507 - #14 void
INFO  02:18:42,508 - #48 m
INFO  02:18:42,508 - #40 (
INFO  02:18:42,508 - #41 )
INFO  02:18:42,508 - #48 int
INFO  02:18:42,508 - #48 a
INFO  02:18:42,508 - #36 ;
INFO  02:18:42,509 - #44 {
INFO  02:18:42,509 - #48 x
INFO  02:18:42,509 - #39 .
INFO  02:18:42,509 - #18 foreach
INFO  02:18:42,509 - #40 (
INFO  02:18:42,509 - #48 a
INFO  02:18:42,509 - #46 =>
INFO  02:18:42,509 - #3 print
INFO  02:18:42,509 - #40 (
INFO  02:18:42,509 - #48 a
INFO  02:18:42,509 - #41 )
INFO  02:18:42,509 - #36 ;
INFO  02:18:42,509 - #41 )
INFO  02:18:42,509 - #36 ;
INFO  02:18:42,509 - #45 }
INFO  02:18:42,510 - #45 }
INFO  02:18:42,510 - #45 }
INFO  02:18:42,510 - #5 class
INFO  02:18:42,510 - #48 C
INFO  02:18:42,510 - #15 extends
INFO  02:18:42,510 - #48 B
INFO  02:18:42,510 - #44 {
INFO  02:18:42,510 - #48 A
INFO  02:18:42,510 - #48 theA
INFO  02:18:42,510 - #36 ;
INFO  02:18:42,510 - #48 int
INFO  02:18:42,510 - #48 a
INFO  02:18:42,510 - #36 ;
INFO  02:18:42,510 - #45 }
INFO  02:18:42,510 - #44 {
INFO  02:18:42,511 - #14 void
INFO  02:18:42,511 - #48 main
INFO  02:18:42,511 - #40 (
INFO  02:18:42,511 - #41 )
INFO  02:18:42,511 - #48 A
INFO  02:18:42,511 - #48 a
INFO  02:18:42,511 - #36 ;
INFO  02:18:42,511 - #48 C
INFO  02:18:42,511 - #48 c
INFO  02:18:42,512 - #36 ;
INFO  02:18:42,512 - #48 int
INFO  02:18:42,512 - #48 i
INFO  02:18:42,512 - #36 ;
INFO  02:18:42,512 - #48 int
INFO  02:18:42,512 - #48 x
INFO  02:18:42,512 - #42 [
INFO  02:18:42,512 - #43 ]
INFO  02:18:42,512 - #36 ;
INFO  02:18:42,512 - #48 char
INFO  02:18:42,512 - #48 ch
INFO  02:18:42,512 - #36 ;
INFO  02:18:42,513 - #44 {
INFO  02:18:42,513 - #48 a
INFO  02:18:42,513 - #33 =
INFO  02:18:42,513 - #12 new
INFO  02:18:42,513 - #48 A
INFO  02:18:42,513 - #40 (
INFO  02:18:42,513 - #41 )
INFO  02:18:42,514 - #36 ;
INFO  02:18:42,514 - #48 a
INFO  02:18:42,514 - #39 .
INFO  02:18:42,514 - #48 x
INFO  02:18:42,514 - #33 =
INFO  02:18:42,515 - #12 new
INFO  02:18:42,515 - #48 int
INFO  02:18:42,515 - #42 [
INFO  02:18:42,515 - #47 5
INFO  02:18:42,515 - #43 ]
INFO  02:18:42,515 - #36 ;
INFO  02:18:42,515 - #48 a
INFO  02:18:42,515 - #39 .
INFO  02:18:42,515 - #48 y
INFO  02:18:42,515 - #33 =
INFO  02:18:42,516 - #12 new
INFO  02:18:42,516 - #48 int
INFO  02:18:42,516 - #42 [
INFO  02:18:42,516 - #47 5
INFO  02:18:42,516 - #43 ]
INFO  02:18:42,516 - #36 ;
INFO  02:18:42,516 - #48 c
INFO  02:18:42,516 - #33 =
INFO  02:18:42,516 - #12 new
INFO  02:18:42,516 - #48 C
INFO  02:18:42,516 - #40 (
INFO  02:18:42,516 - #41 )
INFO  02:18:42,516 - #36 ;
INFO  02:18:42,516 - #48 c
INFO  02:18:42,516 - #39 .
INFO  02:18:42,516 - #48 theA
INFO  02:18:42,516 - #33 =
INFO  02:18:42,517 - #48 a
INFO  02:18:42,517 - #36 ;
INFO  02:18:42,517 - #48 c
INFO  02:18:42,517 - #39 .
INFO  02:18:42,517 - #48 x
INFO  02:18:42,517 - #33 =
INFO  02:18:42,517 - #12 new
INFO  02:18:42,517 - #48 int
INFO  02:18:42,517 - #42 [
INFO  02:18:42,517 - #47 5
INFO  02:18:42,518 - #43 ]
INFO  02:18:42,518 - #36 ;
INFO  02:18:42,518 - #48 x
INFO  02:18:42,518 - #33 =
INFO  02:18:42,518 - #12 new
INFO  02:18:42,518 - #48 int
INFO  02:18:42,518 - #42 [
INFO  02:18:42,518 - #47 3
INFO  02:18:42,518 - #43 ]
INFO  02:18:42,518 - #36 ;
INFO  02:18:42,519 - #13 read
INFO  02:18:42,519 - #40 (
INFO  02:18:42,519 - #48 c
INFO  02:18:42,519 - #39 .
INFO  02:18:42,519 - #48 i
INFO  02:18:42,519 - #41 )
INFO  02:18:42,519 - #36 ;
INFO  02:18:42,519 - #48 i
INFO  02:18:42,519 - #33 =
INFO  02:18:42,519 - #47 0
INFO  02:18:42,520 - #36 ;
INFO  02:18:42,520 - #11 while
INFO  02:18:42,520 - #40 (
INFO  02:18:42,520 - #48 i
INFO  02:18:42,520 - #29 <
INFO  02:18:42,520 - #47 5
INFO  02:18:42,521 - #41 )
INFO  02:18:42,521 - #44 {
INFO  02:18:42,521 - #13 read
INFO  02:18:42,521 - #40 (
INFO  02:18:42,521 - #48 c
INFO  02:18:42,521 - #39 .
INFO  02:18:42,521 - #48 x
INFO  02:18:42,522 - #42 [
INFO  02:18:42,522 - #48 i
INFO  02:18:42,522 - #43 ]
INFO  02:18:42,522 - #41 )
INFO  02:18:42,522 - #36 ;
INFO  02:18:42,522 - #13 read
INFO  02:18:42,522 - #40 (
INFO  02:18:42,522 - #48 c
INFO  02:18:42,522 - #39 .
INFO  02:18:42,522 - #48 theA
INFO  02:18:42,522 - #39 .
INFO  02:18:42,522 - #48 x
INFO  02:18:42,522 - #42 [
INFO  02:18:42,522 - #48 i
INFO  02:18:42,522 - #43 ]
INFO  02:18:42,522 - #41 )
INFO  02:18:42,522 - #36 ;
INFO  02:18:42,522 - #48 i
INFO  02:18:42,522 - #34 ++
INFO  02:18:42,523 - #36 ;
INFO  02:18:42,523 - #45 }
INFO  02:18:42,523 - #42 [
INFO  02:18:42,523 - #48 a
INFO  02:18:42,523 - #38 ,
INFO  02:18:42,523 - #38 ,
INFO  02:18:42,524 - #48 b
INFO  02:18:42,524 - #43 ]
INFO  02:18:42,524 - #33 =
INFO  02:18:42,524 - #48 c
INFO  02:18:42,524 - #39 .
INFO  02:18:42,524 - #48 x
INFO  02:18:42,524 - #36 ;
INFO  02:18:42,525 - #3 print
INFO  02:18:42,525 - #40 (
INFO  02:18:42,525 - #48 c
INFO  02:18:42,525 - #39 .
INFO  02:18:42,525 - #48 getValue
INFO  02:18:42,525 - #40 (
INFO  02:18:42,525 - #48 c
INFO  02:18:42,525 - #39 .
INFO  02:18:42,525 - #48 theA
INFO  02:18:42,525 - #39 .
INFO  02:18:42,525 - #48 x
INFO  02:18:42,525 - #42 [
INFO  02:18:42,525 - #47 0
INFO  02:18:42,525 - #43 ]
INFO  02:18:42,525 - #41 )
INFO  02:18:42,526 - #41 )
INFO  02:18:42,526 - #36 ;
INFO  02:18:42,526 - #48 c
INFO  02:18:42,526 - #39 .
INFO  02:18:42,526 - #48 m
INFO  02:18:42,526 - #40 (
INFO  02:18:42,526 - #41 )
INFO  02:18:42,527 - #36 ;
INFO  02:18:42,527 - #45 }
INFO  02:18:42,528 - #45 }
INFO  02:18:42,530 - rs.ac.bg.etf.pp1.ast.Program@49e202ad
INFO  02:18:42,530 - ====================================
INFO  02:18:42,534 - Print count calls = 2
