INFO  02:25:31,426 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\sem_test.mj
INFO  02:25:31,498 - #2 program
INFO  02:25:31,498 - #47 test301
INFO  02:25:31,498 - #8 const
INFO  02:25:31,501 - #47 int
INFO  02:25:31,501 - #47 nula
INFO  02:25:31,502 - #32 =
INFO  02:25:31,502 - #46 0
INFO  02:25:31,502 - #35 ;
INFO  02:25:31,504 - #8 const
INFO  02:25:31,504 - #47 int
INFO  02:25:31,504 - #47 jedan
INFO  02:25:31,505 - #32 =
INFO  02:25:31,505 - #46 1
INFO  02:25:31,505 - #35 ;
INFO  02:25:31,505 - #8 const
INFO  02:25:31,505 - #47 int
INFO  02:25:31,506 - #47 pet
INFO  02:25:31,506 - #32 =
INFO  02:25:31,506 - #46 5
INFO  02:25:31,506 - #35 ;
INFO  02:25:31,508 - #47 int
INFO  02:25:31,508 - #47 niz
INFO  02:25:31,508 - #41 [
INFO  02:25:31,508 - #42 ]
INFO  02:25:31,508 - #37 ,
INFO  02:25:31,510 - #47 niz2
INFO  02:25:31,511 - #41 [
INFO  02:25:31,511 - #42 ]
INFO  02:25:31,511 - #37 ,
INFO  02:25:31,511 - #47 a
INFO  02:25:31,511 - #37 ,
INFO  02:25:31,512 - #47 b
INFO  02:25:31,512 - #35 ;
INFO  02:25:31,513 - #47 char
INFO  02:25:31,514 - #47 nizch
INFO  02:25:31,514 - #41 [
INFO  02:25:31,514 - #42 ]
INFO  02:25:31,514 - #35 ;
INFO  02:25:31,514 - #43 {
INFO  02:25:31,514 - #14 void
INFO  02:25:31,516 - #47 main
INFO  02:25:31,516 - #39 (
INFO  02:25:31,517 - #40 )
INFO  02:25:31,517 - #47 int
INFO  02:25:31,519 - #47 bodovi
INFO  02:25:31,520 - #35 ;
INFO  02:25:31,520 - #47 bool
INFO  02:25:31,520 - #47 bt
INFO  02:25:31,520 - #35 ;
INFO  02:25:31,520 - #43 {
INFO  02:25:31,521 - #11 while
INFO  02:25:31,521 - #39 (
INFO  02:25:31,521 - #47 bt
INFO  02:25:31,523 - #24 ==
INFO  02:25:31,524 - #49 true
INFO  02:25:31,526 - #40 )
INFO  02:25:31,526 - #43 {
INFO  02:25:31,526 - #18 break
INFO  02:25:31,527 - #35 ;
INFO  02:25:31,527 - #44 }
INFO  02:25:31,528 - #44 }
INFO  02:25:31,528 - #44 }
INFO  02:25:31,538 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      ConstDeclarations(
        ConstDeclarations(
          ConstDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstantValueNumber(
               nula
               0
              ) [ConstantValueNumber]
              EndOfListOfCharDeclarations(
              ) [EndOfListOfCharDeclarations]
            ) [ConstDeclaration]
          ) [ConstDeclarations]
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstantValueNumber(
             jedan
             1
            ) [ConstantValueNumber]
            EndOfListOfCharDeclarations(
            ) [EndOfListOfCharDeclarations]
          ) [ConstDeclaration]
        ) [ConstDeclarations]
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstantValueNumber(
           pet
           5
          ) [ConstantValueNumber]
          EndOfListOfCharDeclarations(
          ) [EndOfListOfCharDeclarations]
        ) [ConstDeclaration]
      ) [ConstDeclarations]
      VarDeclaration(
        Type(
         int
        ) [Type]
        VarDeclarationNotLast(
          NotLastVarDeclarations(
           niz
            VarDeclarationOfArray(
            ) [VarDeclarationOfArray]
          ) [NotLastVarDeclarations]
          VarDeclarationNotLast(
            NotLastVarDeclarations(
             niz2
              VarDeclarationOfArray(
              ) [VarDeclarationOfArray]
            ) [NotLastVarDeclarations]
            VarDeclarationNotLast(
              NotLastVarDeclarations(
               a
                VarDeclarationOfNotArray(
                ) [VarDeclarationOfNotArray]
              ) [NotLastVarDeclarations]
              VarDeclarationLast(
                LastVarDeclarations(
                 b
                  VarDeclarationOfNotArray(
                  ) [VarDeclarationOfNotArray]
                ) [LastVarDeclarations]
              ) [VarDeclarationLast]
            ) [VarDeclarationNotLast]
          ) [VarDeclarationNotLast]
        ) [VarDeclarationNotLast]
      ) [VarDeclaration]
    ) [VarDeclarations]
    VarDeclaration(
      Type(
       char
      ) [Type]
      VarDeclarationLast(
        LastVarDeclarations(
         nizch
          VarDeclarationOfArray(
          ) [VarDeclarationOfArray]
        ) [LastVarDeclarations]
      ) [VarDeclarationLast]
    ) [VarDeclaration]
  ) [VarDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDeclaration(
      VoidMethodTypeName(
       main
      ) [VoidMethodTypeName]
      NoFormalParameters(
      ) [NoFormalParameters]
      MethodVariables(
        MethodVariables(
          MethodWithoutVariables(
          ) [MethodWithoutVariables]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarDeclarationLast(
              LastVarDeclarations(
               bodovi
                VarDeclarationOfNotArray(
                ) [VarDeclarationOfNotArray]
              ) [LastVarDeclarations]
            ) [VarDeclarationLast]
          ) [VarDeclaration]
        ) [MethodVariables]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          VarDeclarationLast(
            LastVarDeclarations(
             bt
              VarDeclarationOfNotArray(
              ) [VarDeclarationOfNotArray]
            ) [LastVarDeclarations]
          ) [VarDeclarationLast]
        ) [VarDeclaration]
      ) [MethodVariables]
      Statements(
        NoStatements(
        ) [NoStatements]
        StatementWhile(
          WhileLoopParen(
          ) [WhileLoopParen]
          ConditionsWithoutOr(
            ConditionsWithoutAnd(
              RelopCondition(
                TermPositiveExpr(
                  Term(
                    SingleFactor(
                      DesignatorFactor(
                        SimpleDesignator(
                         bt
                        ) [SimpleDesignator]
                      ) [DesignatorFactor]
                    ) [SingleFactor]
                  ) [Term]
                ) [TermPositiveExpr]
                EqualOperator(
                ) [EqualOperator]
                TermPositiveExpr(
                  Term(
                    SingleFactor(
                      BooleanConstFactor(
                       true
                      ) [BooleanConstFactor]
                    ) [SingleFactor]
                  ) [Term]
                ) [TermPositiveExpr]
              ) [RelopCondition]
            ) [ConditionsWithoutAnd]
          ) [ConditionsWithoutOr]
          StatementBlock(
            Statements(
              NoStatements(
              ) [NoStatements]
              StatementBreak(
              ) [StatementBreak]
            ) [Statements]
          ) [StatementBlock]
        ) [StatementWhile]
      ) [Statements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  02:25:31,539 - ====================================
INFO  02:25:31,545 - Kreirana je promenjiva niz[]. na liniji 7
INFO  02:25:31,545 - Kreirana je promenjiva niz2[]. na liniji 7
INFO  02:25:31,546 - Kreirana je promenjiva a. na liniji 7
INFO  02:25:31,546 - Kreirana je promenjiva b. na liniji 7
INFO  02:25:31,546 - Kreirana je promenjiva nizch[]. na liniji 8
INFO  02:25:31,546 - Definicija funkcije main na liniji 11
INFO  02:25:31,546 - Kreirana je promenjiva bodovi. na liniji 12
INFO  02:25:31,546 - Kreirana je promenjiva bt. na liniji 13
ERROR 02:25:31,546 - SEMANTICKA GRESKA: Naredba break mora biti u while ili foreach izrazu!
INFO  02:25:31,547 - Print count calls = 0
INFO  02:25:31,547 - ====================================
