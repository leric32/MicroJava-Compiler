INFO  01:12:40,895 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\test302.mj
INFO  01:12:40,942 - #2 program
INFO  01:12:40,942 - #48 test302
INFO  01:12:40,942 - #8 const
INFO  01:12:40,943 - #48 int
INFO  01:12:40,943 - #48 jedan
INFO  01:12:40,943 - #33 =
INFO  01:12:40,943 - #47 1
INFO  01:12:40,943 - #36 ;
INFO  01:12:40,944 - #48 int
INFO  01:12:40,944 - #48 i
INFO  01:12:40,944 - #36 ;
INFO  01:12:40,945 - #48 bool
INFO  01:12:40,945 - #48 ibool
INFO  01:12:40,946 - #36 ;
INFO  01:12:40,946 - #48 int
INFO  01:12:40,946 - #48 niz2
INFO  01:12:40,946 - #36 ;
INFO  01:12:40,946 - #48 int
INFO  01:12:40,946 - #48 niz
INFO  01:12:40,946 - #42 [
INFO  01:12:40,946 - #43 ]
INFO  01:12:40,947 - #36 ;
INFO  01:12:40,948 - #48 int
INFO  01:12:40,948 - #48 a
INFO  01:12:40,948 - #38 ,
INFO  01:12:40,948 - #48 curr
INFO  01:12:40,948 - #36 ;
INFO  01:12:40,949 - #44 {
INFO  01:12:40,949 - #48 int
INFO  01:12:40,950 - #48 sum
INFO  01:12:40,950 - #40 (
INFO  01:12:40,951 - #48 int
INFO  01:12:40,951 - #48 z
INFO  01:12:40,951 - #38 ,
INFO  01:12:40,951 - #48 int
INFO  01:12:40,951 - #48 d
INFO  01:12:40,951 - #41 )
INFO  01:12:40,951 - #44 {
INFO  01:12:40,952 - #4 return
INFO  01:12:40,953 - #48 z
INFO  01:12:40,953 - #20 +
INFO  01:12:40,954 - #48 d
INFO  01:12:40,955 - #36 ;
INFO  01:12:40,955 - #45 }
INFO  01:12:40,956 - #48 int
INFO  01:12:40,956 - #48 inkrement
INFO  01:12:40,956 - #40 (
INFO  01:12:40,956 - #48 int
INFO  01:12:40,956 - #48 a
INFO  01:12:40,956 - #38 ,
INFO  01:12:40,956 - #48 int
INFO  01:12:40,956 - #48 inc
INFO  01:12:40,956 - #41 )
INFO  01:12:40,956 - #48 int
INFO  01:12:40,957 - #48 pom
INFO  01:12:40,957 - #36 ;
INFO  01:12:40,957 - #44 {
INFO  01:12:40,957 - #9 if
INFO  01:12:40,957 - #40 (
INFO  01:12:40,958 - #48 inc
INFO  01:12:40,958 - #25 ==
INFO  01:12:40,958 - #48 jedan
INFO  01:12:40,960 - #41 )
INFO  01:12:40,960 - #48 pom
INFO  01:12:40,960 - #33 =
INFO  01:12:40,960 - #47 1
INFO  01:12:40,961 - #36 ;
INFO  01:12:40,961 - #7 else
INFO  01:12:40,961 - #9 if
INFO  01:12:40,961 - #40 (
INFO  01:12:40,961 - #48 inc
INFO  01:12:40,961 - #25 ==
INFO  01:12:40,961 - #47 2
INFO  01:12:40,961 - #41 )
INFO  01:12:40,962 - #48 pom
INFO  01:12:40,962 - #33 =
INFO  01:12:40,962 - #48 a
INFO  01:12:40,962 - #36 ;
INFO  01:12:40,962 - #4 return
INFO  01:12:40,962 - #48 sum
INFO  01:12:40,962 - #40 (
INFO  01:12:40,962 - #48 a
INFO  01:12:40,962 - #38 ,
INFO  01:12:40,962 - #48 pom
INFO  01:12:40,962 - #41 )
INFO  01:12:40,963 - #36 ;
INFO  01:12:40,963 - #45 }
INFO  01:12:40,963 - #48 bool
INFO  01:12:40,963 - #48 verify
INFO  01:12:40,963 - #40 (
INFO  01:12:40,963 - #41 )
INFO  01:12:40,964 - #44 {
INFO  01:12:40,964 - #3 print
INFO  01:12:40,964 - #40 (
INFO  01:12:40,964 - #49 v
INFO  01:12:40,964 - #41 )
INFO  01:12:40,964 - #36 ;
INFO  01:12:40,964 - #4 return
INFO  01:12:40,964 - #50 false
INFO  01:12:40,965 - #36 ;
INFO  01:12:40,965 - #45 }
INFO  01:12:40,965 - #14 void
INFO  01:12:40,965 - #48 main
INFO  01:12:40,965 - #40 (
INFO  01:12:40,965 - #41 )
INFO  01:12:40,965 - #44 {
INFO  01:12:40,965 - #9 if
INFO  01:12:40,965 - #40 (
INFO  01:12:40,965 - #47 1
INFO  01:12:40,966 - #26 !=
INFO  01:12:40,966 - #47 1
INFO  01:12:40,966 - #41 )
INFO  01:12:40,966 - #3 print
INFO  01:12:40,967 - #40 (
INFO  01:12:40,967 - #21 -
INFO  01:12:40,967 - #47 6
INFO  01:12:40,967 - #41 )
INFO  01:12:40,967 - #36 ;
INFO  01:12:40,967 - #7 else
INFO  01:12:40,967 - #3 print
INFO  01:12:40,967 - #40 (
INFO  01:12:40,967 - #47 0
INFO  01:12:40,967 - #41 )
INFO  01:12:40,968 - #36 ;
INFO  01:12:40,968 - #48 ibool
INFO  01:12:40,968 - #33 =
INFO  01:12:40,968 - #50 false
INFO  01:12:40,968 - #36 ;
INFO  01:12:40,968 - #48 i
INFO  01:12:40,968 - #33 =
INFO  01:12:40,968 - #47 0
INFO  01:12:40,968 - #36 ;
INFO  01:12:40,968 - #11 while
INFO  01:12:40,968 - #40 (
INFO  01:12:40,968 - #48 i
INFO  01:12:40,968 - #29 <
INFO  01:12:40,968 - #47 5
INFO  01:12:40,969 - #41 )
INFO  01:12:40,969 - #44 {
INFO  01:12:40,969 - #9 if
INFO  01:12:40,969 - #40 (
INFO  01:12:40,969 - #48 i
INFO  01:12:40,969 - #25 ==
INFO  01:12:40,969 - #47 2
INFO  01:12:40,969 - #41 )
INFO  01:12:40,969 - #48 ibool
INFO  01:12:40,969 - #33 =
INFO  01:12:40,969 - #50 true
INFO  01:12:40,969 - #36 ;
INFO  01:12:40,970 - #48 i
INFO  01:12:40,970 - #34 ++
INFO  01:12:40,970 - #36 ;
INFO  01:12:40,970 - #45 }
INFO  01:12:40,970 - #9 if
INFO  01:12:40,970 - #40 (
INFO  01:12:40,970 - #48 ibool
INFO  01:12:40,970 - #41 )
INFO  01:12:40,970 - #9 if
INFO  01:12:40,971 - #40 (
INFO  01:12:40,971 - #48 i
INFO  01:12:40,971 - #25 ==
INFO  01:12:40,971 - #47 5
INFO  01:12:40,971 - #41 )
INFO  01:12:40,971 - #3 print
INFO  01:12:40,971 - #40 (
INFO  01:12:40,971 - #47 1
INFO  01:12:40,971 - #41 )
INFO  01:12:40,971 - #36 ;
INFO  01:12:40,971 - #7 else
INFO  01:12:40,971 - #3 print
INFO  01:12:40,972 - #40 (
INFO  01:12:40,972 - #21 -
INFO  01:12:40,972 - #47 1
INFO  01:12:40,972 - #41 )
INFO  01:12:40,972 - #36 ;
INFO  01:12:40,972 - #48 a
INFO  01:12:40,972 - #33 =
INFO  01:12:40,972 - #47 2
INFO  01:12:40,972 - #36 ;
INFO  01:12:40,972 - #48 niz
INFO  01:12:40,972 - #33 =
INFO  01:12:40,972 - #12 new
INFO  01:12:40,973 - #48 int
INFO  01:12:40,973 - #42 [
ERROR 01:12:40,973 - 
Sintaksna greska na liniji 54
ERROR 01:12:40,973 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 54
