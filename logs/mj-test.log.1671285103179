INFO  14:51:34,331 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\pr1.mj
INFO  14:51:34,425 - #2 program
INFO  14:51:34,425 - #48 p
INFO  14:51:34,425 - #8 const
INFO  14:51:34,427 - #48 int
INFO  14:51:34,427 - #48 size
INFO  14:51:34,428 - #33 =
INFO  14:51:34,428 - #47 10
INFO  14:51:34,428 - #36 ;
INFO  14:51:34,429 - #5 class
INFO  14:51:34,430 - #48 Table
INFO  14:51:34,430 - #44 {
INFO  14:51:34,430 - #48 int
INFO  14:51:34,432 - #48 pos
INFO  14:51:34,432 - #42 [
INFO  14:51:34,432 - #43 ]
INFO  14:51:34,432 - #38 ,
INFO  14:51:34,433 - #48 neg
INFO  14:51:34,434 - #42 [
INFO  14:51:34,434 - #43 ]
INFO  14:51:34,434 - #38 ,
INFO  14:51:34,435 - #48 factor
INFO  14:51:34,435 - #36 ;
INFO  14:51:34,435 - #44 {
INFO  14:51:34,436 - #48 Table
INFO  14:51:34,436 - #40 (
INFO  14:51:34,436 - #48 int
INFO  14:51:34,436 - #48 factor
INFO  14:51:34,436 - #41 )
INFO  14:51:34,437 - #44 {
INFO  14:51:34,438 - #17 this
INFO  14:51:34,438 - #39 .
INFO  14:51:34,439 - #48 factor
INFO  14:51:34,439 - #33 =
INFO  14:51:34,439 - #48 factor
INFO  14:51:34,439 - #36 ;
INFO  14:51:34,440 - #45 }
INFO  14:51:34,441 - #14 void
INFO  14:51:34,441 - #48 putp
INFO  14:51:34,441 - #40 (
INFO  14:51:34,442 - #48 int
INFO  14:51:34,442 - #48 a
INFO  14:51:34,442 - #38 ,
INFO  14:51:34,442 - #48 int
INFO  14:51:34,442 - #48 idx
INFO  14:51:34,442 - #41 )
INFO  14:51:34,442 - #44 {
INFO  14:51:34,444 - #17 this
INFO  14:51:34,444 - #39 .
INFO  14:51:34,444 - #48 pos
INFO  14:51:34,444 - #42 [
INFO  14:51:34,445 - #48 idx
INFO  14:51:34,445 - #43 ]
INFO  14:51:34,445 - #33 =
INFO  14:51:34,445 - #48 a
INFO  14:51:34,445 - #36 ;
INFO  14:51:34,445 - #45 }
INFO  14:51:34,446 - #14 void
INFO  14:51:34,446 - #48 putn
INFO  14:51:34,446 - #40 (
INFO  14:51:34,446 - #48 int
INFO  14:51:34,447 - #48 a
INFO  14:51:34,447 - #38 ,
INFO  14:51:34,447 - #48 int
INFO  14:51:34,447 - #48 idx
INFO  14:51:34,447 - #41 )
INFO  14:51:34,447 - #44 {
INFO  14:51:34,447 - #17 this
INFO  14:51:34,447 - #39 .
INFO  14:51:34,447 - #48 neg
INFO  14:51:34,448 - #42 [
INFO  14:51:34,448 - #48 idx
INFO  14:51:34,448 - #43 ]
INFO  14:51:34,448 - #33 =
INFO  14:51:34,448 - #48 a
INFO  14:51:34,448 - #36 ;
INFO  14:51:34,448 - #45 }
INFO  14:51:34,449 - #48 int
INFO  14:51:34,449 - #48 getp
INFO  14:51:34,449 - #40 (
INFO  14:51:34,449 - #48 int
INFO  14:51:34,449 - #48 idx
INFO  14:51:34,449 - #41 )
INFO  14:51:34,449 - #44 {
INFO  14:51:34,450 - #4 return
INFO  14:51:34,450 - #48 pos
INFO  14:51:34,450 - #42 [
INFO  14:51:34,450 - #48 idx
INFO  14:51:34,450 - #43 ]
INFO  14:51:34,450 - #36 ;
INFO  14:51:34,450 - #45 }
INFO  14:51:34,451 - #48 int
INFO  14:51:34,451 - #48 getn
INFO  14:51:34,451 - #40 (
INFO  14:51:34,451 - #48 int
INFO  14:51:34,451 - #48 idx
INFO  14:51:34,451 - #41 )
INFO  14:51:34,451 - #44 {
INFO  14:51:34,451 - #4 return
INFO  14:51:34,452 - #48 neg
INFO  14:51:34,452 - #42 [
INFO  14:51:34,452 - #48 idx
INFO  14:51:34,452 - #43 ]
INFO  14:51:34,452 - #36 ;
INFO  14:51:34,452 - #45 }
INFO  14:51:34,452 - #45 }
INFO  14:51:34,452 - #45 }
INFO  14:51:34,452 - #48 Table
INFO  14:51:34,453 - #48 val
INFO  14:51:34,453 - #36 ;
INFO  14:51:34,453 - #48 Int
INFO  14:51:34,454 - #48 rows
INFO  14:51:34,454 - #38 ,
INFO  14:51:34,455 - #48 columns
INFO  14:51:34,455 - #36 ;
INFO  14:51:34,455 - #44 {
INFO  14:51:34,455 - #14 void
INFO  14:51:34,456 - #48 f
INFO  14:51:34,456 - #40 (
INFO  14:51:34,456 - #48 char
INFO  14:51:34,457 - #48 ch
INFO  14:51:34,457 - #38 ,
INFO  14:51:34,457 - #48 int
INFO  14:51:34,457 - #48 a
INFO  14:51:34,457 - #38 ,
INFO  14:51:34,457 - #48 int
INFO  14:51:34,457 - #48 arg
INFO  14:51:34,457 - #41 )
INFO  14:51:34,457 - #48 int
INFO  14:51:34,457 - #48 x
INFO  14:51:34,458 - #36 ;
INFO  14:51:34,458 - #44 {
INFO  14:51:34,458 - #48 x
INFO  14:51:34,458 - #33 =
INFO  14:51:34,458 - #48 arg
INFO  14:51:34,458 - #36 ;
INFO  14:51:34,459 - #45 }
INFO  14:51:34,459 - #14 void
INFO  14:51:34,459 - #48 main
INFO  14:51:34,460 - #40 (
INFO  14:51:34,460 - #41 )
INFO  14:51:34,460 - #48 int
INFO  14:51:34,461 - #48 x
INFO  14:51:34,461 - #38 ,
INFO  14:51:34,461 - #48 i
INFO  14:51:34,461 - #36 ;
INFO  14:51:34,461 - #48 char
INFO  14:51:34,461 - #48 c
INFO  14:51:34,461 - #36 ;
INFO  14:51:34,461 - #48 int
INFO  14:51:34,462 - #48 arr
INFO  14:51:34,462 - #42 [
INFO  14:51:34,462 - #43 ]
INFO  14:51:34,462 - #36 ;
INFO  14:51:34,462 - #44 {
INFO  14:51:34,462 - #48 val
INFO  14:51:34,462 - #33 =
INFO  14:51:34,462 - #12 new
INFO  14:51:34,462 - #48 Table
INFO  14:51:34,463 - #40 (
INFO  14:51:34,463 - #47 2
INFO  14:51:34,463 - #41 )
INFO  14:51:34,463 - #36 ;
INFO  14:51:34,464 - #48 arr
INFO  14:51:34,464 - #33 =
INFO  14:51:34,464 - #12 new
INFO  14:51:34,464 - #48 int
INFO  14:51:34,464 - #42 [
INFO  14:51:34,464 - #47 3
INFO  14:51:34,465 - #43 ]
INFO  14:51:34,465 - #36 ;
INFO  14:51:34,465 - #48 i
INFO  14:51:34,465 - #33 =
INFO  14:51:34,465 - #47 0
INFO  14:51:34,465 - #36 ;
INFO  14:51:34,465 - #11 while
INFO  14:51:34,466 - #40 (
INFO  14:51:34,466 - #48 i
INFO  14:51:34,467 - #29 <
INFO  14:51:34,468 - #47 3
INFO  14:51:34,469 - #41 )
INFO  14:51:34,470 - #44 {
INFO  14:51:34,470 - #48 arr
INFO  14:51:34,471 - #42 [
INFO  14:51:34,471 - #48 i
INFO  14:51:34,471 - #43 ]
INFO  14:51:34,471 - #33 =
INFO  14:51:34,471 - #48 i
INFO  14:51:34,471 - #36 ;
INFO  14:51:34,471 - #48 i
INFO  14:51:34,472 - #34 ++
INFO  14:51:34,472 - #36 ;
INFO  14:51:34,472 - #45 }
INFO  14:51:34,472 - #48 arr
INFO  14:51:34,472 - #39 .
INFO  14:51:34,472 - #18 foreach
INFO  14:51:34,472 - #40 (
INFO  14:51:34,473 - #48 x
INFO  14:51:34,473 - #46 =>
INFO  14:51:34,473 - #3 print
INFO  14:51:34,473 - #40 (
INFO  14:51:34,473 - #48 x
INFO  14:51:34,473 - #41 )
INFO  14:51:34,473 - #36 ;
INFO  14:51:34,473 - #41 )
INFO  14:51:34,473 - #36 ;
INFO  14:51:34,474 - #48 val
INFO  14:51:34,474 - #39 .
INFO  14:51:34,475 - #48 pos
INFO  14:51:34,475 - #33 =
INFO  14:51:34,475 - #12 new
INFO  14:51:34,475 - #48 int
INFO  14:51:34,475 - #42 [
INFO  14:51:34,476 - #48 size
INFO  14:51:34,476 - #43 ]
INFO  14:51:34,476 - #36 ;
INFO  14:51:34,476 - #48 val
INFO  14:51:34,476 - #39 .
INFO  14:51:34,476 - #48 neg
INFO  14:51:34,476 - #33 =
INFO  14:51:34,476 - #12 new
INFO  14:51:34,477 - #48 int
INFO  14:51:34,477 - #42 [
INFO  14:51:34,477 - #48 size
INFO  14:51:34,477 - #43 ]
INFO  14:51:34,477 - #36 ;
INFO  14:51:34,477 - #13 read
INFO  14:51:34,477 - #40 (
INFO  14:51:34,478 - #48 x
INFO  14:51:34,478 - #41 )
INFO  14:51:34,478 - #36 ;
INFO  14:51:34,478 - #42 [
INFO  14:51:34,478 - #48 i
INFO  14:51:34,478 - #38 ,
INFO  14:51:34,479 - #38 ,
INFO  14:51:34,480 - #48 x
INFO  14:51:34,480 - #43 ]
INFO  14:51:34,480 - #33 =
INFO  14:51:34,480 - #48 arr
INFO  14:51:34,480 - #36 ;
INFO  14:51:34,480 - #11 while
INFO  14:51:34,481 - #40 (
INFO  14:51:34,481 - #48 i
INFO  14:51:34,481 - #29 <
INFO  14:51:34,481 - #48 size
INFO  14:51:34,481 - #41 )
INFO  14:51:34,481 - #44 {
INFO  14:51:34,481 - #48 val
INFO  14:51:34,481 - #39 .
INFO  14:51:34,482 - #48 putp
INFO  14:51:34,482 - #40 (
INFO  14:51:34,482 - #47 0
INFO  14:51:34,482 - #38 ,
INFO  14:51:34,482 - #48 i
INFO  14:51:34,482 - #41 )
INFO  14:51:34,482 - #36 ;
INFO  14:51:34,484 - #48 val
INFO  14:51:34,484 - #39 .
INFO  14:51:34,484 - #48 putn
INFO  14:51:34,484 - #40 (
INFO  14:51:34,484 - #47 0
INFO  14:51:34,484 - #38 ,
INFO  14:51:34,485 - #48 i
INFO  14:51:34,485 - #41 )
INFO  14:51:34,485 - #36 ;
INFO  14:51:34,485 - #48 i
INFO  14:51:34,485 - #34 ++
INFO  14:51:34,485 - #36 ;
INFO  14:51:34,485 - #45 }
INFO  14:51:34,486 - #48 f
INFO  14:51:34,486 - #40 (
INFO  14:51:34,486 - #48 c
INFO  14:51:34,486 - #38 ,
INFO  14:51:34,486 - #48 x
INFO  14:51:34,486 - #38 ,
INFO  14:51:34,486 - #48 i
INFO  14:51:34,486 - #41 )
INFO  14:51:34,486 - #36 ;
INFO  14:51:34,487 - #13 read
INFO  14:51:34,487 - #40 (
INFO  14:51:34,487 - #48 rows
INFO  14:51:34,487 - #41 )
INFO  14:51:34,487 - #36 ;
INFO  14:51:34,487 - #48 x
INFO  14:51:34,487 - #33 =
INFO  14:51:34,487 - #48 rows
INFO  14:51:34,487 - #36 ;
INFO  14:51:34,487 - #11 while
INFO  14:51:34,487 - #40 (
INFO  14:51:34,487 - #50 true
INFO  14:51:34,488 - #41 )
INFO  14:51:34,488 - #44 {
INFO  14:51:34,488 - #9 if
INFO  14:51:34,488 - #40 (
INFO  14:51:34,488 - #48 x
INFO  14:51:34,488 - #30 <=
INFO  14:51:34,488 - #47 0
INFO  14:51:34,489 - #41 )
INFO  14:51:34,489 - #19 break
INFO  14:51:34,489 - #36 ;
INFO  14:51:34,489 - #9 if
INFO  14:51:34,491 - #40 (
INFO  14:51:34,492 - #47 0
INFO  14:51:34,492 - #30 <=
INFO  14:51:34,492 - #48 x
INFO  14:51:34,492 - #31 &&
INFO  14:51:34,492 - #48 x
INFO  14:51:34,492 - #29 <
INFO  14:51:34,492 - #48 size
INFO  14:51:34,492 - #41 )
INFO  14:51:34,493 - #44 {
INFO  14:51:34,496 - #48 val
INFO  14:51:34,496 - #39 .
INFO  14:51:34,496 - #48 putp
INFO  14:51:34,496 - #40 (
INFO  14:51:34,497 - #48 val
INFO  14:51:34,497 - #39 .
INFO  14:51:34,497 - #48 getp
INFO  14:51:34,497 - #40 (
INFO  14:51:34,497 - #48 x
INFO  14:51:34,497 - #41 )
INFO  14:51:34,497 - #20 +
INFO  14:51:34,497 - #47 1
INFO  14:51:34,499 - #41 )
INFO  14:51:34,503 - #36 ;
INFO  14:51:34,503 - #45 }
INFO  14:51:34,503 - #7 else
INFO  14:51:34,503 - #9 if
INFO  14:51:34,503 - #40 (
INFO  14:51:34,503 - #21 -
INFO  14:51:34,504 - #48 size
INFO  14:51:34,504 - #29 <
INFO  14:51:34,504 - #48 x
INFO  14:51:34,504 - #31 &&
INFO  14:51:34,504 - #48 x
INFO  14:51:34,504 - #29 <
INFO  14:51:34,505 - #47 0
INFO  14:51:34,506 - #41 )
INFO  14:51:34,506 - #44 {
INFO  14:51:34,506 - #48 val
INFO  14:51:34,506 - #39 .
INFO  14:51:34,506 - #48 putn
INFO  14:51:34,506 - #40 (
INFO  14:51:34,506 - #48 val
INFO  14:51:34,506 - #39 .
INFO  14:51:34,506 - #48 getn
INFO  14:51:34,506 - #40 (
INFO  14:51:34,506 - #21 -
INFO  14:51:34,506 - #48 x
INFO  14:51:34,506 - #41 )
INFO  14:51:34,506 - #20 +
INFO  14:51:34,507 - #47 1
INFO  14:51:34,507 - #41 )
INFO  14:51:34,507 - #36 ;
INFO  14:51:34,507 - #45 }
INFO  14:51:34,507 - #13 read
INFO  14:51:34,507 - #40 (
INFO  14:51:34,507 - #48 x
INFO  14:51:34,507 - #41 )
INFO  14:51:34,508 - #36 ;
INFO  14:51:34,508 - #45 }
INFO  14:51:34,508 - #45 }
INFO  14:51:34,508 - #45 }
INFO  14:51:34,510 - rs.ac.bg.etf.pp1.ast.Program@473b46c3
INFO  14:51:34,510 - ====================================
INFO  14:51:34,514 - Print count calls = 1
