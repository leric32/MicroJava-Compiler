INFO  01:53:47,421 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\test302.mj
INFO  01:53:47,465 - #2 program
INFO  01:53:47,465 - #48 test302
INFO  01:53:47,465 - #8 const
INFO  01:53:47,466 - #48 int
INFO  01:53:47,466 - #48 jedan
INFO  01:53:47,468 - #33 =
INFO  01:53:47,468 - #47 1
INFO  01:53:47,468 - #36 ;
INFO  01:53:47,468 - #48 int
INFO  01:53:47,469 - #48 i
INFO  01:53:47,469 - #36 ;
INFO  01:53:47,470 - #48 bool
INFO  01:53:47,470 - #48 ibool
INFO  01:53:47,471 - #36 ;
INFO  01:53:47,471 - #48 int
INFO  01:53:47,471 - #48 niz2
INFO  01:53:47,471 - #36 ;
INFO  01:53:47,471 - #48 int
INFO  01:53:47,471 - #48 niz
INFO  01:53:47,473 - #42 [
INFO  01:53:47,473 - #43 ]
INFO  01:53:47,473 - #36 ;
INFO  01:53:47,474 - #48 int
INFO  01:53:47,474 - #48 a
INFO  01:53:47,474 - #38 ,
INFO  01:53:47,474 - #48 curr
INFO  01:53:47,474 - #36 ;
INFO  01:53:47,474 - #44 {
INFO  01:53:47,474 - #48 int
INFO  01:53:47,475 - #48 sum
INFO  01:53:47,475 - #40 (
INFO  01:53:47,476 - #48 int
INFO  01:53:47,476 - #48 z
INFO  01:53:47,476 - #38 ,
INFO  01:53:47,476 - #48 int
INFO  01:53:47,476 - #48 d
INFO  01:53:47,476 - #41 )
INFO  01:53:47,477 - #44 {
INFO  01:53:47,477 - #4 return
INFO  01:53:47,478 - #48 z
INFO  01:53:47,478 - #20 +
INFO  01:53:47,479 - #48 d
INFO  01:53:47,480 - #36 ;
INFO  01:53:47,481 - #45 }
INFO  01:53:47,481 - #48 int
INFO  01:53:47,481 - #48 inkrement
INFO  01:53:47,481 - #40 (
INFO  01:53:47,481 - #48 int
INFO  01:53:47,481 - #48 a
INFO  01:53:47,481 - #38 ,
INFO  01:53:47,482 - #48 int
INFO  01:53:47,482 - #48 inc
INFO  01:53:47,482 - #41 )
INFO  01:53:47,482 - #48 int
INFO  01:53:47,482 - #48 pom
INFO  01:53:47,482 - #36 ;
INFO  01:53:47,482 - #44 {
INFO  01:53:47,482 - #9 if
INFO  01:53:47,482 - #40 (
INFO  01:53:47,482 - #48 inc
INFO  01:53:47,482 - #25 ==
INFO  01:53:47,482 - #48 jedan
INFO  01:53:47,483 - #41 )
INFO  01:53:47,484 - #48 pom
INFO  01:53:47,484 - #33 =
INFO  01:53:47,484 - #47 1
INFO  01:53:47,484 - #36 ;
INFO  01:53:47,484 - #7 else
INFO  01:53:47,484 - #9 if
INFO  01:53:47,484 - #40 (
INFO  01:53:47,484 - #48 inc
INFO  01:53:47,485 - #25 ==
INFO  01:53:47,485 - #47 2
INFO  01:53:47,485 - #41 )
INFO  01:53:47,485 - #48 pom
INFO  01:53:47,485 - #33 =
INFO  01:53:47,485 - #48 a
INFO  01:53:47,485 - #36 ;
INFO  01:53:47,485 - #4 return
INFO  01:53:47,485 - #48 sum
INFO  01:53:47,485 - #40 (
INFO  01:53:47,485 - #48 a
INFO  01:53:47,485 - #38 ,
INFO  01:53:47,485 - #48 pom
INFO  01:53:47,485 - #41 )
INFO  01:53:47,485 - #36 ;
INFO  01:53:47,486 - #45 }
INFO  01:53:47,486 - #48 bool
INFO  01:53:47,486 - #48 verify
INFO  01:53:47,486 - #40 (
INFO  01:53:47,486 - #41 )
INFO  01:53:47,486 - #44 {
INFO  01:53:47,486 - #3 print
INFO  01:53:47,487 - #40 (
INFO  01:53:47,487 - #49 v
INFO  01:53:47,487 - #41 )
INFO  01:53:47,487 - #36 ;
INFO  01:53:47,487 - #4 return
INFO  01:53:47,487 - #50 false
INFO  01:53:47,487 - #36 ;
INFO  01:53:47,488 - #45 }
INFO  01:53:47,488 - #14 void
INFO  01:53:47,488 - #48 main
INFO  01:53:47,488 - #40 (
INFO  01:53:47,488 - #41 )
INFO  01:53:47,488 - #44 {
INFO  01:53:47,488 - #9 if
INFO  01:53:47,488 - #40 (
INFO  01:53:47,488 - #47 1
INFO  01:53:47,489 - #26 !=
INFO  01:53:47,489 - #47 1
INFO  01:53:47,489 - #41 )
INFO  01:53:47,489 - #3 print
INFO  01:53:47,489 - #40 (
INFO  01:53:47,489 - #21 -
INFO  01:53:47,489 - #47 6
INFO  01:53:47,490 - #41 )
INFO  01:53:47,490 - #36 ;
INFO  01:53:47,490 - #7 else
INFO  01:53:47,490 - #3 print
INFO  01:53:47,490 - #40 (
INFO  01:53:47,490 - #47 0
INFO  01:53:47,490 - #41 )
INFO  01:53:47,490 - #36 ;
INFO  01:53:47,490 - #48 ibool
INFO  01:53:47,490 - #33 =
INFO  01:53:47,490 - #50 false
INFO  01:53:47,491 - #36 ;
INFO  01:53:47,491 - #48 i
INFO  01:53:47,491 - #33 =
INFO  01:53:47,491 - #47 0
INFO  01:53:47,491 - #36 ;
INFO  01:53:47,491 - #11 while
INFO  01:53:47,491 - #40 (
INFO  01:53:47,491 - #48 i
INFO  01:53:47,491 - #29 <
INFO  01:53:47,492 - #47 5
INFO  01:53:47,492 - #41 )
INFO  01:53:47,492 - #44 {
INFO  01:53:47,492 - #9 if
INFO  01:53:47,492 - #40 (
INFO  01:53:47,493 - #48 i
INFO  01:53:47,493 - #25 ==
INFO  01:53:47,493 - #47 2
INFO  01:53:47,493 - #41 )
INFO  01:53:47,493 - #48 ibool
INFO  01:53:47,493 - #33 =
INFO  01:53:47,493 - #50 true
INFO  01:53:47,493 - #36 ;
INFO  01:53:47,493 - #48 i
INFO  01:53:47,493 - #34 ++
INFO  01:53:47,493 - #36 ;
INFO  01:53:47,493 - #45 }
INFO  01:53:47,493 - #9 if
INFO  01:53:47,493 - #40 (
INFO  01:53:47,493 - #48 ibool
INFO  01:53:47,494 - #41 )
INFO  01:53:47,494 - #9 if
INFO  01:53:47,494 - #40 (
INFO  01:53:47,494 - #48 i
INFO  01:53:47,494 - #25 ==
INFO  01:53:47,494 - #47 5
INFO  01:53:47,494 - #41 )
INFO  01:53:47,494 - #3 print
INFO  01:53:47,494 - #40 (
INFO  01:53:47,494 - #47 1
INFO  01:53:47,494 - #41 )
INFO  01:53:47,494 - #36 ;
INFO  01:53:47,494 - #7 else
INFO  01:53:47,494 - #3 print
INFO  01:53:47,495 - #40 (
INFO  01:53:47,495 - #21 -
INFO  01:53:47,495 - #47 1
INFO  01:53:47,495 - #41 )
INFO  01:53:47,495 - #36 ;
INFO  01:53:47,495 - #48 a
INFO  01:53:47,495 - #33 =
INFO  01:53:47,495 - #47 2
INFO  01:53:47,495 - #36 ;
INFO  01:53:47,495 - #48 niz
INFO  01:53:47,495 - #33 =
INFO  01:53:47,495 - #12 new
INFO  01:53:47,495 - #48 int
INFO  01:53:47,495 - #42 [
INFO  01:53:47,495 - #47 3
INFO  01:53:47,495 - #43 ]
INFO  01:53:47,496 - #36 ;
INFO  01:53:47,496 - #48 niz
INFO  01:53:47,496 - #42 [
INFO  01:53:47,496 - #47 0
INFO  01:53:47,496 - #43 ]
INFO  01:53:47,496 - #33 =
INFO  01:53:47,496 - #47 1
INFO  01:53:47,496 - #22 *
INFO  01:53:47,496 - #48 a
INFO  01:53:47,497 - #36 ;
INFO  01:53:47,498 - #48 niz
INFO  01:53:47,498 - #42 [
INFO  01:53:47,498 - #47 1
INFO  01:53:47,498 - #43 ]
INFO  01:53:47,498 - #33 =
INFO  01:53:47,498 - #47 2
INFO  01:53:47,498 - #22 *
INFO  01:53:47,498 - #48 a
INFO  01:53:47,498 - #36 ;
INFO  01:53:47,498 - #48 niz
INFO  01:53:47,498 - #42 [
INFO  01:53:47,498 - #47 2
INFO  01:53:47,498 - #43 ]
INFO  01:53:47,498 - #33 =
INFO  01:53:47,498 - #48 sum
INFO  01:53:47,498 - #40 (
INFO  01:53:47,498 - #48 niz
INFO  01:53:47,499 - #42 [
INFO  01:53:47,499 - #47 1
INFO  01:53:47,499 - #43 ]
INFO  01:53:47,499 - #38 ,
INFO  01:53:47,499 - #48 niz
INFO  01:53:47,499 - #42 [
INFO  01:53:47,499 - #47 0
INFO  01:53:47,499 - #43 ]
INFO  01:53:47,499 - #41 )
INFO  01:53:47,499 - #22 *
INFO  01:53:47,499 - #48 a
INFO  01:53:47,499 - #20 +
INFO  01:53:47,499 - #47 1
INFO  01:53:47,499 - #36 ;
INFO  01:53:47,499 - #9 if
INFO  01:53:47,499 - #40 (
INFO  01:53:47,499 - #48 verify
INFO  01:53:47,499 - #40 (
INFO  01:53:47,500 - #41 )
INFO  01:53:47,500 - #32 ||
INFO  01:53:47,500 - #48 niz
INFO  01:53:47,500 - #42 [
INFO  01:53:47,500 - #47 2
INFO  01:53:47,500 - #43 ]
INFO  01:53:47,500 - #25 ==
INFO  01:53:47,500 - #47 4
INFO  01:53:47,500 - #41 )
INFO  01:53:47,501 - #3 print
INFO  01:53:47,501 - #40 (
INFO  01:53:47,501 - #48 ord
INFO  01:53:47,501 - #40 (
INFO  01:53:47,501 - #49 A
INFO  01:53:47,501 - #41 )
INFO  01:53:47,501 - #41 )
INFO  01:53:47,501 - #36 ;
INFO  01:53:47,501 - #7 else
INFO  01:53:47,501 - #3 print
INFO  01:53:47,501 - #40 (
INFO  01:53:47,501 - #48 ord
INFO  01:53:47,501 - #40 (
INFO  01:53:47,501 - #49 a
INFO  01:53:47,501 - #41 )
INFO  01:53:47,502 - #41 )
INFO  01:53:47,502 - #36 ;
INFO  01:53:47,502 - #3 print
INFO  01:53:47,502 - #40 (
INFO  01:53:47,502 - #48 eol
INFO  01:53:47,502 - #41 )
INFO  01:53:47,502 - #36 ;
INFO  01:53:47,502 - #48 i
INFO  01:53:47,502 - #33 =
INFO  01:53:47,502 - #47 0
INFO  01:53:47,502 - #36 ;
INFO  01:53:47,503 - #11 while
INFO  01:53:47,503 - #40 (
INFO  01:53:47,503 - #48 i
INFO  01:53:47,503 - #29 <
INFO  01:53:47,503 - #47 10
INFO  01:53:47,503 - #41 )
INFO  01:53:47,503 - #44 {
INFO  01:53:47,503 - #9 if
INFO  01:53:47,503 - #40 (
INFO  01:53:47,503 - #48 i
INFO  01:53:47,503 - #25 ==
INFO  01:53:47,503 - #47 3
INFO  01:53:47,503 - #41 )
INFO  01:53:47,503 - #44 {
INFO  01:53:47,504 - #48 i
INFO  01:53:47,504 - #34 ++
INFO  01:53:47,504 - #36 ;
INFO  01:53:47,504 - #16 continue
INFO  01:53:47,504 - #36 ;
INFO  01:53:47,504 - #45 }
INFO  01:53:47,505 - #9 if
INFO  01:53:47,505 - #40 (
INFO  01:53:47,505 - #48 i
INFO  01:53:47,505 - #25 ==
INFO  01:53:47,505 - #47 4
INFO  01:53:47,505 - #41 )
INFO  01:53:47,505 - #19 break
INFO  01:53:47,505 - #36 ;
INFO  01:53:47,505 - #48 i
INFO  01:53:47,506 - #33 =
INFO  01:53:47,506 - #48 inkrement
INFO  01:53:47,506 - #40 (
INFO  01:53:47,506 - #48 i
INFO  01:53:47,506 - #38 ,
INFO  01:53:47,507 - #47 1
INFO  01:53:47,507 - #41 )
INFO  01:53:47,507 - #36 ;
INFO  01:53:47,507 - #45 }
INFO  01:53:47,507 - #9 if
INFO  01:53:47,507 - #40 (
INFO  01:53:47,507 - #48 i
INFO  01:53:47,507 - #25 ==
INFO  01:53:47,507 - #47 3
INFO  01:53:47,507 - #31 &&
INFO  01:53:47,507 - #48 verify
INFO  01:53:47,507 - #40 (
INFO  01:53:47,507 - #41 )
INFO  01:53:47,508 - #41 )
INFO  01:53:47,508 - #3 print
INFO  01:53:47,508 - #40 (
INFO  01:53:47,508 - #21 -
INFO  01:53:47,508 - #47 4
INFO  01:53:47,508 - #41 )
INFO  01:53:47,508 - #36 ;
INFO  01:53:47,508 - #7 else
INFO  01:53:47,508 - #3 print
INFO  01:53:47,508 - #40 (
INFO  01:53:47,508 - #47 4
INFO  01:53:47,508 - #41 )
INFO  01:53:47,509 - #36 ;
INFO  01:53:47,509 - #13 read
INFO  01:53:47,509 - #40 (
INFO  01:53:47,509 - #48 niz
INFO  01:53:47,509 - #42 [
INFO  01:53:47,509 - #47 0
INFO  01:53:47,509 - #43 ]
INFO  01:53:47,509 - #41 )
INFO  01:53:47,509 - #36 ;
INFO  01:53:47,509 - #13 read
INFO  01:53:47,509 - #40 (
INFO  01:53:47,509 - #48 niz
INFO  01:53:47,509 - #42 [
INFO  01:53:47,510 - #47 1
INFO  01:53:47,510 - #43 ]
INFO  01:53:47,510 - #41 )
INFO  01:53:47,510 - #36 ;
INFO  01:53:47,510 - #13 read
INFO  01:53:47,510 - #40 (
INFO  01:53:47,510 - #48 niz
INFO  01:53:47,510 - #42 [
INFO  01:53:47,510 - #47 2
INFO  01:53:47,510 - #43 ]
INFO  01:53:47,510 - #41 )
INFO  01:53:47,510 - #36 ;
INFO  01:53:47,510 - #3 print
INFO  01:53:47,510 - #40 (
INFO  01:53:47,510 - #48 eol
INFO  01:53:47,510 - #41 )
INFO  01:53:47,510 - #36 ;
INFO  01:53:47,511 - #3 print
INFO  01:53:47,511 - #40 (
INFO  01:53:47,511 - #48 sum
INFO  01:53:47,511 - #40 (
INFO  01:53:47,511 - #48 sum
INFO  01:53:47,511 - #40 (
INFO  01:53:47,511 - #48 niz
INFO  01:53:47,511 - #42 [
INFO  01:53:47,511 - #47 0
INFO  01:53:47,511 - #43 ]
INFO  01:53:47,511 - #38 ,
INFO  01:53:47,511 - #48 niz
INFO  01:53:47,511 - #42 [
INFO  01:53:47,511 - #47 1
INFO  01:53:47,511 - #43 ]
INFO  01:53:47,511 - #41 )
INFO  01:53:47,511 - #38 ,
INFO  01:53:47,511 - #48 niz
INFO  01:53:47,511 - #42 [
INFO  01:53:47,511 - #47 2
INFO  01:53:47,511 - #43 ]
INFO  01:53:47,512 - #41 )
INFO  01:53:47,512 - #41 )
INFO  01:53:47,512 - #36 ;
INFO  01:53:47,512 - #3 print
INFO  01:53:47,512 - #40 (
INFO  01:53:47,512 - #48 eol
INFO  01:53:47,512 - #41 )
INFO  01:53:47,512 - #36 ;
INFO  01:53:47,512 - #3 print
INFO  01:53:47,512 - #40 (
INFO  01:53:47,512 - #48 inkrement
INFO  01:53:47,512 - #40 (
INFO  01:53:47,512 - #48 niz
INFO  01:53:47,512 - #42 [
INFO  01:53:47,512 - #47 2
INFO  01:53:47,512 - #43 ]
INFO  01:53:47,512 - #38 ,
INFO  01:53:47,512 - #47 2
INFO  01:53:47,512 - #41 )
INFO  01:53:47,512 - #41 )
INFO  01:53:47,512 - #36 ;
INFO  01:53:47,512 - #48 a
INFO  01:53:47,512 - #33 =
INFO  01:53:47,512 - #47 3
INFO  01:53:47,512 - #36 ;
INFO  01:53:47,512 - #48 i
INFO  01:53:47,512 - #33 =
INFO  01:53:47,512 - #47 0
INFO  01:53:47,512 - #36 ;
INFO  01:53:47,513 - #11 while
INFO  01:53:47,513 - #40 (
INFO  01:53:47,513 - #48 i
INFO  01:53:47,513 - #29 <
INFO  01:53:47,513 - #47 3
INFO  01:53:47,513 - #41 )
INFO  01:53:47,513 - #44 {
INFO  01:53:47,513 - #48 niz
INFO  01:53:47,513 - #42 [
INFO  01:53:47,513 - #48 i
INFO  01:53:47,513 - #43 ]
INFO  01:53:47,513 - #33 =
INFO  01:53:47,513 - #48 niz
INFO  01:53:47,513 - #42 [
INFO  01:53:47,513 - #48 i
INFO  01:53:47,513 - #43 ]
INFO  01:53:47,513 - #22 *
INFO  01:53:47,513 - #47 2
INFO  01:53:47,513 - #22 *
INFO  01:53:47,513 - #48 a
INFO  01:53:47,513 - #36 ;
INFO  01:53:47,513 - #48 i
INFO  01:53:47,513 - #34 ++
INFO  01:53:47,513 - #36 ;
INFO  01:53:47,513 - #45 }
INFO  01:53:47,513 - #48 niz
INFO  01:53:47,513 - #39 .
INFO  01:53:47,513 - #18 foreach
INFO  01:53:47,513 - #40 (
INFO  01:53:47,513 - #48 curr
INFO  01:53:47,513 - #46 =>
INFO  01:53:47,514 - #3 print
INFO  01:53:47,514 - #40 (
INFO  01:53:47,514 - #48 curr
INFO  01:53:47,514 - #41 )
INFO  01:53:47,514 - #36 ;
INFO  01:53:47,514 - #41 )
INFO  01:53:47,514 - #36 ;
INFO  01:53:47,514 - #3 print
INFO  01:53:47,514 - #40 (
INFO  01:53:47,514 - #48 eol
INFO  01:53:47,514 - #41 )
INFO  01:53:47,514 - #36 ;
INFO  01:53:47,514 - #48 niz2
INFO  01:53:47,514 - #33 =
INFO  01:53:47,514 - #47 0
INFO  01:53:47,515 - #36 ;
INFO  01:53:47,515 - #48 niz
INFO  01:53:47,515 - #39 .
INFO  01:53:47,515 - #18 foreach
INFO  01:53:47,515 - #40 (
INFO  01:53:47,515 - #48 curr
INFO  01:53:47,515 - #46 =>
INFO  01:53:47,515 - #44 {
INFO  01:53:47,515 - #48 niz2
INFO  01:53:47,515 - #33 =
INFO  01:53:47,515 - #48 niz2
INFO  01:53:47,515 - #20 +
INFO  01:53:47,515 - #48 curr
INFO  01:53:47,515 - #22 *
INFO  01:53:47,515 - #48 curr
INFO  01:53:47,515 - #36 ;
INFO  01:53:47,515 - #45 }
INFO  01:53:47,515 - #41 )
INFO  01:53:47,515 - #36 ;
INFO  01:53:47,516 - #3 print
INFO  01:53:47,516 - #40 (
INFO  01:53:47,516 - #48 niz2
INFO  01:53:47,516 - #41 )
INFO  01:53:47,516 - #36 ;
INFO  01:53:47,516 - #45 }
INFO  01:53:47,516 - #45 }
INFO  01:53:47,518 - rs.ac.bg.etf.pp1.ast.Program@5606c0b
INFO  01:53:47,518 - ====================================
INFO  01:53:47,520 - Print count calls = 17
