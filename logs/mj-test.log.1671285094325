INFO  14:44:55,551 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\pr1.mj
INFO  14:44:55,594 - #2 program
INFO  14:44:55,594 - #48 p
INFO  14:44:55,594 - #8 const
INFO  14:44:55,595 - #48 int
INFO  14:44:55,595 - #48 size
INFO  14:44:55,595 - #33 =
INFO  14:44:55,596 - #47 10
INFO  14:44:55,596 - #36 ;
INFO  14:44:55,596 - #5 class
INFO  14:44:55,597 - #48 Table
INFO  14:44:55,597 - #44 {
INFO  14:44:55,597 - #48 int
INFO  14:44:55,599 - #48 pos
INFO  14:44:55,599 - #42 [
INFO  14:44:55,599 - #43 ]
INFO  14:44:55,599 - #38 ,
INFO  14:44:55,600 - #48 neg
INFO  14:44:55,600 - #42 [
INFO  14:44:55,600 - #43 ]
INFO  14:44:55,600 - #38 ,
INFO  14:44:55,601 - #48 factor
INFO  14:44:55,601 - #36 ;
INFO  14:44:55,602 - #44 {
INFO  14:44:55,603 - #48 Table
INFO  14:44:55,603 - #40 (
INFO  14:44:55,603 - #48 int
INFO  14:44:55,603 - #48 factor
INFO  14:44:55,603 - #41 )
INFO  14:44:55,604 - #44 {
INFO  14:44:55,605 - #17 this
INFO  14:44:55,606 - #39 .
INFO  14:44:55,606 - #48 factor
INFO  14:44:55,606 - #33 =
INFO  14:44:55,606 - #48 factor
INFO  14:44:55,606 - #36 ;
INFO  14:44:55,607 - #45 }
INFO  14:44:55,608 - #14 void
INFO  14:44:55,608 - #48 putp
INFO  14:44:55,608 - #40 (
INFO  14:44:55,608 - #48 int
INFO  14:44:55,608 - #48 a
INFO  14:44:55,608 - #38 ,
INFO  14:44:55,609 - #48 int
INFO  14:44:55,609 - #48 idx
INFO  14:44:55,609 - #41 )
INFO  14:44:55,609 - #44 {
INFO  14:44:55,610 - #17 this
INFO  14:44:55,610 - #39 .
INFO  14:44:55,610 - #48 pos
INFO  14:44:55,610 - #42 [
INFO  14:44:55,610 - #48 idx
INFO  14:44:55,610 - #43 ]
INFO  14:44:55,610 - #33 =
INFO  14:44:55,610 - #48 a
INFO  14:44:55,610 - #36 ;
INFO  14:44:55,610 - #45 }
INFO  14:44:55,610 - #14 void
INFO  14:44:55,611 - #48 putn
INFO  14:44:55,611 - #40 (
INFO  14:44:55,611 - #48 int
INFO  14:44:55,611 - #48 a
INFO  14:44:55,611 - #38 ,
INFO  14:44:55,611 - #48 int
INFO  14:44:55,611 - #48 idx
INFO  14:44:55,611 - #41 )
INFO  14:44:55,611 - #44 {
INFO  14:44:55,611 - #17 this
INFO  14:44:55,611 - #39 .
INFO  14:44:55,611 - #48 neg
INFO  14:44:55,611 - #42 [
INFO  14:44:55,612 - #48 idx
INFO  14:44:55,612 - #43 ]
INFO  14:44:55,612 - #33 =
INFO  14:44:55,612 - #48 a
INFO  14:44:55,612 - #36 ;
INFO  14:44:55,612 - #45 }
INFO  14:44:55,612 - #48 int
INFO  14:44:55,612 - #48 getp
INFO  14:44:55,612 - #40 (
INFO  14:44:55,612 - #48 int
INFO  14:44:55,613 - #48 idx
INFO  14:44:55,613 - #41 )
INFO  14:44:55,613 - #44 {
INFO  14:44:55,613 - #4 return
INFO  14:44:55,613 - #48 pos
INFO  14:44:55,613 - #42 [
INFO  14:44:55,613 - #48 idx
INFO  14:44:55,613 - #43 ]
INFO  14:44:55,613 - #36 ;
INFO  14:44:55,614 - #45 }
INFO  14:44:55,614 - #48 int
INFO  14:44:55,614 - #48 getn
INFO  14:44:55,614 - #40 (
INFO  14:44:55,614 - #48 int
INFO  14:44:55,614 - #48 idx
INFO  14:44:55,614 - #41 )
INFO  14:44:55,614 - #44 {
INFO  14:44:55,615 - #4 return
INFO  14:44:55,615 - #48 neg
INFO  14:44:55,615 - #42 [
INFO  14:44:55,615 - #48 idx
INFO  14:44:55,615 - #43 ]
INFO  14:44:55,615 - #36 ;
INFO  14:44:55,615 - #45 }
INFO  14:44:55,615 - #45 }
INFO  14:44:55,615 - #45 }
INFO  14:44:55,615 - #48 Table
INFO  14:44:55,616 - #48 val
INFO  14:44:55,616 - #36 ;
INFO  14:44:55,616 - #48 Int
INFO  14:44:55,617 - #48 rows
INFO  14:44:55,617 - #38 ,
INFO  14:44:55,617 - #48 columns
INFO  14:44:55,617 - #36 ;
INFO  14:44:55,617 - #44 {
INFO  14:44:55,617 - #14 void
INFO  14:44:55,618 - #48 f
INFO  14:44:55,619 - #40 (
INFO  14:44:55,619 - #48 char
INFO  14:44:55,619 - #48 ch
INFO  14:44:55,619 - #38 ,
INFO  14:44:55,619 - #48 int
INFO  14:44:55,619 - #48 a
INFO  14:44:55,619 - #38 ,
INFO  14:44:55,619 - #48 int
INFO  14:44:55,619 - #48 arg
INFO  14:44:55,619 - #41 )
INFO  14:44:55,619 - #48 int
INFO  14:44:55,619 - #48 x
INFO  14:44:55,620 - #36 ;
INFO  14:44:55,620 - #44 {
INFO  14:44:55,620 - #48 x
INFO  14:44:55,620 - #33 =
INFO  14:44:55,620 - #48 arg
INFO  14:44:55,620 - #36 ;
INFO  14:44:55,620 - #45 }
INFO  14:44:55,621 - #14 void
INFO  14:44:55,621 - #48 main
INFO  14:44:55,621 - #40 (
INFO  14:44:55,621 - #41 )
INFO  14:44:55,621 - #48 int
INFO  14:44:55,622 - #48 x
INFO  14:44:55,622 - #38 ,
INFO  14:44:55,622 - #48 i
INFO  14:44:55,622 - #36 ;
INFO  14:44:55,622 - #48 char
INFO  14:44:55,622 - #48 c
INFO  14:44:55,622 - #36 ;
INFO  14:44:55,622 - #48 int
INFO  14:44:55,622 - #48 arr
INFO  14:44:55,622 - #42 [
INFO  14:44:55,622 - #43 ]
INFO  14:44:55,622 - #36 ;
INFO  14:44:55,623 - #44 {
INFO  14:44:55,623 - #48 val
INFO  14:44:55,623 - #33 =
INFO  14:44:55,623 - #12 new
INFO  14:44:55,623 - #48 Table
INFO  14:44:55,623 - #40 (
INFO  14:44:55,623 - #47 2
INFO  14:44:55,623 - #41 )
INFO  14:44:55,624 - #36 ;
INFO  14:44:55,624 - #48 arr
INFO  14:44:55,624 - #33 =
INFO  14:44:55,624 - #12 new
INFO  14:44:55,624 - #48 int
INFO  14:44:55,624 - #42 [
INFO  14:44:55,624 - #47 3
INFO  14:44:55,624 - #43 ]
INFO  14:44:55,624 - #36 ;
INFO  14:44:55,625 - #48 i
INFO  14:44:55,625 - #33 =
INFO  14:44:55,625 - #47 0
INFO  14:44:55,625 - #36 ;
INFO  14:44:55,625 - #11 while
INFO  14:44:55,625 - #40 (
INFO  14:44:55,625 - #48 i
INFO  14:44:55,625 - #29 <
INFO  14:44:55,625 - #47 3
INFO  14:44:55,627 - #41 )
INFO  14:44:55,627 - #44 {
INFO  14:44:55,627 - #48 arr
INFO  14:44:55,627 - #42 [
INFO  14:44:55,627 - #48 i
INFO  14:44:55,627 - #43 ]
INFO  14:44:55,627 - #33 =
INFO  14:44:55,627 - #48 i
INFO  14:44:55,627 - #36 ;
INFO  14:44:55,628 - #48 i
INFO  14:44:55,628 - #34 ++
INFO  14:44:55,628 - #36 ;
INFO  14:44:55,628 - #45 }
INFO  14:44:55,628 - #48 arr
INFO  14:44:55,628 - #39 .
INFO  14:44:55,628 - #18 foreach
INFO  14:44:55,628 - #40 (
INFO  14:44:55,628 - #48 x
INFO  14:44:55,629 - #46 =>
INFO  14:44:55,629 - #3 print
INFO  14:44:55,629 - #40 (
INFO  14:44:55,629 - #48 x
INFO  14:44:55,629 - #41 )
INFO  14:44:55,629 - #36 ;
INFO  14:44:55,629 - #41 )
INFO  14:44:55,629 - #36 ;
INFO  14:44:55,629 - #48 val
INFO  14:44:55,629 - #39 .
INFO  14:44:55,629 - #48 pos
INFO  14:44:55,629 - #33 =
INFO  14:44:55,629 - #12 new
INFO  14:44:55,630 - #48 int
INFO  14:44:55,630 - #42 [
INFO  14:44:55,630 - #48 size
INFO  14:44:55,630 - #43 ]
INFO  14:44:55,630 - #36 ;
INFO  14:44:55,630 - #48 val
INFO  14:44:55,630 - #39 .
INFO  14:44:55,630 - #48 neg
INFO  14:44:55,630 - #33 =
INFO  14:44:55,630 - #12 new
INFO  14:44:55,630 - #48 int
INFO  14:44:55,631 - #42 [
INFO  14:44:55,631 - #48 size
INFO  14:44:55,631 - #43 ]
INFO  14:44:55,631 - #36 ;
INFO  14:44:55,631 - #13 read
INFO  14:44:55,631 - #40 (
INFO  14:44:55,631 - #48 x
INFO  14:44:55,631 - #41 )
INFO  14:44:55,632 - #36 ;
INFO  14:44:55,632 - #42 [
INFO  14:44:55,632 - #48 i
INFO  14:44:55,632 - #38 ,
INFO  14:44:55,632 - #38 ,
INFO  14:44:55,633 - #48 x
INFO  14:44:55,633 - #43 ]
INFO  14:44:55,633 - #33 =
INFO  14:44:55,633 - #48 arr
INFO  14:44:55,633 - #36 ;
INFO  14:44:55,633 - #11 while
INFO  14:44:55,633 - #40 (
INFO  14:44:55,634 - #48 i
INFO  14:44:55,634 - #29 <
INFO  14:44:55,634 - #48 size
INFO  14:44:55,634 - #41 )
INFO  14:44:55,634 - #44 {
INFO  14:44:55,634 - #48 val
INFO  14:44:55,634 - #39 .
INFO  14:44:55,634 - #48 putp
INFO  14:44:55,634 - #40 (
INFO  14:44:55,634 - #47 0
INFO  14:44:55,634 - #38 ,
INFO  14:44:55,634 - #48 i
INFO  14:44:55,634 - #41 )
INFO  14:44:55,635 - #36 ;
INFO  14:44:55,635 - #48 val
INFO  14:44:55,635 - #39 .
INFO  14:44:55,636 - #48 putn
INFO  14:44:55,636 - #40 (
INFO  14:44:55,636 - #47 0
INFO  14:44:55,636 - #38 ,
INFO  14:44:55,636 - #48 i
INFO  14:44:55,636 - #41 )
INFO  14:44:55,636 - #36 ;
INFO  14:44:55,636 - #48 i
INFO  14:44:55,636 - #34 ++
INFO  14:44:55,636 - #36 ;
INFO  14:44:55,636 - #45 }
INFO  14:44:55,636 - #48 f
INFO  14:44:55,637 - #40 (
INFO  14:44:55,637 - #48 c
INFO  14:44:55,637 - #38 ,
INFO  14:44:55,637 - #48 x
INFO  14:44:55,637 - #38 ,
INFO  14:44:55,637 - #48 i
INFO  14:44:55,637 - #41 )
INFO  14:44:55,637 - #36 ;
INFO  14:44:55,637 - #13 read
INFO  14:44:55,638 - #40 (
INFO  14:44:55,638 - #48 rows
INFO  14:44:55,638 - #41 )
INFO  14:44:55,638 - #36 ;
INFO  14:44:55,638 - #48 x
INFO  14:44:55,638 - #33 =
INFO  14:44:55,638 - #48 rows
INFO  14:44:55,638 - #36 ;
INFO  14:44:55,638 - #11 while
INFO  14:44:55,638 - #40 (
INFO  14:44:55,638 - #50 true
INFO  14:44:55,639 - #41 )
INFO  14:44:55,639 - #44 {
INFO  14:44:55,639 - #9 if
INFO  14:44:55,639 - #40 (
INFO  14:44:55,639 - #48 x
INFO  14:44:55,639 - #30 <=
INFO  14:44:55,639 - #47 0
INFO  14:44:55,640 - #41 )
INFO  14:44:55,640 - #19 break
INFO  14:44:55,640 - #36 ;
INFO  14:44:55,640 - #9 if
INFO  14:44:55,641 - #40 (
INFO  14:44:55,641 - #47 0
INFO  14:44:55,641 - #30 <=
INFO  14:44:55,642 - #48 x
INFO  14:44:55,642 - #31 &&
INFO  14:44:55,642 - #48 x
INFO  14:44:55,642 - #29 <
INFO  14:44:55,642 - #48 size
INFO  14:44:55,642 - #41 )
INFO  14:44:55,642 - #44 {
INFO  14:44:55,642 - #48 val
INFO  14:44:55,642 - #39 .
INFO  14:44:55,642 - #48 putp
INFO  14:44:55,643 - #40 (
INFO  14:44:55,643 - #48 val
INFO  14:44:55,643 - #39 .
INFO  14:44:55,643 - #48 getp
INFO  14:44:55,643 - #40 (
INFO  14:44:55,643 - #48 x
INFO  14:44:55,643 - #41 )
INFO  14:44:55,643 - #20 +
INFO  14:44:55,643 - #47 1
INFO  14:44:55,645 - #41 )
INFO  14:44:55,647 - #36 ;
INFO  14:44:55,647 - #45 }
INFO  14:44:55,647 - #7 else
INFO  14:44:55,647 - #9 if
INFO  14:44:55,647 - #40 (
INFO  14:44:55,647 - #21 -
INFO  14:44:55,647 - #48 size
INFO  14:44:55,648 - #29 <
INFO  14:44:55,648 - #48 x
INFO  14:44:55,648 - #31 &&
INFO  14:44:55,648 - #48 x
INFO  14:44:55,648 - #29 <
INFO  14:44:55,648 - #47 0
INFO  14:44:55,648 - #41 )
INFO  14:44:55,648 - #44 {
INFO  14:44:55,649 - #48 val
INFO  14:44:55,649 - #39 .
INFO  14:44:55,649 - #48 putn
INFO  14:44:55,649 - #40 (
INFO  14:44:55,649 - #48 val
INFO  14:44:55,649 - #39 .
INFO  14:44:55,649 - #48 getn
INFO  14:44:55,649 - #40 (
INFO  14:44:55,649 - #21 -
INFO  14:44:55,649 - #48 x
INFO  14:44:55,649 - #41 )
INFO  14:44:55,649 - #20 +
INFO  14:44:55,650 - #47 1
INFO  14:44:55,650 - #41 )
INFO  14:44:55,650 - #36 ;
INFO  14:44:55,650 - #45 }
INFO  14:44:55,650 - #13 read
INFO  14:44:55,650 - #40 (
INFO  14:44:55,650 - #48 x
INFO  14:44:55,650 - #41 )
INFO  14:44:55,650 - #36 ;
INFO  14:44:55,650 - #45 }
INFO  14:44:55,650 - #45 }
INFO  14:44:55,650 - #45 }
INFO  14:44:55,651 - rs.ac.bg.etf.pp1.ast.Program@473b46c3
INFO  14:44:55,652 - ====================================
INFO  14:44:55,655 - Print count calls = 1
