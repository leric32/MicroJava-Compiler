INFO  22:57:25,769 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\sem_test.mj
INFO  22:57:25,813 - #2 program
INFO  22:57:25,813 - #47 test301
INFO  22:57:25,813 - #47 int
INFO  22:57:25,815 - #47 a
INFO  22:57:25,816 - #35 ;
INFO  22:57:25,817 - #43 {
INFO  22:57:25,818 - #47 int
INFO  22:57:25,819 - #47 sum
INFO  22:57:25,819 - #39 (
INFO  22:57:25,819 - #47 int
INFO  22:57:25,819 - #47 z
INFO  22:57:25,819 - #37 ,
INFO  22:57:25,820 - #47 int
INFO  22:57:25,820 - #47 d
INFO  22:57:25,821 - #40 )
INFO  22:57:25,821 - #43 {
INFO  22:57:25,822 - #4 return
INFO  22:57:25,823 - #47 z
INFO  22:57:25,823 - #19 +
INFO  22:57:25,824 - #47 d
INFO  22:57:25,825 - #35 ;
INFO  22:57:25,825 - #44 }
INFO  22:57:25,826 - #14 void
INFO  22:57:25,826 - #47 main
INFO  22:57:25,826 - #39 (
INFO  22:57:25,826 - #40 )
INFO  22:57:25,826 - #47 int
INFO  22:57:25,827 - #47 niz
INFO  22:57:25,827 - #41 [
INFO  22:57:25,827 - #42 ]
INFO  22:57:25,827 - #35 ;
INFO  22:57:25,828 - #43 {
INFO  22:57:25,828 - #47 a
INFO  22:57:25,828 - #32 =
INFO  22:57:25,828 - #46 2
INFO  22:57:25,828 - #35 ;
INFO  22:57:25,828 - #47 niz
INFO  22:57:25,829 - #32 =
INFO  22:57:25,829 - #12 new
INFO  22:57:25,829 - #47 int
INFO  22:57:25,829 - #41 [
INFO  22:57:25,829 - #46 3
INFO  22:57:25,829 - #42 ]
INFO  22:57:25,829 - #35 ;
INFO  22:57:25,830 - #47 niz
INFO  22:57:25,830 - #41 [
INFO  22:57:25,830 - #46 0
INFO  22:57:25,830 - #42 ]
INFO  22:57:25,830 - #32 =
INFO  22:57:25,830 - #46 1
INFO  22:57:25,830 - #21 *
INFO  22:57:25,830 - #47 a
INFO  22:57:25,832 - #35 ;
INFO  22:57:25,832 - #47 niz
INFO  22:57:25,832 - #41 [
INFO  22:57:25,832 - #46 1
INFO  22:57:25,832 - #42 ]
INFO  22:57:25,832 - #32 =
INFO  22:57:25,833 - #46 2
INFO  22:57:25,833 - #21 *
INFO  22:57:25,833 - #47 a
INFO  22:57:25,833 - #35 ;
INFO  22:57:25,833 - #47 niz
INFO  22:57:25,833 - #41 [
INFO  22:57:25,833 - #46 2
INFO  22:57:25,833 - #42 ]
INFO  22:57:25,834 - #32 =
INFO  22:57:25,834 - #47 sum
INFO  22:57:25,834 - #39 (
INFO  22:57:25,834 - #47 niz
INFO  22:57:25,834 - #41 [
INFO  22:57:25,834 - #46 1
INFO  22:57:25,834 - #42 ]
INFO  22:57:25,834 - #37 ,
INFO  22:57:25,834 - #47 niz
INFO  22:57:25,834 - #41 [
INFO  22:57:25,834 - #46 0
INFO  22:57:25,834 - #42 ]
INFO  22:57:25,835 - #40 )
INFO  22:57:25,835 - #21 *
INFO  22:57:25,835 - #47 a
INFO  22:57:25,835 - #19 +
INFO  22:57:25,835 - #46 1
INFO  22:57:25,835 - #35 ;
INFO  22:57:25,835 - #9 if
INFO  22:57:25,835 - #39 (
INFO  22:57:25,836 - #47 verify
INFO  22:57:25,836 - #39 (
INFO  22:57:25,836 - #40 )
INFO  22:57:25,836 - #31 ||
INFO  22:57:25,836 - #47 niz
INFO  22:57:25,836 - #41 [
INFO  22:57:25,836 - #46 2
INFO  22:57:25,837 - #42 ]
INFO  22:57:25,837 - #24 ==
INFO  22:57:25,837 - #46 4
INFO  22:57:25,837 - #40 )
INFO  22:57:25,838 - #3 print
INFO  22:57:25,838 - #39 (
INFO  22:57:25,838 - #47 ord
INFO  22:57:25,838 - #39 (
INFO  22:57:25,838 - #48 A
INFO  22:57:25,838 - #40 )
INFO  22:57:25,838 - #40 )
INFO  22:57:25,838 - #35 ;
INFO  22:57:25,838 - #7 else
INFO  22:57:25,839 - #3 print
INFO  22:57:25,839 - #39 (
INFO  22:57:25,839 - #47 ord
INFO  22:57:25,839 - #39 (
INFO  22:57:25,839 - #48 a
INFO  22:57:25,839 - #40 )
INFO  22:57:25,839 - #40 )
INFO  22:57:25,839 - #35 ;
INFO  22:57:25,839 - #44 }
INFO  22:57:25,839 - #44 }
INFO  22:57:25,845 - Program(
  ProgName(
   test301
  ) [ProgName]
  VarDeclarations(
    NoVarDecl(
    ) [NoVarDecl]
    VarDeclaration(
      Type(
       int
      ) [Type]
      VarDeclarationLast(
        LastVarDeclarations(
         a
          VarDeclarationOfNotArray(
          ) [VarDeclarationOfNotArray]
        ) [LastVarDeclarations]
      ) [VarDeclarationLast]
    ) [VarDeclaration]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDeclarations(
      ) [NoMethodDeclarations]
      MethodDeclaration(
        ReturnMethodTypeName(
          Type(
           int
          ) [Type]
         sum
        ) [ReturnMethodTypeName]
        FormalParameters(
          ListOfParameters(
            SingleFormalParameter(
              Type(
               int
              ) [Type]
             z
              VarDeclarationOfNotArray(
              ) [VarDeclarationOfNotArray]
            ) [SingleFormalParameter]
            SingleOrEndOfListParameter(
              SingleFormalParameter(
                Type(
                 int
                ) [Type]
               d
                VarDeclarationOfNotArray(
                ) [VarDeclarationOfNotArray]
              ) [SingleFormalParameter]
            ) [SingleOrEndOfListParameter]
          ) [ListOfParameters]
        ) [FormalParameters]
        MethodWithoutVariables(
        ) [MethodWithoutVariables]
        Statements(
          NoStatements(
          ) [NoStatements]
          StatementReturnExpr(
            AddExpr(
              TermPositiveExpr(
                Term(
                  SingleFactor(
                    DesignatorFactor(
                      SimpleDesignator(
                       z
                      ) [SimpleDesignator]
                    ) [DesignatorFactor]
                  ) [SingleFactor]
                ) [Term]
              ) [TermPositiveExpr]
              PlusOperator(
              ) [PlusOperator]
              Term(
                SingleFactor(
                  DesignatorFactor(
                    SimpleDesignator(
                     d
                    ) [SimpleDesignator]
                  ) [DesignatorFactor]
                ) [SingleFactor]
              ) [Term]
            ) [AddExpr]
          ) [StatementReturnExpr]
        ) [Statements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      VoidMethodTypeName(
       main
      ) [VoidMethodTypeName]
      NoFormalParameters(
      ) [NoFormalParameters]
      MethodVariables(
        MethodWithoutVariables(
        ) [MethodWithoutVariables]
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclarationLast(
            LastVarDeclarations(
             niz
              VarDeclarationOfArray(
              ) [VarDeclarationOfArray]
            ) [LastVarDeclarations]
          ) [VarDeclarationLast]
        ) [VarDeclaration]
      ) [MethodVariables]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatements(
                  ) [NoStatements]
                  StatementDesignator(
                    DesignatorAssignment(
                      SimpleDesignator(
                       a
                      ) [SimpleDesignator]
                      TermPositiveExpr(
                        Term(
                          SingleFactor(
                            NumberConstFactor(
                             2
                            ) [NumberConstFactor]
                          ) [SingleFactor]
                        ) [Term]
                      ) [TermPositiveExpr]
                    ) [DesignatorAssignment]
                  ) [StatementDesignator]
                ) [Statements]
                StatementDesignator(
                  DesignatorAssignment(
                    SimpleDesignator(
                     niz
                    ) [SimpleDesignator]
                    TermPositiveExpr(
                      Term(
                        SingleFactor(
                          NewArrayOperatorFactor(
                            Type(
                             int
                            ) [Type]
                            TermPositiveExpr(
                              Term(
                                SingleFactor(
                                  NumberConstFactor(
                                   3
                                  ) [NumberConstFactor]
                                ) [SingleFactor]
                              ) [Term]
                            ) [TermPositiveExpr]
                          ) [NewArrayOperatorFactor]
                        ) [SingleFactor]
                      ) [Term]
                    ) [TermPositiveExpr]
                  ) [DesignatorAssignment]
                ) [StatementDesignator]
              ) [Statements]
              StatementDesignator(
                DesignatorAssignment(
                  ArrayDesignator(
                    SimpleDesignator(
                     niz
                    ) [SimpleDesignator]
                    TermPositiveExpr(
                      Term(
                        SingleFactor(
                          NumberConstFactor(
                           0
                          ) [NumberConstFactor]
                        ) [SingleFactor]
                      ) [Term]
                    ) [TermPositiveExpr]
                  ) [ArrayDesignator]
                  TermPositiveExpr(
                    Term(
                      MultipleFactors(
                        SingleFactor(
                          NumberConstFactor(
                           1
                          ) [NumberConstFactor]
                        ) [SingleFactor]
                        MultiplyOperator(
                        ) [MultiplyOperator]
                        DesignatorFactor(
                          SimpleDesignator(
                           a
                          ) [SimpleDesignator]
                        ) [DesignatorFactor]
                      ) [MultipleFactors]
                    ) [Term]
                  ) [TermPositiveExpr]
                ) [DesignatorAssignment]
              ) [StatementDesignator]
            ) [Statements]
            StatementDesignator(
              DesignatorAssignment(
                ArrayDesignator(
                  SimpleDesignator(
                   niz
                  ) [SimpleDesignator]
                  TermPositiveExpr(
                    Term(
                      SingleFactor(
                        NumberConstFactor(
                         1
                        ) [NumberConstFactor]
                      ) [SingleFactor]
                    ) [Term]
                  ) [TermPositiveExpr]
                ) [ArrayDesignator]
                TermPositiveExpr(
                  Term(
                    MultipleFactors(
                      SingleFactor(
                        NumberConstFactor(
                         2
                        ) [NumberConstFactor]
                      ) [SingleFactor]
                      MultiplyOperator(
                      ) [MultiplyOperator]
                      DesignatorFactor(
                        SimpleDesignator(
                         a
                        ) [SimpleDesignator]
                      ) [DesignatorFactor]
                    ) [MultipleFactors]
                  ) [Term]
                ) [TermPositiveExpr]
              ) [DesignatorAssignment]
            ) [StatementDesignator]
          ) [Statements]
          StatementDesignator(
            DesignatorAssignment(
              ArrayDesignator(
                SimpleDesignator(
                 niz
                ) [SimpleDesignator]
                TermPositiveExpr(
                  Term(
                    SingleFactor(
                      NumberConstFactor(
                       2
                      ) [NumberConstFactor]
                    ) [SingleFactor]
                  ) [Term]
                ) [TermPositiveExpr]
              ) [ArrayDesignator]
              AddExpr(
                TermPositiveExpr(
                  Term(
                    MultipleFactors(
                      SingleFactor(
                        FuncCallFactor(
                          FuncCallFactorDesignator(
                            SimpleDesignator(
                             sum
                            ) [SimpleDesignator]
                          ) [FuncCallFactorDesignator]
                          Actuals(
                            ActualParams(
                              ActualParam(
                                TermPositiveExpr(
                                  Term(
                                    SingleFactor(
                                      DesignatorFactor(
                                        ArrayDesignator(
                                          SimpleDesignator(
                                           niz
                                          ) [SimpleDesignator]
                                          TermPositiveExpr(
                                            Term(
                                              SingleFactor(
                                                NumberConstFactor(
                                                 1
                                                ) [NumberConstFactor]
                                              ) [SingleFactor]
                                            ) [Term]
                                          ) [TermPositiveExpr]
                                        ) [ArrayDesignator]
                                      ) [DesignatorFactor]
                                    ) [SingleFactor]
                                  ) [Term]
                                ) [TermPositiveExpr]
                              ) [ActualParam]
                              TermPositiveExpr(
                                Term(
                                  SingleFactor(
                                    DesignatorFactor(
                                      ArrayDesignator(
                                        SimpleDesignator(
                                         niz
                                        ) [SimpleDesignator]
                                        TermPositiveExpr(
                                          Term(
                                            SingleFactor(
                                              NumberConstFactor(
                                               0
                                              ) [NumberConstFactor]
                                            ) [SingleFactor]
                                          ) [Term]
                                        ) [TermPositiveExpr]
                                      ) [ArrayDesignator]
                                    ) [DesignatorFactor]
                                  ) [SingleFactor]
                                ) [Term]
                              ) [TermPositiveExpr]
                            ) [ActualParams]
                          ) [Actuals]
                        ) [FuncCallFactor]
                      ) [SingleFactor]
                      MultiplyOperator(
                      ) [MultiplyOperator]
                      DesignatorFactor(
                        SimpleDesignator(
                         a
                        ) [SimpleDesignator]
                      ) [DesignatorFactor]
                    ) [MultipleFactors]
                  ) [Term]
                ) [TermPositiveExpr]
                PlusOperator(
                ) [PlusOperator]
                Term(
                  SingleFactor(
                    NumberConstFactor(
                     1
                    ) [NumberConstFactor]
                  ) [SingleFactor]
                ) [Term]
              ) [AddExpr]
            ) [DesignatorAssignment]
          ) [StatementDesignator]
        ) [Statements]
        StatementIfElse(
          IfCondition(
            ConditionsWithOr(
              ConditionsWithoutOr(
                ConditionsWithoutAnd(
                  SingleCondition(
                    TermPositiveExpr(
                      Term(
                        SingleFactor(
                          FuncCallFactor(
                            FuncCallFactorDesignator(
                              SimpleDesignator(
                               verify
                              ) [SimpleDesignator]
                            ) [FuncCallFactorDesignator]
                            NoActuals(
                            ) [NoActuals]
                          ) [FuncCallFactor]
                        ) [SingleFactor]
                      ) [Term]
                    ) [TermPositiveExpr]
                  ) [SingleCondition]
                ) [ConditionsWithoutAnd]
              ) [ConditionsWithoutOr]
              ConditionsWithoutAnd(
                RelopCondition(
                  TermPositiveExpr(
                    Term(
                      SingleFactor(
                        DesignatorFactor(
                          ArrayDesignator(
                            SimpleDesignator(
                             niz
                            ) [SimpleDesignator]
                            TermPositiveExpr(
                              Term(
                                SingleFactor(
                                  NumberConstFactor(
                                   2
                                  ) [NumberConstFactor]
                                ) [SingleFactor]
                              ) [Term]
                            ) [TermPositiveExpr]
                          ) [ArrayDesignator]
                        ) [DesignatorFactor]
                      ) [SingleFactor]
                    ) [Term]
                  ) [TermPositiveExpr]
                  EqualOperator(
                  ) [EqualOperator]
                  TermPositiveExpr(
                    Term(
                      SingleFactor(
                        NumberConstFactor(
                         4
                        ) [NumberConstFactor]
                      ) [SingleFactor]
                    ) [Term]
                  ) [TermPositiveExpr]
                ) [RelopCondition]
              ) [ConditionsWithoutAnd]
            ) [ConditionsWithOr]
          ) [IfCondition]
          StatementPrintWithoutWidth(
            TermPositiveExpr(
              Term(
                SingleFactor(
                  FuncCallFactor(
                    FuncCallFactorDesignator(
                      SimpleDesignator(
                       ord
                      ) [SimpleDesignator]
                    ) [FuncCallFactorDesignator]
                    Actuals(
                      ActualParam(
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              CharConstFactor(
                               A
                              ) [CharConstFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [ActualParam]
                    ) [Actuals]
                  ) [FuncCallFactor]
                ) [SingleFactor]
              ) [Term]
            ) [TermPositiveExpr]
          ) [StatementPrintWithoutWidth]
          StatementPrintWithoutWidth(
            TermPositiveExpr(
              Term(
                SingleFactor(
                  FuncCallFactor(
                    FuncCallFactorDesignator(
                      SimpleDesignator(
                       ord
                      ) [SimpleDesignator]
                    ) [FuncCallFactorDesignator]
                    Actuals(
                      ActualParam(
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              CharConstFactor(
                               a
                              ) [CharConstFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [ActualParam]
                    ) [Actuals]
                  ) [FuncCallFactor]
                ) [SingleFactor]
              ) [Term]
            ) [TermPositiveExpr]
          ) [StatementPrintWithoutWidth]
        ) [StatementIfElse]
      ) [Statements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  22:57:25,845 - ====================================
INFO  22:57:25,850 - Kreirana je promenjiva a na liniji 3
INFO  22:57:25,851 - Definicija funkcije sum na liniji 6
INFO  22:57:25,851 - Definicija funkcije main na liniji 11
INFO  22:57:25,851 - Kreirana je promenjiva niz[] na liniji 12
INFO  22:57:25,851 - Pristup elemntu niza niz na liniji 16
INFO  22:57:25,851 - Pristup elemntu niza niz na liniji 17
INFO  22:57:25,851 - Pristup elemntu niza niz na liniji 18
INFO  22:57:25,851 - FCsum na liniji 18
INFO  22:57:25,852 - Pristup elemntu niza niz na liniji 18
INFO  22:57:25,852 - 0  na liniji 18
INFO  22:57:25,852 - Pristup elemntu niza niz na liniji 18
ERROR 22:57:25,852 - SEMANTICKA GRESKA: Nije deklarisana promenljiva sa imenom verify na liniji 19
ERROR 22:57:25,852 - SEMANTICKA GRESKA: noObj ne predstavlja funkciju na liniji 19
ERROR 22:57:25,852 - SEMANTICKA GRESKA: Tip izraza u uslovu if, while ili foreach petlje treba biti tipa bool, a nije na liniji 19
INFO  22:57:25,852 - Pristup elemntu niza niz na liniji 19
ERROR 22:57:25,852 - SEMANTICKA GRESKA: Nije deklarisana promenljiva sa imenom ord na liniji 19
ERROR 22:57:25,852 - SEMANTICKA GRESKA: noObj ne predstavlja funkciju na liniji 19
INFO  22:57:25,852 - 0  na liniji 19
ERROR 22:57:25,852 - SEMANTICKA GRESKA: Formalni parametar funkcije sum koji je tipa int nije kompatibilan sa stvarnim argumentom koji je tipa char na liniji 19
INFO  22:57:25,853 - Prepoznata naredba print
ERROR 22:57:25,853 - SEMANTICKA GRESKA: Expr na liniji 19 nije tipa int, char ili bool na liniji 19
ERROR 22:57:25,853 - SEMANTICKA GRESKA: Nije deklarisana promenljiva sa imenom ord na liniji 20
ERROR 22:57:25,853 - SEMANTICKA GRESKA: noObj ne predstavlja funkciju na liniji 20
INFO  22:57:25,853 - 0  na liniji 20
ERROR 22:57:25,853 - SEMANTICKA GRESKA: Formalni parametar funkcije sum koji je tipa int nije kompatibilan sa stvarnim argumentom koji je tipa char na liniji 20
INFO  22:57:25,853 - Prepoznata naredba print
ERROR 22:57:25,853 - SEMANTICKA GRESKA: Expr na liniji 20 nije tipa int, char ili bool na liniji 20
INFO  22:57:25,853 - Print count calls = 2
INFO  22:57:25,853 - ====================================
ERROR 22:57:25,853 - Parsiranje NIJE uspesno zavrseno!
