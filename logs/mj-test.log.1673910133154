INFO  00:01:10,109 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\linked_list.mj
INFO  00:01:10,155 - #2 program
INFO  00:01:10,155 - #47 list
INFO  00:01:10,155 - #8 const
INFO  00:01:10,157 - #47 int
INFO  00:01:10,157 - #47 A
INFO  00:01:10,158 - #32 =
INFO  00:01:10,158 - #46 15342
INFO  00:01:10,158 - #37 ,
INFO  00:01:10,159 - #47 C
INFO  00:01:10,159 - #32 =
INFO  00:01:10,159 - #46 45194
INFO  00:01:10,159 - #35 ;
INFO  00:01:10,159 - #8 const
INFO  00:01:10,160 - #47 int
INFO  00:01:10,160 - #47 RAND_MAX
INFO  00:01:10,160 - #32 =
INFO  00:01:10,160 - #46 100000
INFO  00:01:10,160 - #35 ;
INFO  00:01:10,160 - #5 class
INFO  00:01:10,162 - #47 Node
INFO  00:01:10,162 - #43 {
INFO  00:01:10,162 - #47 int
INFO  00:01:10,164 - #47 data
INFO  00:01:10,164 - #35 ;
INFO  00:01:10,165 - #47 Node
INFO  00:01:10,166 - #47 next
INFO  00:01:10,166 - #35 ;
INFO  00:01:10,166 - #43 {
INFO  00:01:10,166 - #47 Node
INFO  00:01:10,166 - #39 (
INFO  00:01:10,166 - #47 int
INFO  00:01:10,166 - #47 data
INFO  00:01:10,166 - #40 )
INFO  00:01:10,166 - #43 {
INFO  00:01:10,167 - #47 this
INFO  00:01:10,168 - #38 .
INFO  00:01:10,168 - #47 data
INFO  00:01:10,168 - #32 =
INFO  00:01:10,168 - #47 data
INFO  00:01:10,168 - #35 ;
INFO  00:01:10,170 - #47 this
INFO  00:01:10,170 - #38 .
INFO  00:01:10,170 - #47 next
INFO  00:01:10,171 - #32 =
INFO  00:01:10,171 - #47 null
INFO  00:01:10,171 - #35 ;
INFO  00:01:10,171 - #44 }
INFO  00:01:10,171 - #47 Node
INFO  00:01:10,171 - #39 (
INFO  00:01:10,171 - #47 int
INFO  00:01:10,171 - #47 data
INFO  00:01:10,172 - #37 ,
INFO  00:01:10,172 - #47 Node
INFO  00:01:10,172 - #47 next
INFO  00:01:10,172 - #40 )
INFO  00:01:10,172 - #43 {
INFO  00:01:10,172 - #47 this
INFO  00:01:10,172 - #38 .
INFO  00:01:10,173 - #47 data
INFO  00:01:10,173 - #32 =
INFO  00:01:10,173 - #47 data
INFO  00:01:10,173 - #35 ;
INFO  00:01:10,173 - #47 this
INFO  00:01:10,173 - #38 .
INFO  00:01:10,173 - #47 next
INFO  00:01:10,173 - #32 =
INFO  00:01:10,173 - #47 next
INFO  00:01:10,174 - #35 ;
INFO  00:01:10,174 - #44 }
INFO  00:01:10,174 - #44 }
INFO  00:01:10,174 - #44 }
INFO  00:01:10,174 - #5 class
INFO  00:01:10,174 - #47 LinkedList
INFO  00:01:10,174 - #43 {
INFO  00:01:10,174 - #47 Node
INFO  00:01:10,175 - #47 head
INFO  00:01:10,175 - #37 ,
INFO  00:01:10,175 - #47 tail
INFO  00:01:10,175 - #35 ;
INFO  00:01:10,175 - #43 {
INFO  00:01:10,175 - #47 LinkedList
INFO  00:01:10,175 - #39 (
INFO  00:01:10,175 - #40 )
INFO  00:01:10,176 - #43 {
INFO  00:01:10,176 - #47 head
INFO  00:01:10,176 - #32 =
INFO  00:01:10,176 - #47 null
INFO  00:01:10,177 - #35 ;
INFO  00:01:10,177 - #47 tail
INFO  00:01:10,177 - #32 =
INFO  00:01:10,177 - #47 null
INFO  00:01:10,177 - #35 ;
INFO  00:01:10,177 - #44 }
INFO  00:01:10,177 - #14 void
INFO  00:01:10,177 - #47 add
INFO  00:01:10,177 - #39 (
INFO  00:01:10,177 - #47 int
INFO  00:01:10,177 - #47 data
INFO  00:01:10,178 - #40 )
INFO  00:01:10,178 - #47 Node
INFO  00:01:10,178 - #47 node
INFO  00:01:10,178 - #35 ;
INFO  00:01:10,179 - #43 {
INFO  00:01:10,180 - #47 node
INFO  00:01:10,180 - #32 =
INFO  00:01:10,180 - #12 new
INFO  00:01:10,180 - #47 Node
INFO  00:01:10,180 - #39 (
INFO  00:01:10,180 - #47 data
INFO  00:01:10,180 - #37 ,
INFO  00:01:10,180 - #47 null
INFO  00:01:10,180 - #40 )
INFO  00:01:10,181 - #35 ;
INFO  00:01:10,181 - #9 if
INFO  00:01:10,181 - #39 (
INFO  00:01:10,182 - #47 tail
INFO  00:01:10,182 - #24 ==
INFO  00:01:10,182 - #47 null
INFO  00:01:10,183 - #40 )
INFO  00:01:10,184 - #43 {
INFO  00:01:10,185 - #47 head
INFO  00:01:10,185 - #32 =
INFO  00:01:10,185 - #47 node
INFO  00:01:10,185 - #35 ;
INFO  00:01:10,185 - #44 }
INFO  00:01:10,185 - #7 else
INFO  00:01:10,186 - #43 {
INFO  00:01:10,187 - #47 tail
INFO  00:01:10,187 - #38 .
INFO  00:01:10,187 - #47 next
INFO  00:01:10,187 - #32 =
INFO  00:01:10,187 - #47 node
INFO  00:01:10,187 - #35 ;
INFO  00:01:10,187 - #44 }
INFO  00:01:10,188 - #47 tail
INFO  00:01:10,188 - #32 =
INFO  00:01:10,188 - #47 node
INFO  00:01:10,188 - #35 ;
INFO  00:01:10,188 - #44 }
INFO  00:01:10,188 - #47 int
INFO  00:01:10,189 - #47 remove
INFO  00:01:10,189 - #39 (
INFO  00:01:10,189 - #40 )
INFO  00:01:10,189 - #47 int
INFO  00:01:10,189 - #47 ret
INFO  00:01:10,190 - #35 ;
INFO  00:01:10,190 - #43 {
INFO  00:01:10,190 - #9 if
INFO  00:01:10,190 - #39 (
INFO  00:01:10,190 - #47 head
INFO  00:01:10,190 - #24 ==
INFO  00:01:10,190 - #47 null
INFO  00:01:10,190 - #40 )
INFO  00:01:10,190 - #43 {
INFO  00:01:10,190 - #4 return
INFO  00:01:10,190 - #20 -
INFO  00:01:10,190 - #46 1
INFO  00:01:10,190 - #35 ;
INFO  00:01:10,191 - #44 }
INFO  00:01:10,191 - #47 ret
INFO  00:01:10,191 - #32 =
INFO  00:01:10,191 - #47 head
INFO  00:01:10,191 - #38 .
INFO  00:01:10,191 - #47 data
INFO  00:01:10,191 - #35 ;
INFO  00:01:10,191 - #47 head
INFO  00:01:10,191 - #32 =
INFO  00:01:10,191 - #47 head
INFO  00:01:10,191 - #38 .
INFO  00:01:10,192 - #47 next
INFO  00:01:10,192 - #35 ;
INFO  00:01:10,192 - #9 if
INFO  00:01:10,192 - #39 (
INFO  00:01:10,192 - #47 head
INFO  00:01:10,192 - #24 ==
INFO  00:01:10,192 - #47 null
INFO  00:01:10,192 - #40 )
INFO  00:01:10,192 - #43 {
INFO  00:01:10,192 - #47 tail
INFO  00:01:10,192 - #32 =
INFO  00:01:10,192 - #47 null
INFO  00:01:10,192 - #35 ;
INFO  00:01:10,193 - #44 }
INFO  00:01:10,193 - #4 return
INFO  00:01:10,193 - #47 ret
INFO  00:01:10,193 - #35 ;
INFO  00:01:10,193 - #44 }
INFO  00:01:10,193 - #44 }
INFO  00:01:10,193 - #44 }
INFO  00:01:10,193 - #47 int
INFO  00:01:10,194 - #47 seed
INFO  00:01:10,194 - #35 ;
INFO  00:01:10,194 - #43 {
INFO  00:01:10,194 - #47 int
INFO  00:01:10,195 - #47 rand
INFO  00:01:10,195 - #39 (
INFO  00:01:10,195 - #40 )
INFO  00:01:10,195 - #43 {
INFO  00:01:10,195 - #47 seed
INFO  00:01:10,195 - #32 =
INFO  00:01:10,195 - #39 (
INFO  00:01:10,196 - #47 seed
INFO  00:01:10,196 - #21 *
INFO  00:01:10,196 - #47 A
INFO  00:01:10,197 - #19 +
INFO  00:01:10,198 - #47 C
INFO  00:01:10,198 - #40 )
INFO  00:01:10,199 - #23 %
INFO  00:01:10,199 - #47 RAND_MAX
INFO  00:01:10,200 - #35 ;
INFO  00:01:10,200 - #4 return
INFO  00:01:10,200 - #47 seed
INFO  00:01:10,200 - #35 ;
INFO  00:01:10,200 - #44 }
INFO  00:01:10,200 - #14 void
INFO  00:01:10,200 - #47 main
INFO  00:01:10,200 - #39 (
INFO  00:01:10,200 - #40 )
INFO  00:01:10,200 - #47 LinkedList
INFO  00:01:10,200 - #47 ll
INFO  00:01:10,200 - #35 ;
INFO  00:01:10,200 - #47 int
INFO  00:01:10,200 - #47 i
INFO  00:01:10,201 - #35 ;
INFO  00:01:10,201 - #43 {
INFO  00:01:10,201 - #47 ll
INFO  00:01:10,201 - #32 =
INFO  00:01:10,201 - #12 new
INFO  00:01:10,201 - #47 LinkedList
INFO  00:01:10,201 - #39 (
INFO  00:01:10,201 - #40 )
INFO  00:01:10,202 - #35 ;
INFO  00:01:10,202 - #47 ll
INFO  00:01:10,202 - #38 .
INFO  00:01:10,202 - #47 add
INFO  00:01:10,202 - #39 (
INFO  00:01:10,202 - #46 1
INFO  00:01:10,202 - #40 )
INFO  00:01:10,203 - #35 ;
INFO  00:01:10,203 - #47 ll
INFO  00:01:10,203 - #38 .
INFO  00:01:10,203 - #47 add
INFO  00:01:10,203 - #39 (
INFO  00:01:10,203 - #46 2
INFO  00:01:10,203 - #40 )
INFO  00:01:10,203 - #35 ;
INFO  00:01:10,203 - #47 ll
INFO  00:01:10,203 - #38 .
INFO  00:01:10,204 - #47 add
INFO  00:01:10,204 - #39 (
INFO  00:01:10,204 - #46 3
INFO  00:01:10,204 - #40 )
INFO  00:01:10,204 - #35 ;
INFO  00:01:10,204 - #3 print
INFO  00:01:10,205 - #39 (
INFO  00:01:10,206 - #47 ll
INFO  00:01:10,206 - #38 .
INFO  00:01:10,206 - #47 remove
INFO  00:01:10,206 - #39 (
INFO  00:01:10,206 - #40 )
INFO  00:01:10,206 - #40 )
INFO  00:01:10,206 - #35 ;
INFO  00:01:10,206 - #3 print
INFO  00:01:10,206 - #39 (
INFO  00:01:10,207 - #47 ll
INFO  00:01:10,207 - #38 .
INFO  00:01:10,207 - #47 remove
INFO  00:01:10,207 - #39 (
INFO  00:01:10,207 - #40 )
INFO  00:01:10,207 - #40 )
INFO  00:01:10,207 - #35 ;
INFO  00:01:10,207 - #3 print
INFO  00:01:10,207 - #39 (
INFO  00:01:10,207 - #47 ll
INFO  00:01:10,207 - #38 .
INFO  00:01:10,207 - #47 remove
INFO  00:01:10,207 - #39 (
INFO  00:01:10,207 - #40 )
INFO  00:01:10,207 - #40 )
INFO  00:01:10,208 - #35 ;
INFO  00:01:10,208 - #3 print
INFO  00:01:10,208 - #39 (
INFO  00:01:10,208 - #47 ll
INFO  00:01:10,208 - #38 .
INFO  00:01:10,208 - #47 remove
INFO  00:01:10,208 - #39 (
INFO  00:01:10,208 - #40 )
INFO  00:01:10,208 - #40 )
INFO  00:01:10,208 - #35 ;
INFO  00:01:10,208 - #3 print
INFO  00:01:10,208 - #39 (
INFO  00:01:10,208 - #47 eol
INFO  00:01:10,208 - #40 )
INFO  00:01:10,208 - #35 ;
INFO  00:01:10,208 - #47 i
INFO  00:01:10,208 - #32 =
INFO  00:01:10,208 - #46 0
INFO  00:01:10,208 - #35 ;
INFO  00:01:10,208 - #11 while
INFO  00:01:10,209 - #39 (
INFO  00:01:10,209 - #47 i
INFO  00:01:10,211 - #28 <
INFO  00:01:10,211 - #46 5000
INFO  00:01:10,212 - #40 )
INFO  00:01:10,212 - #43 {
INFO  00:01:10,212 - #9 if
INFO  00:01:10,212 - #39 (
INFO  00:01:10,212 - #47 rand
INFO  00:01:10,212 - #39 (
INFO  00:01:10,212 - #40 )
INFO  00:01:10,212 - #28 <
INFO  00:01:10,212 - #47 RAND_MAX
INFO  00:01:10,212 - #22 /
INFO  00:01:10,212 - #46 2
INFO  00:01:10,213 - #40 )
INFO  00:01:10,213 - #43 {
INFO  00:01:10,213 - #47 ll
INFO  00:01:10,213 - #38 .
INFO  00:01:10,213 - #47 add
INFO  00:01:10,213 - #39 (
INFO  00:01:10,213 - #47 rand
INFO  00:01:10,213 - #39 (
INFO  00:01:10,213 - #40 )
INFO  00:01:10,213 - #40 )
INFO  00:01:10,213 - #35 ;
INFO  00:01:10,214 - #44 }
INFO  00:01:10,214 - #7 else
INFO  00:01:10,214 - #43 {
INFO  00:01:10,214 - #3 print
INFO  00:01:10,214 - #39 (
INFO  00:01:10,214 - #47 ll
INFO  00:01:10,214 - #38 .
INFO  00:01:10,214 - #47 remove
INFO  00:01:10,214 - #39 (
INFO  00:01:10,214 - #40 )
INFO  00:01:10,214 - #40 )
INFO  00:01:10,214 - #35 ;
INFO  00:01:10,214 - #3 print
INFO  00:01:10,214 - #39 (
INFO  00:01:10,214 - #47 eol
INFO  00:01:10,214 - #40 )
INFO  00:01:10,214 - #35 ;
INFO  00:01:10,214 - #44 }
INFO  00:01:10,214 - #47 i
INFO  00:01:10,214 - #33 ++
INFO  00:01:10,214 - #35 ;
INFO  00:01:10,215 - #44 }
INFO  00:01:10,215 - #3 print
INFO  00:01:10,215 - #39 (
INFO  00:01:10,215 - #48 D
INFO  00:01:10,215 - #40 )
INFO  00:01:10,215 - #35 ;
INFO  00:01:10,215 - #3 print
INFO  00:01:10,215 - #39 (
INFO  00:01:10,215 - #48 o
INFO  00:01:10,215 - #40 )
INFO  00:01:10,216 - #35 ;
INFO  00:01:10,216 - #3 print
INFO  00:01:10,216 - #39 (
INFO  00:01:10,216 - #48 n
INFO  00:01:10,216 - #40 )
INFO  00:01:10,216 - #35 ;
INFO  00:01:10,216 - #3 print
INFO  00:01:10,216 - #39 (
INFO  00:01:10,216 - #48 e
INFO  00:01:10,216 - #40 )
INFO  00:01:10,216 - #35 ;
INFO  00:01:10,216 - #3 print
INFO  00:01:10,216 - #39 (
INFO  00:01:10,216 - #48 !
INFO  00:01:10,216 - #40 )
INFO  00:01:10,216 - #35 ;
INFO  00:01:10,216 - #44 }
INFO  00:01:10,216 - #44 }
INFO  00:01:10,226 - Program(
  ProgName(
   list
  ) [ProgName]
  VarDeclarations(
    ClassDeclarations(
      ClassDeclarations(
        ConstDeclarations(
          ConstDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstantValueNumber(
               A
               15342
              ) [ConstantValueNumber]
              ListOfCharDeclarations(
                EndOfListOfCharDeclarations(
                ) [EndOfListOfCharDeclarations]
                ConstantValueNumber(
                 C
                 45194
                ) [ConstantValueNumber]
              ) [ListOfCharDeclarations]
            ) [ConstDeclaration]
          ) [ConstDeclarations]
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstantValueNumber(
             RAND_MAX
             100000
            ) [ConstantValueNumber]
            EndOfListOfCharDeclarations(
            ) [EndOfListOfCharDeclarations]
          ) [ConstDeclaration]
        ) [ConstDeclarations]
        ClassDeclaration(
          NameOfClass(
           Node
          ) [NameOfClass]
          ClassIsNotExtended(
          ) [ClassIsNotExtended]
          ClassBodyNoMethodWithConstructor(
            ClassVariables(
              ClassVariables(
                NoClassVariables(
                ) [NoClassVariables]
                ClassVarDeclaration(
                  Type(
                   int
                  ) [Type]
                  ClassVarDecLast(
                    ClassVariable(
                     data
                      VarDeclarationOfNotArray(
                      ) [VarDeclarationOfNotArray]
                    ) [ClassVariable]
                  ) [ClassVarDecLast]
                ) [ClassVarDeclaration]
              ) [ClassVariables]
              ClassVarDeclaration(
                Type(
                 Node
                ) [Type]
                ClassVarDecLast(
                  ClassVariable(
                   next
                    VarDeclarationOfNotArray(
                    ) [VarDeclarationOfNotArray]
                  ) [ClassVariable]
                ) [ClassVarDecLast]
              ) [ClassVarDeclaration]
            ) [ClassVariables]
            ListOfConstructorDeclarations(
              SingleOrLastConstructorDeclaration(
                ConstructorDeclaration(
                  ConstructorDeclarationName(
                   Node
                  ) [ConstructorDeclarationName]
                  FormalParameters(
                    SingleOrEndOfListParameter(
                      SingleFormalParameter(
                        Type(
                         int
                        ) [Type]
                       data
                        VarDeclarationOfNotArray(
                        ) [VarDeclarationOfNotArray]
                      ) [SingleFormalParameter]
                    ) [SingleOrEndOfListParameter]
                  ) [FormalParameters]
                  ConstructorWithoutVar(
                  ) [ConstructorWithoutVar]
                  Statements(
                    Statements(
                      NoStatements(
                      ) [NoStatements]
                      StatementDesignator(
                        DesignatorAssignment(
                          ClassFieldDesignator(
                            SimpleDesignator(
                             this
                            ) [SimpleDesignator]
                           data
                          ) [ClassFieldDesignator]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                DesignatorFactor(
                                  SimpleDesignator(
                                   data
                                  ) [SimpleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [DesignatorAssignment]
                      ) [StatementDesignator]
                    ) [Statements]
                    StatementDesignator(
                      DesignatorAssignment(
                        ClassFieldDesignator(
                          SimpleDesignator(
                           this
                          ) [SimpleDesignator]
                         next
                        ) [ClassFieldDesignator]
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              DesignatorFactor(
                                SimpleDesignator(
                                 null
                                ) [SimpleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [DesignatorAssignment]
                    ) [StatementDesignator]
                  ) [Statements]
                ) [ConstructorDeclaration]
              ) [SingleOrLastConstructorDeclaration]
              ConstructorDeclaration(
                ConstructorDeclarationName(
                 Node
                ) [ConstructorDeclarationName]
                FormalParameters(
                  ListOfParameters(
                    SingleFormalParameter(
                      Type(
                       int
                      ) [Type]
                     data
                      VarDeclarationOfNotArray(
                      ) [VarDeclarationOfNotArray]
                    ) [SingleFormalParameter]
                    SingleOrEndOfListParameter(
                      SingleFormalParameter(
                        Type(
                         Node
                        ) [Type]
                       next
                        VarDeclarationOfNotArray(
                        ) [VarDeclarationOfNotArray]
                      ) [SingleFormalParameter]
                    ) [SingleOrEndOfListParameter]
                  ) [ListOfParameters]
                ) [FormalParameters]
                ConstructorWithoutVar(
                ) [ConstructorWithoutVar]
                Statements(
                  Statements(
                    NoStatements(
                    ) [NoStatements]
                    StatementDesignator(
                      DesignatorAssignment(
                        ClassFieldDesignator(
                          SimpleDesignator(
                           this
                          ) [SimpleDesignator]
                         data
                        ) [ClassFieldDesignator]
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              DesignatorFactor(
                                SimpleDesignator(
                                 data
                                ) [SimpleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [DesignatorAssignment]
                    ) [StatementDesignator]
                  ) [Statements]
                  StatementDesignator(
                    DesignatorAssignment(
                      ClassFieldDesignator(
                        SimpleDesignator(
                         this
                        ) [SimpleDesignator]
                       next
                      ) [ClassFieldDesignator]
                      TermPositiveExpr(
                        Term(
                          SingleFactor(
                            DesignatorFactor(
                              SimpleDesignator(
                               next
                              ) [SimpleDesignator]
                            ) [DesignatorFactor]
                          ) [SingleFactor]
                        ) [Term]
                      ) [TermPositiveExpr]
                    ) [DesignatorAssignment]
                  ) [StatementDesignator]
                ) [Statements]
              ) [ConstructorDeclaration]
            ) [ListOfConstructorDeclarations]
          ) [ClassBodyNoMethodWithConstructor]
        ) [ClassDeclaration]
      ) [ClassDeclarations]
      ClassDeclaration(
        NameOfClass(
         LinkedList
        ) [NameOfClass]
        ClassIsNotExtended(
        ) [ClassIsNotExtended]
        ClassBodyWithMethodAndConstructor(
          ClassVariables(
            NoClassVariables(
            ) [NoClassVariables]
            ClassVarDeclaration(
              Type(
               Node
              ) [Type]
              ClassVarDecNotLast(
                ClassVarDecLast(
                  ClassVariable(
                   head
                    VarDeclarationOfNotArray(
                    ) [VarDeclarationOfNotArray]
                  ) [ClassVariable]
                ) [ClassVarDecLast]
                ClassVariable(
                 tail
                  VarDeclarationOfNotArray(
                  ) [VarDeclarationOfNotArray]
                ) [ClassVariable]
              ) [ClassVarDecNotLast]
            ) [ClassVarDeclaration]
          ) [ClassVariables]
          SingleOrLastConstructorDeclaration(
            ConstructorDeclaration(
              ConstructorDeclarationName(
               LinkedList
              ) [ConstructorDeclarationName]
              NoFormalParameters(
              ) [NoFormalParameters]
              ConstructorWithoutVar(
              ) [ConstructorWithoutVar]
              Statements(
                Statements(
                  NoStatements(
                  ) [NoStatements]
                  StatementDesignator(
                    DesignatorAssignment(
                      SimpleDesignator(
                       head
                      ) [SimpleDesignator]
                      TermPositiveExpr(
                        Term(
                          SingleFactor(
                            DesignatorFactor(
                              SimpleDesignator(
                               null
                              ) [SimpleDesignator]
                            ) [DesignatorFactor]
                          ) [SingleFactor]
                        ) [Term]
                      ) [TermPositiveExpr]
                    ) [DesignatorAssignment]
                  ) [StatementDesignator]
                ) [Statements]
                StatementDesignator(
                  DesignatorAssignment(
                    SimpleDesignator(
                     tail
                    ) [SimpleDesignator]
                    TermPositiveExpr(
                      Term(
                        SingleFactor(
                          DesignatorFactor(
                            SimpleDesignator(
                             null
                            ) [SimpleDesignator]
                          ) [DesignatorFactor]
                        ) [SingleFactor]
                      ) [Term]
                    ) [TermPositiveExpr]
                  ) [DesignatorAssignment]
                ) [StatementDesignator]
              ) [Statements]
            ) [ConstructorDeclaration]
          ) [SingleOrLastConstructorDeclaration]
          ListOfMethodsInClass(
            SingleOrEndOfListMethod(
              MethodDeclaration(
                VoidMethodTypeName(
                 add
                ) [VoidMethodTypeName]
                FormalParameters(
                  SingleOrEndOfListParameter(
                    SingleFormalParameter(
                      Type(
                       int
                      ) [Type]
                     data
                      VarDeclarationOfNotArray(
                      ) [VarDeclarationOfNotArray]
                    ) [SingleFormalParameter]
                  ) [SingleOrEndOfListParameter]
                ) [FormalParameters]
                MethodVariables(
                  MethodWithoutVariables(
                  ) [MethodWithoutVariables]
                  VarDeclaration(
                    Type(
                     Node
                    ) [Type]
                    VarDeclarationLast(
                      LastVarDeclarations(
                       node
                        VarDeclarationOfNotArray(
                        ) [VarDeclarationOfNotArray]
                      ) [LastVarDeclarations]
                    ) [VarDeclarationLast]
                  ) [VarDeclaration]
                ) [MethodVariables]
                Statements(
                  Statements(
                    Statements(
                      NoStatements(
                      ) [NoStatements]
                      StatementDesignator(
                        DesignatorAssignment(
                          SimpleDesignator(
                           node
                          ) [SimpleDesignator]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                NewClassWithActParsOperatorFactor(
                                  Type(
                                   Node
                                  ) [Type]
                                  Actuals(
                                    ActualParams(
                                      ActualParam(
                                        TermPositiveExpr(
                                          Term(
                                            SingleFactor(
                                              DesignatorFactor(
                                                SimpleDesignator(
                                                 data
                                                ) [SimpleDesignator]
                                              ) [DesignatorFactor]
                                            ) [SingleFactor]
                                          ) [Term]
                                        ) [TermPositiveExpr]
                                      ) [ActualParam]
                                      TermPositiveExpr(
                                        Term(
                                          SingleFactor(
                                            DesignatorFactor(
                                              SimpleDesignator(
                                               null
                                              ) [SimpleDesignator]
                                            ) [DesignatorFactor]
                                          ) [SingleFactor]
                                        ) [Term]
                                      ) [TermPositiveExpr]
                                    ) [ActualParams]
                                  ) [Actuals]
                                ) [NewClassWithActParsOperatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [DesignatorAssignment]
                      ) [StatementDesignator]
                    ) [Statements]
                    StatementIfElse(
                      IfCondition(
                        OnlyIf(
                        ) [OnlyIf]
                        ConditionsWithoutOr(
                          ConditionsWithoutAnd(
                            RelopCondition(
                              TermPositiveExpr(
                                Term(
                                  SingleFactor(
                                    DesignatorFactor(
                                      SimpleDesignator(
                                       tail
                                      ) [SimpleDesignator]
                                    ) [DesignatorFactor]
                                  ) [SingleFactor]
                                ) [Term]
                              ) [TermPositiveExpr]
                              EqualOperator(
                              ) [EqualOperator]
                              TermPositiveExpr(
                                Term(
                                  SingleFactor(
                                    DesignatorFactor(
                                      SimpleDesignator(
                                       null
                                      ) [SimpleDesignator]
                                    ) [DesignatorFactor]
                                  ) [SingleFactor]
                                ) [Term]
                              ) [TermPositiveExpr]
                            ) [RelopCondition]
                          ) [ConditionsWithoutAnd]
                        ) [ConditionsWithoutOr]
                        FirstFixupForIf(
                        ) [FirstFixupForIf]
                      ) [IfCondition]
                      StatementBlock(
                        Statements(
                          NoStatements(
                          ) [NoStatements]
                          StatementDesignator(
                            DesignatorAssignment(
                              SimpleDesignator(
                               head
                              ) [SimpleDesignator]
                              TermPositiveExpr(
                                Term(
                                  SingleFactor(
                                    DesignatorFactor(
                                      SimpleDesignator(
                                       node
                                      ) [SimpleDesignator]
                                    ) [DesignatorFactor]
                                  ) [SingleFactor]
                                ) [Term]
                              ) [TermPositiveExpr]
                            ) [DesignatorAssignment]
                          ) [StatementDesignator]
                        ) [Statements]
                      ) [StatementBlock]
                      SecondFixupForIf(
                      ) [SecondFixupForIf]
                      StatementBlock(
                        Statements(
                          NoStatements(
                          ) [NoStatements]
                          StatementDesignator(
                            DesignatorAssignment(
                              ClassFieldDesignator(
                                SimpleDesignator(
                                 tail
                                ) [SimpleDesignator]
                               next
                              ) [ClassFieldDesignator]
                              TermPositiveExpr(
                                Term(
                                  SingleFactor(
                                    DesignatorFactor(
                                      SimpleDesignator(
                                       node
                                      ) [SimpleDesignator]
                                    ) [DesignatorFactor]
                                  ) [SingleFactor]
                                ) [Term]
                              ) [TermPositiveExpr]
                            ) [DesignatorAssignment]
                          ) [StatementDesignator]
                        ) [Statements]
                      ) [StatementBlock]
                    ) [StatementIfElse]
                  ) [Statements]
                  StatementDesignator(
                    DesignatorAssignment(
                      SimpleDesignator(
                       tail
                      ) [SimpleDesignator]
                      TermPositiveExpr(
                        Term(
                          SingleFactor(
                            DesignatorFactor(
                              SimpleDesignator(
                               node
                              ) [SimpleDesignator]
                            ) [DesignatorFactor]
                          ) [SingleFactor]
                        ) [Term]
                      ) [TermPositiveExpr]
                    ) [DesignatorAssignment]
                  ) [StatementDesignator]
                ) [Statements]
              ) [MethodDeclaration]
            ) [SingleOrEndOfListMethod]
            MethodDeclaration(
              ReturnMethodTypeName(
                Type(
                 int
                ) [Type]
               remove
              ) [ReturnMethodTypeName]
              NoFormalParameters(
              ) [NoFormalParameters]
              MethodVariables(
                MethodWithoutVariables(
                ) [MethodWithoutVariables]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarDeclarationLast(
                    LastVarDeclarations(
                     ret
                      VarDeclarationOfNotArray(
                      ) [VarDeclarationOfNotArray]
                    ) [LastVarDeclarations]
                  ) [VarDeclarationLast]
                ) [VarDeclaration]
              ) [MethodVariables]
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStatements(
                        ) [NoStatements]
                        StatementIf(
                          IfCondition(
                            OnlyIf(
                            ) [OnlyIf]
                            ConditionsWithoutOr(
                              ConditionsWithoutAnd(
                                RelopCondition(
                                  TermPositiveExpr(
                                    Term(
                                      SingleFactor(
                                        DesignatorFactor(
                                          SimpleDesignator(
                                           head
                                          ) [SimpleDesignator]
                                        ) [DesignatorFactor]
                                      ) [SingleFactor]
                                    ) [Term]
                                  ) [TermPositiveExpr]
                                  EqualOperator(
                                  ) [EqualOperator]
                                  TermPositiveExpr(
                                    Term(
                                      SingleFactor(
                                        DesignatorFactor(
                                          SimpleDesignator(
                                           null
                                          ) [SimpleDesignator]
                                        ) [DesignatorFactor]
                                      ) [SingleFactor]
                                    ) [Term]
                                  ) [TermPositiveExpr]
                                ) [RelopCondition]
                              ) [ConditionsWithoutAnd]
                            ) [ConditionsWithoutOr]
                            FirstFixupForIf(
                            ) [FirstFixupForIf]
                          ) [IfCondition]
                          StatementBlock(
                            Statements(
                              NoStatements(
                              ) [NoStatements]
                              StatementReturnExpr(
                                TermNegativeExpr(
                                  Term(
                                    SingleFactor(
                                      NumberConstFactor(
                                       1
                                      ) [NumberConstFactor]
                                    ) [SingleFactor]
                                  ) [Term]
                                ) [TermNegativeExpr]
                              ) [StatementReturnExpr]
                            ) [Statements]
                          ) [StatementBlock]
                          SecondFixupForIf(
                          ) [SecondFixupForIf]
                        ) [StatementIf]
                      ) [Statements]
                      StatementDesignator(
                        DesignatorAssignment(
                          SimpleDesignator(
                           ret
                          ) [SimpleDesignator]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                DesignatorFactor(
                                  ClassFieldDesignator(
                                    SimpleDesignator(
                                     head
                                    ) [SimpleDesignator]
                                   data
                                  ) [ClassFieldDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [DesignatorAssignment]
                      ) [StatementDesignator]
                    ) [Statements]
                    StatementDesignator(
                      DesignatorAssignment(
                        SimpleDesignator(
                         head
                        ) [SimpleDesignator]
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              DesignatorFactor(
                                ClassFieldDesignator(
                                  SimpleDesignator(
                                   head
                                  ) [SimpleDesignator]
                                 next
                                ) [ClassFieldDesignator]
                              ) [DesignatorFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [DesignatorAssignment]
                    ) [StatementDesignator]
                  ) [Statements]
                  StatementIf(
                    IfCondition(
                      OnlyIf(
                      ) [OnlyIf]
                      ConditionsWithoutOr(
                        ConditionsWithoutAnd(
                          RelopCondition(
                            TermPositiveExpr(
                              Term(
                                SingleFactor(
                                  DesignatorFactor(
                                    SimpleDesignator(
                                     head
                                    ) [SimpleDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleFactor]
                              ) [Term]
                            ) [TermPositiveExpr]
                            EqualOperator(
                            ) [EqualOperator]
                            TermPositiveExpr(
                              Term(
                                SingleFactor(
                                  DesignatorFactor(
                                    SimpleDesignator(
                                     null
                                    ) [SimpleDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleFactor]
                              ) [Term]
                            ) [TermPositiveExpr]
                          ) [RelopCondition]
                        ) [ConditionsWithoutAnd]
                      ) [ConditionsWithoutOr]
                      FirstFixupForIf(
                      ) [FirstFixupForIf]
                    ) [IfCondition]
                    StatementBlock(
                      Statements(
                        NoStatements(
                        ) [NoStatements]
                        StatementDesignator(
                          DesignatorAssignment(
                            SimpleDesignator(
                             tail
                            ) [SimpleDesignator]
                            TermPositiveExpr(
                              Term(
                                SingleFactor(
                                  DesignatorFactor(
                                    SimpleDesignator(
                                     null
                                    ) [SimpleDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleFactor]
                              ) [Term]
                            ) [TermPositiveExpr]
                          ) [DesignatorAssignment]
                        ) [StatementDesignator]
                      ) [Statements]
                    ) [StatementBlock]
                    SecondFixupForIf(
                    ) [SecondFixupForIf]
                  ) [StatementIf]
                ) [Statements]
                StatementReturnExpr(
                  TermPositiveExpr(
                    Term(
                      SingleFactor(
                        DesignatorFactor(
                          SimpleDesignator(
                           ret
                          ) [SimpleDesignator]
                        ) [DesignatorFactor]
                      ) [SingleFactor]
                    ) [Term]
                  ) [TermPositiveExpr]
                ) [StatementReturnExpr]
              ) [Statements]
            ) [MethodDeclaration]
          ) [ListOfMethodsInClass]
        ) [ClassBodyWithMethodAndConstructor]
      ) [ClassDeclaration]
    ) [ClassDeclarations]
    VarDeclaration(
      Type(
       int
      ) [Type]
      VarDeclarationLast(
        LastVarDeclarations(
         seed
          VarDeclarationOfNotArray(
          ) [VarDeclarationOfNotArray]
        ) [LastVarDeclarations]
      ) [VarDeclarationLast]
    ) [VarDeclaration]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDeclarations(
      ) [NoMethodDeclarations]
      MethodDeclaration(
        ReturnMethodTypeName(
          Type(
           int
          ) [Type]
         rand
        ) [ReturnMethodTypeName]
        NoFormalParameters(
        ) [NoFormalParameters]
        MethodWithoutVariables(
        ) [MethodWithoutVariables]
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            StatementDesignator(
              DesignatorAssignment(
                SimpleDesignator(
                 seed
                ) [SimpleDesignator]
                TermPositiveExpr(
                  Term(
                    MultipleFactors(
                      SingleFactor(
                        ExprFactor(
                          AddExpr(
                            TermPositiveExpr(
                              Term(
                                MultipleFactors(
                                  SingleFactor(
                                    DesignatorFactor(
                                      SimpleDesignator(
                                       seed
                                      ) [SimpleDesignator]
                                    ) [DesignatorFactor]
                                  ) [SingleFactor]
                                  MultiplyOperator(
                                  ) [MultiplyOperator]
                                  DesignatorFactor(
                                    SimpleDesignator(
                                     A
                                    ) [SimpleDesignator]
                                  ) [DesignatorFactor]
                                ) [MultipleFactors]
                              ) [Term]
                            ) [TermPositiveExpr]
                            PlusOperator(
                            ) [PlusOperator]
                            Term(
                              SingleFactor(
                                DesignatorFactor(
                                  SimpleDesignator(
                                   C
                                  ) [SimpleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [AddExpr]
                        ) [ExprFactor]
                      ) [SingleFactor]
                      ModuoOperator(
                      ) [ModuoOperator]
                      DesignatorFactor(
                        SimpleDesignator(
                         RAND_MAX
                        ) [SimpleDesignator]
                      ) [DesignatorFactor]
                    ) [MultipleFactors]
                  ) [Term]
                ) [TermPositiveExpr]
              ) [DesignatorAssignment]
            ) [StatementDesignator]
          ) [Statements]
          StatementReturnExpr(
            TermPositiveExpr(
              Term(
                SingleFactor(
                  DesignatorFactor(
                    SimpleDesignator(
                     seed
                    ) [SimpleDesignator]
                  ) [DesignatorFactor]
                ) [SingleFactor]
              ) [Term]
            ) [TermPositiveExpr]
          ) [StatementReturnExpr]
        ) [Statements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      VoidMethodTypeName(
       main
      ) [VoidMethodTypeName]
      NoFormalParameters(
      ) [NoFormalParameters]
      MethodVariables(
        MethodVariables(
          MethodWithoutVariables(
          ) [MethodWithoutVariables]
          VarDeclaration(
            Type(
             LinkedList
            ) [Type]
            VarDeclarationLast(
              LastVarDeclarations(
               ll
                VarDeclarationOfNotArray(
                ) [VarDeclarationOfNotArray]
              ) [LastVarDeclarations]
            ) [VarDeclarationLast]
          ) [VarDeclaration]
        ) [MethodVariables]
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclarationLast(
            LastVarDeclarations(
             i
              VarDeclarationOfNotArray(
              ) [VarDeclarationOfNotArray]
            ) [LastVarDeclarations]
          ) [VarDeclarationLast]
        ) [VarDeclaration]
      ) [MethodVariables]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      NoStatements(
                                      ) [NoStatements]
                                      StatementDesignator(
                                        DesignatorAssignment(
                                          SimpleDesignator(
                                           ll
                                          ) [SimpleDesignator]
                                          TermPositiveExpr(
                                            Term(
                                              SingleFactor(
                                                NewClassWithActParsOperatorFactor(
                                                  Type(
                                                   LinkedList
                                                  ) [Type]
                                                  NoActuals(
                                                  ) [NoActuals]
                                                ) [NewClassWithActParsOperatorFactor]
                                              ) [SingleFactor]
                                            ) [Term]
                                          ) [TermPositiveExpr]
                                        ) [DesignatorAssignment]
                                      ) [StatementDesignator]
                                    ) [Statements]
                                    StatementDesignator(
                                      DesignatorFuncCall(
                                        FuncCallFactorDesignator(
                                          ClassFieldDesignator(
                                            SimpleDesignator(
                                             ll
                                            ) [SimpleDesignator]
                                           add
                                          ) [ClassFieldDesignator]
                                        ) [FuncCallFactorDesignator]
                                        Actuals(
                                          ActualParam(
                                            TermPositiveExpr(
                                              Term(
                                                SingleFactor(
                                                  NumberConstFactor(
                                                   1
                                                  ) [NumberConstFactor]
                                                ) [SingleFactor]
                                              ) [Term]
                                            ) [TermPositiveExpr]
                                          ) [ActualParam]
                                        ) [Actuals]
                                      ) [DesignatorFuncCall]
                                    ) [StatementDesignator]
                                  ) [Statements]
                                  StatementDesignator(
                                    DesignatorFuncCall(
                                      FuncCallFactorDesignator(
                                        ClassFieldDesignator(
                                          SimpleDesignator(
                                           ll
                                          ) [SimpleDesignator]
                                         add
                                        ) [ClassFieldDesignator]
                                      ) [FuncCallFactorDesignator]
                                      Actuals(
                                        ActualParam(
                                          TermPositiveExpr(
                                            Term(
                                              SingleFactor(
                                                NumberConstFactor(
                                                 2
                                                ) [NumberConstFactor]
                                              ) [SingleFactor]
                                            ) [Term]
                                          ) [TermPositiveExpr]
                                        ) [ActualParam]
                                      ) [Actuals]
                                    ) [DesignatorFuncCall]
                                  ) [StatementDesignator]
                                ) [Statements]
                                StatementDesignator(
                                  DesignatorFuncCall(
                                    FuncCallFactorDesignator(
                                      ClassFieldDesignator(
                                        SimpleDesignator(
                                         ll
                                        ) [SimpleDesignator]
                                       add
                                      ) [ClassFieldDesignator]
                                    ) [FuncCallFactorDesignator]
                                    Actuals(
                                      ActualParam(
                                        TermPositiveExpr(
                                          Term(
                                            SingleFactor(
                                              NumberConstFactor(
                                               3
                                              ) [NumberConstFactor]
                                            ) [SingleFactor]
                                          ) [Term]
                                        ) [TermPositiveExpr]
                                      ) [ActualParam]
                                    ) [Actuals]
                                  ) [DesignatorFuncCall]
                                ) [StatementDesignator]
                              ) [Statements]
                              StatementPrintWithoutWidth(
                                PrintEmptyDummy(
                                ) [PrintEmptyDummy]
                                TermPositiveExpr(
                                  Term(
                                    SingleFactor(
                                      FuncCallFactor(
                                        FuncCallFactorDesignator(
                                          ClassFieldDesignator(
                                            SimpleDesignator(
                                             ll
                                            ) [SimpleDesignator]
                                           remove
                                          ) [ClassFieldDesignator]
                                        ) [FuncCallFactorDesignator]
                                        NoActuals(
                                        ) [NoActuals]
                                      ) [FuncCallFactor]
                                    ) [SingleFactor]
                                  ) [Term]
                                ) [TermPositiveExpr]
                              ) [StatementPrintWithoutWidth]
                            ) [Statements]
                            StatementPrintWithoutWidth(
                              PrintEmptyDummy(
                              ) [PrintEmptyDummy]
                              TermPositiveExpr(
                                Term(
                                  SingleFactor(
                                    FuncCallFactor(
                                      FuncCallFactorDesignator(
                                        ClassFieldDesignator(
                                          SimpleDesignator(
                                           ll
                                          ) [SimpleDesignator]
                                         remove
                                        ) [ClassFieldDesignator]
                                      ) [FuncCallFactorDesignator]
                                      NoActuals(
                                      ) [NoActuals]
                                    ) [FuncCallFactor]
                                  ) [SingleFactor]
                                ) [Term]
                              ) [TermPositiveExpr]
                            ) [StatementPrintWithoutWidth]
                          ) [Statements]
                          StatementPrintWithoutWidth(
                            PrintEmptyDummy(
                            ) [PrintEmptyDummy]
                            TermPositiveExpr(
                              Term(
                                SingleFactor(
                                  FuncCallFactor(
                                    FuncCallFactorDesignator(
                                      ClassFieldDesignator(
                                        SimpleDesignator(
                                         ll
                                        ) [SimpleDesignator]
                                       remove
                                      ) [ClassFieldDesignator]
                                    ) [FuncCallFactorDesignator]
                                    NoActuals(
                                    ) [NoActuals]
                                  ) [FuncCallFactor]
                                ) [SingleFactor]
                              ) [Term]
                            ) [TermPositiveExpr]
                          ) [StatementPrintWithoutWidth]
                        ) [Statements]
                        StatementPrintWithoutWidth(
                          PrintEmptyDummy(
                          ) [PrintEmptyDummy]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                FuncCallFactor(
                                  FuncCallFactorDesignator(
                                    ClassFieldDesignator(
                                      SimpleDesignator(
                                       ll
                                      ) [SimpleDesignator]
                                     remove
                                    ) [ClassFieldDesignator]
                                  ) [FuncCallFactorDesignator]
                                  NoActuals(
                                  ) [NoActuals]
                                ) [FuncCallFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [StatementPrintWithoutWidth]
                      ) [Statements]
                      StatementPrintWithoutWidth(
                        PrintEmptyDummy(
                        ) [PrintEmptyDummy]
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              DesignatorFactor(
                                SimpleDesignator(
                                 eol
                                ) [SimpleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [StatementPrintWithoutWidth]
                    ) [Statements]
                    StatementDesignator(
                      DesignatorAssignment(
                        SimpleDesignator(
                         i
                        ) [SimpleDesignator]
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              NumberConstFactor(
                               0
                              ) [NumberConstFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [DesignatorAssignment]
                    ) [StatementDesignator]
                  ) [Statements]
                  StatementWhile(
                    WhileLoopParen(
                    ) [WhileLoopParen]
                    FirstFixupForWhile(
                    ) [FirstFixupForWhile]
                    ConditionsWithoutOr(
                      ConditionsWithoutAnd(
                        RelopCondition(
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                DesignatorFactor(
                                  SimpleDesignator(
                                   i
                                  ) [SimpleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                          LessOperator(
                          ) [LessOperator]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                NumberConstFactor(
                                 5000
                                ) [NumberConstFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [RelopCondition]
                      ) [ConditionsWithoutAnd]
                    ) [ConditionsWithoutOr]
                    StatementBlock(
                      Statements(
                        Statements(
                          NoStatements(
                          ) [NoStatements]
                          StatementIfElse(
                            IfCondition(
                              OnlyIf(
                              ) [OnlyIf]
                              ConditionsWithoutOr(
                                ConditionsWithoutAnd(
                                  RelopCondition(
                                    TermPositiveExpr(
                                      Term(
                                        SingleFactor(
                                          FuncCallFactor(
                                            FuncCallFactorDesignator(
                                              SimpleDesignator(
                                               rand
                                              ) [SimpleDesignator]
                                            ) [FuncCallFactorDesignator]
                                            NoActuals(
                                            ) [NoActuals]
                                          ) [FuncCallFactor]
                                        ) [SingleFactor]
                                      ) [Term]
                                    ) [TermPositiveExpr]
                                    LessOperator(
                                    ) [LessOperator]
                                    TermPositiveExpr(
                                      Term(
                                        MultipleFactors(
                                          SingleFactor(
                                            DesignatorFactor(
                                              SimpleDesignator(
                                               RAND_MAX
                                              ) [SimpleDesignator]
                                            ) [DesignatorFactor]
                                          ) [SingleFactor]
                                          DivideOperator(
                                          ) [DivideOperator]
                                          NumberConstFactor(
                                           2
                                          ) [NumberConstFactor]
                                        ) [MultipleFactors]
                                      ) [Term]
                                    ) [TermPositiveExpr]
                                  ) [RelopCondition]
                                ) [ConditionsWithoutAnd]
                              ) [ConditionsWithoutOr]
                              FirstFixupForIf(
                              ) [FirstFixupForIf]
                            ) [IfCondition]
                            StatementBlock(
                              Statements(
                                NoStatements(
                                ) [NoStatements]
                                StatementDesignator(
                                  DesignatorFuncCall(
                                    FuncCallFactorDesignator(
                                      ClassFieldDesignator(
                                        SimpleDesignator(
                                         ll
                                        ) [SimpleDesignator]
                                       add
                                      ) [ClassFieldDesignator]
                                    ) [FuncCallFactorDesignator]
                                    Actuals(
                                      ActualParam(
                                        TermPositiveExpr(
                                          Term(
                                            SingleFactor(
                                              FuncCallFactor(
                                                FuncCallFactorDesignator(
                                                  SimpleDesignator(
                                                   rand
                                                  ) [SimpleDesignator]
                                                ) [FuncCallFactorDesignator]
                                                NoActuals(
                                                ) [NoActuals]
                                              ) [FuncCallFactor]
                                            ) [SingleFactor]
                                          ) [Term]
                                        ) [TermPositiveExpr]
                                      ) [ActualParam]
                                    ) [Actuals]
                                  ) [DesignatorFuncCall]
                                ) [StatementDesignator]
                              ) [Statements]
                            ) [StatementBlock]
                            SecondFixupForIf(
                            ) [SecondFixupForIf]
                            StatementBlock(
                              Statements(
                                Statements(
                                  NoStatements(
                                  ) [NoStatements]
                                  StatementPrintWithoutWidth(
                                    PrintEmptyDummy(
                                    ) [PrintEmptyDummy]
                                    TermPositiveExpr(
                                      Term(
                                        SingleFactor(
                                          FuncCallFactor(
                                            FuncCallFactorDesignator(
                                              ClassFieldDesignator(
                                                SimpleDesignator(
                                                 ll
                                                ) [SimpleDesignator]
                                               remove
                                              ) [ClassFieldDesignator]
                                            ) [FuncCallFactorDesignator]
                                            NoActuals(
                                            ) [NoActuals]
                                          ) [FuncCallFactor]
                                        ) [SingleFactor]
                                      ) [Term]
                                    ) [TermPositiveExpr]
                                  ) [StatementPrintWithoutWidth]
                                ) [Statements]
                                StatementPrintWithoutWidth(
                                  PrintEmptyDummy(
                                  ) [PrintEmptyDummy]
                                  TermPositiveExpr(
                                    Term(
                                      SingleFactor(
                                        DesignatorFactor(
                                          SimpleDesignator(
                                           eol
                                          ) [SimpleDesignator]
                                        ) [DesignatorFactor]
                                      ) [SingleFactor]
                                    ) [Term]
                                  ) [TermPositiveExpr]
                                ) [StatementPrintWithoutWidth]
                              ) [Statements]
                            ) [StatementBlock]
                          ) [StatementIfElse]
                        ) [Statements]
                        StatementDesignator(
                          DesignatorInc(
                            SimpleDesignator(
                             i
                            ) [SimpleDesignator]
                          ) [DesignatorInc]
                        ) [StatementDesignator]
                      ) [Statements]
                    ) [StatementBlock]
                  ) [StatementWhile]
                ) [Statements]
                StatementPrintWithoutWidth(
                  PrintEmptyDummy(
                  ) [PrintEmptyDummy]
                  TermPositiveExpr(
                    Term(
                      SingleFactor(
                        CharConstFactor(
                         D
                        ) [CharConstFactor]
                      ) [SingleFactor]
                    ) [Term]
                  ) [TermPositiveExpr]
                ) [StatementPrintWithoutWidth]
              ) [Statements]
              StatementPrintWithoutWidth(
                PrintEmptyDummy(
                ) [PrintEmptyDummy]
                TermPositiveExpr(
                  Term(
                    SingleFactor(
                      CharConstFactor(
                       o
                      ) [CharConstFactor]
                    ) [SingleFactor]
                  ) [Term]
                ) [TermPositiveExpr]
              ) [StatementPrintWithoutWidth]
            ) [Statements]
            StatementPrintWithoutWidth(
              PrintEmptyDummy(
              ) [PrintEmptyDummy]
              TermPositiveExpr(
                Term(
                  SingleFactor(
                    CharConstFactor(
                     n
                    ) [CharConstFactor]
                  ) [SingleFactor]
                ) [Term]
              ) [TermPositiveExpr]
            ) [StatementPrintWithoutWidth]
          ) [Statements]
          StatementPrintWithoutWidth(
            PrintEmptyDummy(
            ) [PrintEmptyDummy]
            TermPositiveExpr(
              Term(
                SingleFactor(
                  CharConstFactor(
                   e
                  ) [CharConstFactor]
                ) [SingleFactor]
              ) [Term]
            ) [TermPositiveExpr]
          ) [StatementPrintWithoutWidth]
        ) [Statements]
        StatementPrintWithoutWidth(
          PrintEmptyDummy(
          ) [PrintEmptyDummy]
          TermPositiveExpr(
            Term(
              SingleFactor(
                CharConstFactor(
                 !
                ) [CharConstFactor]
              ) [SingleFactor]
            ) [Term]
          ) [TermPositiveExpr]
        ) [StatementPrintWithoutWidth]
      ) [Statements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  00:01:10,228 - ====================================
INFO  00:01:10,236 - Kreirana je klasa Node na liniji 6
INFO  00:01:10,237 - Konst broj: 0
INFO  00:01:10,237 - NAPRAVLJEN KONST SA FORM PARS1
INFO  00:01:10,237 - Konst broj: 1
INFO  00:01:10,238 - CONSTRUCTOR: Node
INFO  00:01:10,238 - int
INFO  00:01:10,238 - NAPRAVLJEN KONST SA FORM PARS2
INFO  00:01:10,238 - Broj konstruktora: 2
INFO  00:01:10,238 - Kreirana je klasa LinkedList na liniji 21
INFO  00:01:10,238 - Konst broj: 0
INFO  00:01:10,238 - NAPRAVLJEN KONST SA FORM PARS0
INFO  00:01:10,238 - Definicija metode add na liniji 28
INFO  00:01:10,238 - Kreirana je promenjiva node na liniji 28
INFO  00:01:10,239 - Pristup polju tail.next na liniji 33
INFO  00:01:10,239 - Definicija metode remove na liniji 37
INFO  00:01:10,239 - Kreirana je promenjiva ret na liniji 37
INFO  00:01:10,239 - Pristup polju head.data na liniji 41
INFO  00:01:10,239 - Pristup polju head.next na liniji 42
INFO  00:01:10,239 - Broj konstruktora: 1
INFO  00:01:10,239 - Kreirana je promenjiva seed na liniji 51
INFO  00:01:10,239 - Definicija funkcije rand na liniji 54
INFO  00:01:10,240 - Definicija funkcije main na liniji 58
INFO  00:01:10,240 - Kreirana je promenjiva ll na liniji 58
INFO  00:01:10,240 - Kreirana je promenjiva i na liniji 58
INFO  00:01:10,240 - Pristup polju ll.add na liniji 60
INFO  00:01:10,240 - Pristup polju ll.add na liniji 61
INFO  00:01:10,240 - Pristup polju ll.add na liniji 62
INFO  00:01:10,240 - Pristup polju ll.remove na liniji 63
INFO  00:01:10,240 - Prepoznata naredba print
INFO  00:01:10,240 - Pristup polju ll.remove na liniji 64
INFO  00:01:10,240 - Prepoznata naredba print
INFO  00:01:10,240 - Pristup polju ll.remove na liniji 65
INFO  00:01:10,240 - Prepoznata naredba print
INFO  00:01:10,240 - Pristup polju ll.remove na liniji 66
INFO  00:01:10,240 - Prepoznata naredba print
INFO  00:01:10,240 - Prepoznata naredba print
INFO  00:01:10,240 - Pristup polju ll.add na liniji 71
INFO  00:01:10,241 - Pristup polju ll.remove na liniji 73
INFO  00:01:10,241 - Prepoznata naredba print
INFO  00:01:10,241 - Prepoznata naredba print
INFO  00:01:10,241 - Prepoznata naredba print
INFO  00:01:10,241 - Prepoznata naredba print
INFO  00:01:10,241 - Prepoznata naredba print
INFO  00:01:10,241 - Prepoznata naredba print
INFO  00:01:10,241 - Prepoznata naredba print
INFO  00:01:10,241 - Print count calls = 12
INFO  00:01:10,241 - ====================================
