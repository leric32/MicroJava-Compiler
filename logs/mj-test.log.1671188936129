INFO  12:08:21,287 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\pr2.mj
INFO  12:08:22,230 - #2 program
INFO  12:08:22,230 - #48 Program
INFO  12:08:22,231 - #5 class
INFO  12:08:22,238 - #48 A
INFO  12:08:22,238 - #44 {
INFO  12:08:22,239 - #48 int
INFO  12:08:22,240 - #48 x
INFO  12:08:22,241 - #42 [
INFO  12:08:22,242 - #43 ]
INFO  12:08:22,242 - #38 ,
INFO  12:08:22,244 - #48 y
INFO  12:08:22,244 - #42 [
INFO  12:08:22,245 - #43 ]
INFO  12:08:22,246 - #36 ;
INFO  12:08:22,248 - #45 }
INFO  12:08:22,248 - #8 const
INFO  12:08:22,249 - #48 int
INFO  12:08:22,250 - #48 pi
INFO  12:08:22,250 - #33 =
INFO  12:08:22,250 - #47 3
INFO  12:08:22,251 - #38 ,
INFO  12:08:22,252 - #48 e
INFO  12:08:22,253 - #33 =
INFO  12:08:22,253 - #47 2
INFO  12:08:22,253 - #36 ;
INFO  12:08:22,253 - #48 int
INFO  12:08:22,254 - #48 a
INFO  12:08:22,254 - #38 ,
INFO  12:08:22,255 - #48 b
INFO  12:08:22,256 - #36 ;
INFO  12:08:22,257 - #5 class
INFO  12:08:22,257 - #48 B
INFO  12:08:22,257 - #15 extends
INFO  12:08:22,257 - #48 A
INFO  12:08:22,258 - #44 {
INFO  12:08:22,258 - #48 int
INFO  12:08:22,258 - #48 i
INFO  12:08:22,258 - #36 ;
INFO  12:08:22,259 - #44 {
INFO  12:08:22,259 - #48 int
INFO  12:08:22,259 - #48 getValue
INFO  12:08:22,260 - #40 (
INFO  12:08:22,260 - #48 int
INFO  12:08:22,260 - #48 a
INFO  12:08:22,261 - #41 )
INFO  12:08:22,261 - #48 int
INFO  12:08:22,263 - #48 b
INFO  12:08:22,263 - #36 ;
INFO  12:08:22,263 - #48 bool
INFO  12:08:22,263 - #48 c
INFO  12:08:22,264 - #36 ;
INFO  12:08:22,264 - #44 {
INFO  12:08:22,264 - #4 return
INFO  12:08:22,265 - #17 this
INFO  12:08:22,265 - #39 .
INFO  12:08:22,265 - #48 i
INFO  12:08:22,265 - #20 +
INFO  12:08:22,268 - #17 this
INFO  12:08:22,269 - #39 .
INFO  12:08:22,270 - #48 x
INFO  12:08:22,270 - #42 [
INFO  12:08:22,270 - #47 0
INFO  12:08:22,271 - #43 ]
INFO  12:08:22,271 - #20 +
INFO  12:08:22,271 - #48 a
INFO  12:08:22,272 - #36 ;
INFO  12:08:22,272 - #45 }
INFO  12:08:22,272 - #14 void
INFO  12:08:22,273 - #48 m
INFO  12:08:22,273 - #40 (
INFO  12:08:22,273 - #41 )
INFO  12:08:22,275 - #48 int
INFO  12:08:22,275 - #48 a
INFO  12:08:22,275 - #36 ;
INFO  12:08:22,275 - #44 {
INFO  12:08:22,275 - #48 x
INFO  12:08:22,275 - #39 .
INFO  12:08:22,276 - #18 foreach
INFO  12:08:22,276 - #40 (
INFO  12:08:22,276 - #48 a
INFO  12:08:22,276 - #46 =>
INFO  12:08:22,276 - #3 print
INFO  12:08:22,276 - #40 (
INFO  12:08:22,276 - #48 a
INFO  12:08:22,277 - #41 )
INFO  12:08:22,277 - #36 ;
INFO  12:08:22,277 - #41 )
INFO  12:08:22,277 - #36 ;
INFO  12:08:22,277 - #45 }
INFO  12:08:22,278 - #45 }
INFO  12:08:22,278 - #45 }
INFO  12:08:22,278 - #5 class
INFO  12:08:22,278 - #48 C
INFO  12:08:22,278 - #15 extends
INFO  12:08:22,278 - #48 B
INFO  12:08:22,279 - #44 {
INFO  12:08:22,279 - #48 A
INFO  12:08:22,279 - #48 theA
INFO  12:08:22,279 - #36 ;
INFO  12:08:22,279 - #48 int
INFO  12:08:22,279 - #48 a
INFO  12:08:22,279 - #36 ;
INFO  12:08:22,280 - #45 }
INFO  12:08:22,280 - #44 {
INFO  12:08:22,280 - #14 void
INFO  12:08:22,281 - #48 main
INFO  12:08:22,281 - #40 (
INFO  12:08:22,281 - #41 )
INFO  12:08:22,282 - #48 A
INFO  12:08:22,282 - #48 a
INFO  12:08:22,282 - #36 ;
INFO  12:08:22,282 - #48 C
INFO  12:08:22,282 - #48 c
INFO  12:08:22,282 - #36 ;
INFO  12:08:22,282 - #48 int
INFO  12:08:22,282 - #48 i
INFO  12:08:22,283 - #36 ;
INFO  12:08:22,283 - #48 int
INFO  12:08:22,283 - #48 x
INFO  12:08:22,283 - #42 [
INFO  12:08:22,283 - #43 ]
INFO  12:08:22,283 - #36 ;
INFO  12:08:22,283 - #48 char
INFO  12:08:22,284 - #48 ch
INFO  12:08:22,284 - #36 ;
INFO  12:08:22,284 - #44 {
INFO  12:08:22,284 - #48 a
INFO  12:08:22,284 - #33 =
INFO  12:08:22,284 - #12 new
INFO  12:08:22,284 - #48 A
INFO  12:08:22,284 - #40 (
INFO  12:08:22,285 - #41 )
INFO  12:08:22,285 - #36 ;
INFO  12:08:22,285 - #48 a
INFO  12:08:22,285 - #39 .
INFO  12:08:22,286 - #48 x
INFO  12:08:22,286 - #33 =
INFO  12:08:22,286 - #12 new
INFO  12:08:22,286 - #48 int
INFO  12:08:22,286 - #42 [
INFO  12:08:22,286 - #47 5
INFO  12:08:22,286 - #43 ]
INFO  12:08:22,286 - #36 ;
INFO  12:08:22,287 - #48 a
INFO  12:08:22,287 - #39 .
INFO  12:08:22,287 - #48 y
INFO  12:08:22,287 - #33 =
INFO  12:08:22,287 - #12 new
INFO  12:08:22,287 - #48 int
INFO  12:08:22,287 - #42 [
INFO  12:08:22,287 - #47 5
INFO  12:08:22,288 - #43 ]
INFO  12:08:22,288 - #36 ;
INFO  12:08:22,288 - #48 c
INFO  12:08:22,288 - #33 =
INFO  12:08:22,288 - #12 new
INFO  12:08:22,288 - #48 C
INFO  12:08:22,289 - #40 (
INFO  12:08:22,290 - #41 )
INFO  12:08:22,290 - #36 ;
INFO  12:08:22,290 - #48 c
INFO  12:08:22,291 - #39 .
INFO  12:08:22,291 - #48 theA
INFO  12:08:22,291 - #33 =
INFO  12:08:22,291 - #48 a
INFO  12:08:22,292 - #36 ;
INFO  12:08:22,292 - #48 c
INFO  12:08:22,292 - #39 .
INFO  12:08:22,292 - #48 x
INFO  12:08:22,293 - #33 =
INFO  12:08:22,293 - #12 new
INFO  12:08:22,293 - #48 int
INFO  12:08:22,293 - #42 [
INFO  12:08:22,293 - #47 5
INFO  12:08:22,294 - #43 ]
INFO  12:08:22,294 - #36 ;
INFO  12:08:22,295 - #48 x
INFO  12:08:22,297 - #33 =
INFO  12:08:22,298 - #12 new
INFO  12:08:22,298 - #48 int
INFO  12:08:22,298 - #42 [
INFO  12:08:22,299 - #47 3
INFO  12:08:22,299 - #43 ]
INFO  12:08:22,300 - #36 ;
INFO  12:08:22,300 - #13 read
INFO  12:08:22,300 - #40 (
INFO  12:08:22,301 - #48 c
INFO  12:08:22,302 - #39 .
INFO  12:08:22,302 - #48 i
INFO  12:08:22,303 - #41 )
INFO  12:08:22,304 - #36 ;
INFO  12:08:22,304 - #48 i
INFO  12:08:22,306 - #33 =
INFO  12:08:22,308 - #47 0
INFO  12:08:22,308 - #36 ;
INFO  12:08:22,308 - #11 while
INFO  12:08:22,308 - #40 (
INFO  12:08:22,309 - #48 i
INFO  12:08:22,309 - #29 <
INFO  12:08:22,309 - #47 5
INFO  12:08:22,310 - #41 )
INFO  12:08:22,311 - #44 {
INFO  12:08:22,311 - #13 read
INFO  12:08:22,311 - #40 (
INFO  12:08:22,312 - #48 c
INFO  12:08:22,312 - #39 .
INFO  12:08:22,312 - #48 x
INFO  12:08:22,312 - #42 [
INFO  12:08:22,312 - #48 i
INFO  12:08:22,312 - #43 ]
INFO  12:08:22,312 - #41 )
INFO  12:08:22,312 - #36 ;
INFO  12:08:22,312 - #13 read
INFO  12:08:22,313 - #40 (
INFO  12:08:22,313 - #48 c
INFO  12:08:22,313 - #39 .
INFO  12:08:22,313 - #48 theA
INFO  12:08:22,313 - #39 .
INFO  12:08:22,313 - #48 x
INFO  12:08:22,313 - #42 [
INFO  12:08:22,313 - #48 i
INFO  12:08:22,313 - #43 ]
INFO  12:08:22,313 - #41 )
INFO  12:08:22,313 - #36 ;
INFO  12:08:22,314 - #48 i
INFO  12:08:22,314 - #34 ++
INFO  12:08:22,314 - #36 ;
INFO  12:08:22,314 - #45 }
INFO  12:08:22,314 - #42 [
INFO  12:08:22,315 - #48 a
INFO  12:08:22,315 - #38 ,
INFO  12:08:22,315 - #38 ,
INFO  12:08:22,316 - #48 b
INFO  12:08:22,316 - #43 ]
INFO  12:08:22,316 - #33 =
INFO  12:08:22,317 - #48 c
INFO  12:08:22,317 - #39 .
INFO  12:08:22,317 - #48 x
INFO  12:08:22,317 - #36 ;
INFO  12:08:22,317 - #3 print
INFO  12:08:22,317 - #40 (
INFO  12:08:22,317 - #48 c
INFO  12:08:22,317 - #39 .
INFO  12:08:22,318 - #48 getValue
INFO  12:08:22,318 - #40 (
INFO  12:08:22,318 - #48 c
INFO  12:08:22,318 - #39 .
INFO  12:08:22,318 - #48 theA
INFO  12:08:22,318 - #39 .
INFO  12:08:22,318 - #48 x
INFO  12:08:22,318 - #42 [
INFO  12:08:22,318 - #47 0
INFO  12:08:22,318 - #43 ]
INFO  12:08:22,319 - #41 )
INFO  12:08:22,319 - #41 )
INFO  12:08:22,320 - #36 ;
INFO  12:08:22,320 - #48 c
INFO  12:08:22,320 - #39 .
INFO  12:08:22,320 - #48 m
INFO  12:08:22,320 - #40 (
INFO  12:08:22,321 - #41 )
INFO  12:08:22,322 - #36 ;
INFO  12:08:22,322 - #45 }
INFO  12:08:22,322 - #45 }
INFO  12:08:22,325 - rs.ac.bg.etf.pp1.ast.Program@49e202ad
INFO  12:08:22,325 - ====================================
INFO  12:08:22,337 - Print count calls = 2
