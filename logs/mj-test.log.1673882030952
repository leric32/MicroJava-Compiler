INFO  16:02:57,821 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\test303.mj
INFO  16:02:57,923 - #2 program
INFO  16:02:57,924 - #47 test_303
INFO  16:02:57,924 - #8 const
INFO  16:02:57,926 - #47 int
INFO  16:02:57,927 - #47 cinilac
INFO  16:02:57,928 - #32 =
INFO  16:02:57,928 - #46 4
INFO  16:02:57,929 - #37 ,
INFO  16:02:57,930 - #47 delilac
INFO  16:02:57,930 - #32 =
INFO  16:02:57,931 - #46 3
INFO  16:02:57,931 - #35 ;
INFO  16:02:57,931 - #5 class
INFO  16:02:57,932 - #47 Predmet
INFO  16:02:57,932 - #43 {
INFO  16:02:57,932 - #47 int
INFO  16:02:57,936 - #47 tezina
INFO  16:02:57,936 - #35 ;
INFO  16:02:57,938 - #47 char
INFO  16:02:57,940 - #47 vrsta
INFO  16:02:57,940 - #35 ;
INFO  16:02:57,941 - #43 {
INFO  16:02:57,941 - #14 void
INFO  16:02:57,941 - #47 postaviTezinu
INFO  16:02:57,941 - #39 (
INFO  16:02:57,941 - #47 int
INFO  16:02:57,941 - #47 tezina
INFO  16:02:57,942 - #40 )
INFO  16:02:57,942 - #43 {
INFO  16:02:57,944 - #47 this
INFO  16:02:57,945 - #38 .
INFO  16:02:57,945 - #47 tezina
INFO  16:02:57,946 - #32 =
INFO  16:02:57,946 - #47 tezina
INFO  16:02:57,946 - #35 ;
INFO  16:02:57,948 - #44 }
INFO  16:02:57,948 - #14 void
INFO  16:02:57,949 - #47 ucitajTezinu
INFO  16:02:57,949 - #39 (
INFO  16:02:57,949 - #40 )
INFO  16:02:57,950 - #43 {
INFO  16:02:57,951 - #13 read
INFO  16:02:57,951 - #39 (
INFO  16:02:57,952 - #47 tezina
INFO  16:02:57,952 - #40 )
INFO  16:02:57,952 - #35 ;
INFO  16:02:57,952 - #44 }
INFO  16:02:57,952 - #47 int
INFO  16:02:57,952 - #47 zapremina
INFO  16:02:57,953 - #39 (
INFO  16:02:57,953 - #40 )
INFO  16:02:57,953 - #43 {
INFO  16:02:57,953 - #4 return
INFO  16:02:57,953 - #46 0
INFO  16:02:57,954 - #35 ;
INFO  16:02:57,954 - #44 }
INFO  16:02:57,954 - #47 int
INFO  16:02:57,954 - #47 Q
INFO  16:02:57,954 - #39 (
INFO  16:02:57,954 - #40 )
INFO  16:02:57,955 - #43 {
INFO  16:02:57,955 - #4 return
INFO  16:02:57,955 - #47 zapremina
INFO  16:02:57,955 - #39 (
INFO  16:02:57,956 - #40 )
INFO  16:02:57,957 - #21 *
INFO  16:02:57,957 - #47 tezina
INFO  16:02:57,960 - #35 ;
INFO  16:02:57,960 - #44 }
INFO  16:02:57,960 - #14 void
INFO  16:02:57,961 - #47 postaviVrstu
INFO  16:02:57,961 - #39 (
INFO  16:02:57,961 - #47 char
INFO  16:02:57,961 - #47 vrsta
INFO  16:02:57,961 - #40 )
INFO  16:02:57,961 - #43 {
INFO  16:02:57,962 - #47 this
INFO  16:02:57,962 - #38 .
INFO  16:02:57,962 - #47 vrsta
INFO  16:02:57,962 - #32 =
INFO  16:02:57,962 - #47 vrsta
INFO  16:02:57,962 - #35 ;
INFO  16:02:57,962 - #44 }
INFO  16:02:57,963 - #47 char
INFO  16:02:57,963 - #47 dohvVrstu
INFO  16:02:57,963 - #39 (
INFO  16:02:57,963 - #40 )
INFO  16:02:57,963 - #43 {
INFO  16:02:57,963 - #4 return
INFO  16:02:57,963 - #47 vrsta
INFO  16:02:57,963 - #35 ;
INFO  16:02:57,964 - #44 }
INFO  16:02:57,964 - #47 int
INFO  16:02:57,964 - #47 dohvTezinu
INFO  16:02:57,964 - #39 (
INFO  16:02:57,964 - #40 )
INFO  16:02:57,964 - #43 {
INFO  16:02:57,964 - #4 return
INFO  16:02:57,965 - #47 tezina
INFO  16:02:57,965 - #35 ;
INFO  16:02:57,965 - #44 }
INFO  16:02:57,965 - #14 void
INFO  16:02:57,965 - #47 ispisi
INFO  16:02:57,966 - #39 (
INFO  16:02:57,966 - #40 )
INFO  16:02:57,966 - #43 {
INFO  16:02:57,966 - #3 print
INFO  16:02:57,968 - #39 (
INFO  16:02:57,968 - #47 vrsta
INFO  16:02:57,968 - #40 )
INFO  16:02:57,969 - #35 ;
INFO  16:02:57,969 - #3 print
INFO  16:02:57,969 - #39 (
INFO  16:02:57,969 - #47 Q
INFO  16:02:57,969 - #39 (
INFO  16:02:57,970 - #40 )
INFO  16:02:57,970 - #40 )
INFO  16:02:57,970 - #35 ;
INFO  16:02:57,970 - #44 }
INFO  16:02:57,970 - #44 }
INFO  16:02:57,970 - #44 }
INFO  16:02:57,970 - #5 class
INFO  16:02:57,971 - #47 Sfera
INFO  16:02:57,971 - #15 extends
INFO  16:02:57,971 - #47 Predmet
INFO  16:02:57,972 - #43 {
INFO  16:02:57,972 - #47 int
INFO  16:02:57,972 - #47 r
INFO  16:02:57,972 - #35 ;
INFO  16:02:57,972 - #43 {
INFO  16:02:57,973 - #47 Sfera
INFO  16:02:57,973 - #39 (
INFO  16:02:57,973 - #40 )
INFO  16:02:57,974 - #43 {
INFO  16:02:57,975 - #47 vrsta
INFO  16:02:57,975 - #32 =
INFO  16:02:57,975 - #48 s
INFO  16:02:57,975 - #35 ;
INFO  16:02:57,976 - #47 r
INFO  16:02:57,976 - #32 =
INFO  16:02:57,976 - #46 1
INFO  16:02:57,976 - #35 ;
INFO  16:02:57,976 - #44 }
INFO  16:02:57,977 - #47 Sfera
INFO  16:02:57,977 - #39 (
INFO  16:02:57,978 - #47 int
INFO  16:02:57,978 - #47 r
INFO  16:02:57,978 - #40 )
INFO  16:02:57,978 - #43 {
INFO  16:02:57,979 - #47 vrsta
INFO  16:02:57,979 - #32 =
INFO  16:02:57,979 - #48 s
INFO  16:02:57,979 - #35 ;
INFO  16:02:57,979 - #47 this
INFO  16:02:57,979 - #38 .
INFO  16:02:57,979 - #47 r
INFO  16:02:57,979 - #32 =
INFO  16:02:57,979 - #47 r
INFO  16:02:57,980 - #35 ;
INFO  16:02:57,980 - #44 }
INFO  16:02:57,980 - #14 void
INFO  16:02:57,980 - #47 postaviPoluprecnik
INFO  16:02:57,980 - #39 (
INFO  16:02:57,981 - #47 int
INFO  16:02:57,981 - #47 r
INFO  16:02:57,981 - #40 )
INFO  16:02:57,981 - #43 {
INFO  16:02:57,981 - #47 this
INFO  16:02:57,982 - #38 .
INFO  16:02:57,982 - #47 r
INFO  16:02:57,982 - #32 =
INFO  16:02:57,982 - #47 r
INFO  16:02:57,982 - #35 ;
INFO  16:02:57,982 - #44 }
INFO  16:02:57,982 - #47 int
INFO  16:02:57,982 - #47 zapremina
INFO  16:02:57,982 - #39 (
INFO  16:02:57,982 - #40 )
INFO  16:02:57,982 - #47 int
INFO  16:02:57,983 - #47 z
INFO  16:02:57,983 - #35 ;
INFO  16:02:57,983 - #43 {
INFO  16:02:57,984 - #47 z
INFO  16:02:57,984 - #32 =
INFO  16:02:57,984 - #47 cinilac
INFO  16:02:57,984 - #35 ;
INFO  16:02:57,984 - #4 return
INFO  16:02:57,984 - #47 z
INFO  16:02:57,984 - #21 *
INFO  16:02:57,984 - #39 (
INFO  16:02:57,984 - #47 r
INFO  16:02:57,985 - #22 /
INFO  16:02:57,985 - #47 delilac
INFO  16:02:57,986 - #40 )
INFO  16:02:57,986 - #35 ;
INFO  16:02:57,986 - #44 }
INFO  16:02:57,987 - #44 }
INFO  16:02:57,987 - #44 }
INFO  16:02:57,987 - #5 class
INFO  16:02:57,987 - #47 Kvadar
INFO  16:02:57,988 - #15 extends
INFO  16:02:57,988 - #47 Predmet
INFO  16:02:57,988 - #43 {
INFO  16:02:57,988 - #47 int
INFO  16:02:57,988 - #47 a
INFO  16:02:57,988 - #37 ,
INFO  16:02:57,989 - #47 b
INFO  16:02:57,989 - #37 ,
INFO  16:02:57,989 - #47 c
INFO  16:02:57,989 - #35 ;
INFO  16:02:57,989 - #43 {
INFO  16:02:57,990 - #47 Kvadar
INFO  16:02:57,990 - #39 (
INFO  16:02:57,990 - #40 )
INFO  16:02:57,990 - #43 {
INFO  16:02:57,990 - #47 vrsta
INFO  16:02:57,990 - #32 =
INFO  16:02:57,990 - #48 k
INFO  16:02:57,991 - #35 ;
INFO  16:02:57,991 - #47 a
INFO  16:02:57,991 - #32 =
INFO  16:02:57,991 - #46 1
INFO  16:02:57,991 - #35 ;
INFO  16:02:57,991 - #47 b
INFO  16:02:57,991 - #32 =
INFO  16:02:57,991 - #46 2
INFO  16:02:57,992 - #35 ;
INFO  16:02:57,992 - #47 c
INFO  16:02:57,992 - #32 =
INFO  16:02:57,992 - #46 3
INFO  16:02:57,992 - #35 ;
INFO  16:02:57,993 - #44 }
INFO  16:02:57,993 - #47 Kvadar
INFO  16:02:57,993 - #39 (
INFO  16:02:57,993 - #47 int
INFO  16:02:57,993 - #47 a
INFO  16:02:57,993 - #37 ,
INFO  16:02:57,993 - #47 int
INFO  16:02:57,993 - #47 b
INFO  16:02:57,994 - #37 ,
INFO  16:02:57,994 - #47 int
INFO  16:02:57,994 - #47 c
INFO  16:02:57,994 - #40 )
INFO  16:02:57,994 - #43 {
INFO  16:02:57,994 - #47 vrsta
INFO  16:02:57,994 - #32 =
INFO  16:02:57,995 - #48 k
INFO  16:02:57,995 - #35 ;
INFO  16:02:57,995 - #47 this
INFO  16:02:57,995 - #38 .
INFO  16:02:57,995 - #47 a
INFO  16:02:57,995 - #32 =
INFO  16:02:57,996 - #47 a
INFO  16:02:57,996 - #35 ;
INFO  16:02:57,996 - #47 this
INFO  16:02:57,997 - #38 .
INFO  16:02:57,997 - #47 b
INFO  16:02:57,997 - #32 =
INFO  16:02:57,997 - #47 b
INFO  16:02:57,998 - #35 ;
INFO  16:02:57,998 - #47 this
INFO  16:02:57,998 - #38 .
INFO  16:02:57,998 - #47 c
INFO  16:02:57,998 - #32 =
INFO  16:02:57,998 - #47 c
INFO  16:02:57,999 - #35 ;
INFO  16:02:57,999 - #44 }
INFO  16:02:57,999 - #47 Kvadar
INFO  16:02:57,999 - #39 (
INFO  16:02:57,999 - #47 int
INFO  16:02:57,999 - #47 a
INFO  16:02:57,999 - #40 )
INFO  16:02:58,000 - #43 {
INFO  16:02:58,000 - #47 vrsta
INFO  16:02:58,000 - #32 =
INFO  16:02:58,000 - #48 k
INFO  16:02:58,000 - #35 ;
INFO  16:02:58,000 - #47 this
INFO  16:02:58,000 - #38 .
INFO  16:02:58,000 - #47 a
INFO  16:02:58,001 - #32 =
INFO  16:02:58,001 - #47 a
INFO  16:02:58,001 - #35 ;
INFO  16:02:58,001 - #47 b
INFO  16:02:58,001 - #32 =
INFO  16:02:58,001 - #47 a
INFO  16:02:58,001 - #19 +
INFO  16:02:58,001 - #46 1
INFO  16:02:58,005 - #35 ;
INFO  16:02:58,005 - #47 c
INFO  16:02:58,005 - #32 =
INFO  16:02:58,006 - #47 a
INFO  16:02:58,006 - #19 +
INFO  16:02:58,006 - #46 2
INFO  16:02:58,006 - #35 ;
INFO  16:02:58,006 - #44 }
INFO  16:02:58,007 - #14 void
INFO  16:02:58,007 - #47 postaviStranice
INFO  16:02:58,007 - #39 (
INFO  16:02:58,007 - #47 int
INFO  16:02:58,007 - #47 a
INFO  16:02:58,007 - #37 ,
INFO  16:02:58,008 - #47 int
INFO  16:02:58,008 - #47 b
INFO  16:02:58,008 - #37 ,
INFO  16:02:58,008 - #47 int
INFO  16:02:58,008 - #47 c
INFO  16:02:58,008 - #40 )
INFO  16:02:58,008 - #43 {
INFO  16:02:58,008 - #47 this
INFO  16:02:58,008 - #38 .
INFO  16:02:58,009 - #47 a
INFO  16:02:58,009 - #32 =
INFO  16:02:58,009 - #47 a
INFO  16:02:58,009 - #35 ;
INFO  16:02:58,009 - #47 this
INFO  16:02:58,010 - #38 .
INFO  16:02:58,010 - #47 b
INFO  16:02:58,010 - #32 =
INFO  16:02:58,010 - #47 b
INFO  16:02:58,010 - #35 ;
INFO  16:02:58,011 - #47 this
INFO  16:02:58,011 - #38 .
INFO  16:02:58,011 - #47 c
INFO  16:02:58,011 - #32 =
INFO  16:02:58,011 - #47 c
INFO  16:02:58,011 - #35 ;
INFO  16:02:58,011 - #44 }
INFO  16:02:58,012 - #47 int
INFO  16:02:58,012 - #47 zapremina
INFO  16:02:58,012 - #39 (
INFO  16:02:58,012 - #40 )
INFO  16:02:58,012 - #47 int
INFO  16:02:58,012 - #47 z
INFO  16:02:58,012 - #35 ;
INFO  16:02:58,012 - #43 {
INFO  16:02:58,012 - #47 z
INFO  16:02:58,012 - #32 =
INFO  16:02:58,012 - #47 a
INFO  16:02:58,012 - #21 *
INFO  16:02:58,015 - #47 b
INFO  16:02:58,015 - #21 *
INFO  16:02:58,015 - #47 c
INFO  16:02:58,015 - #35 ;
INFO  16:02:58,015 - #4 return
INFO  16:02:58,016 - #47 z
INFO  16:02:58,016 - #35 ;
INFO  16:02:58,016 - #44 }
INFO  16:02:58,016 - #44 }
INFO  16:02:58,016 - #44 }
INFO  16:02:58,016 - #47 int
INFO  16:02:58,016 - #47 zapreminaK
INFO  16:02:58,017 - #37 ,
INFO  16:02:58,017 - #47 zapreminaS
INFO  16:02:58,017 - #35 ;
INFO  16:02:58,017 - #47 int
INFO  16:02:58,018 - #47 tezinaK
INFO  16:02:58,018 - #37 ,
INFO  16:02:58,018 - #47 tezinaS
INFO  16:02:58,018 - #35 ;
INFO  16:02:58,018 - #43 {
INFO  16:02:58,018 - #14 void
INFO  16:02:58,020 - #47 ispis
INFO  16:02:58,020 - #39 (
INFO  16:02:58,020 - #47 Predmet
INFO  16:02:58,020 - #47 p
INFO  16:02:58,020 - #40 )
INFO  16:02:58,020 - #43 {
INFO  16:02:58,020 - #47 p
INFO  16:02:58,020 - #38 .
INFO  16:02:58,020 - #47 ispisi
INFO  16:02:58,021 - #39 (
INFO  16:02:58,021 - #40 )
INFO  16:02:58,021 - #35 ;
INFO  16:02:58,021 - #3 print
INFO  16:02:58,021 - #39 (
INFO  16:02:58,021 - #47 eol
INFO  16:02:58,021 - #40 )
INFO  16:02:58,021 - #35 ;
INFO  16:02:58,021 - #3 print
INFO  16:02:58,021 - #39 (
INFO  16:02:58,021 - #47 p
INFO  16:02:58,022 - #38 .
INFO  16:02:58,022 - #47 dohvTezinu
INFO  16:02:58,022 - #39 (
INFO  16:02:58,022 - #40 )
INFO  16:02:58,022 - #40 )
INFO  16:02:58,022 - #35 ;
INFO  16:02:58,022 - #44 }
INFO  16:02:58,023 - #14 void
INFO  16:02:58,023 - #47 main
INFO  16:02:58,023 - #39 (
INFO  16:02:58,023 - #40 )
INFO  16:02:58,023 - #47 Predmet
INFO  16:02:58,023 - #47 predmeti
INFO  16:02:58,023 - #41 [
INFO  16:02:58,023 - #42 ]
INFO  16:02:58,023 - #35 ;
INFO  16:02:58,024 - #47 int
INFO  16:02:58,024 - #47 i
INFO  16:02:58,025 - #35 ;
INFO  16:02:58,025 - #47 Sfera
INFO  16:02:58,025 - #47 s1
INFO  16:02:58,025 - #37 ,
INFO  16:02:58,025 - #47 s2
INFO  16:02:58,025 - #37 ,
INFO  16:02:58,025 - #47 s3
INFO  16:02:58,025 - #35 ;
INFO  16:02:58,025 - #47 Kvadar
INFO  16:02:58,025 - #47 k1
INFO  16:02:58,026 - #37 ,
INFO  16:02:58,026 - #47 k2
INFO  16:02:58,026 - #37 ,
INFO  16:02:58,026 - #47 k3
INFO  16:02:58,026 - #35 ;
INFO  16:02:58,026 - #47 int
INFO  16:02:58,026 - #47 t
INFO  16:02:58,026 - #35 ;
INFO  16:02:58,026 - #43 {
INFO  16:02:58,026 - #47 predmeti
INFO  16:02:58,026 - #32 =
INFO  16:02:58,027 - #12 new
INFO  16:02:58,027 - #47 Predmet
INFO  16:02:58,027 - #41 [
INFO  16:02:58,027 - #46 6
INFO  16:02:58,027 - #42 ]
INFO  16:02:58,027 - #35 ;
INFO  16:02:58,027 - #47 s1
INFO  16:02:58,028 - #32 =
INFO  16:02:58,028 - #12 new
INFO  16:02:58,028 - #47 Sfera
INFO  16:02:58,028 - #39 (
INFO  16:02:58,028 - #40 )
INFO  16:02:58,028 - #35 ;
INFO  16:02:58,028 - #47 s2
INFO  16:02:58,028 - #32 =
INFO  16:02:58,028 - #12 new
INFO  16:02:58,029 - #47 Sfera
INFO  16:02:58,029 - #39 (
INFO  16:02:58,029 - #46 2
INFO  16:02:58,029 - #40 )
INFO  16:02:58,029 - #35 ;
INFO  16:02:58,029 - #47 s3
INFO  16:02:58,029 - #32 =
INFO  16:02:58,029 - #12 new
INFO  16:02:58,029 - #47 Sfera
INFO  16:02:58,030 - #39 (
INFO  16:02:58,030 - #46 3
INFO  16:02:58,030 - #40 )
INFO  16:02:58,030 - #35 ;
INFO  16:02:58,030 - #47 k3
INFO  16:02:58,030 - #32 =
INFO  16:02:58,030 - #12 new
INFO  16:02:58,030 - #47 Kvadar
INFO  16:02:58,030 - #39 (
INFO  16:02:58,030 - #40 )
INFO  16:02:58,030 - #35 ;
INFO  16:02:58,030 - #47 k1
INFO  16:02:58,030 - #32 =
INFO  16:02:58,030 - #12 new
INFO  16:02:58,030 - #47 Kvadar
INFO  16:02:58,030 - #39 (
INFO  16:02:58,031 - #46 2
INFO  16:02:58,031 - #40 )
INFO  16:02:58,031 - #35 ;
INFO  16:02:58,031 - #47 k2
INFO  16:02:58,031 - #32 =
INFO  16:02:58,031 - #12 new
INFO  16:02:58,031 - #47 Kvadar
INFO  16:02:58,031 - #39 (
INFO  16:02:58,031 - #46 3
INFO  16:02:58,031 - #37 ,
INFO  16:02:58,031 - #46 4
INFO  16:02:58,031 - #37 ,
INFO  16:02:58,031 - #46 5
INFO  16:02:58,031 - #40 )
INFO  16:02:58,032 - #35 ;
INFO  16:02:58,032 - #47 predmeti
INFO  16:02:58,032 - #41 [
INFO  16:02:58,033 - #46 0
INFO  16:02:58,033 - #42 ]
INFO  16:02:58,033 - #32 =
INFO  16:02:58,033 - #47 s1
INFO  16:02:58,033 - #35 ;
INFO  16:02:58,033 - #47 predmeti
INFO  16:02:58,033 - #41 [
INFO  16:02:58,033 - #46 2
INFO  16:02:58,033 - #42 ]
INFO  16:02:58,034 - #32 =
INFO  16:02:58,034 - #47 s2
INFO  16:02:58,034 - #35 ;
INFO  16:02:58,034 - #47 predmeti
INFO  16:02:58,034 - #41 [
INFO  16:02:58,034 - #46 4
INFO  16:02:58,034 - #42 ]
INFO  16:02:58,034 - #32 =
INFO  16:02:58,034 - #47 s3
INFO  16:02:58,034 - #35 ;
INFO  16:02:58,034 - #47 predmeti
INFO  16:02:58,034 - #41 [
INFO  16:02:58,034 - #46 1
INFO  16:02:58,034 - #42 ]
INFO  16:02:58,034 - #32 =
INFO  16:02:58,034 - #47 k1
INFO  16:02:58,034 - #35 ;
INFO  16:02:58,034 - #47 predmeti
INFO  16:02:58,034 - #41 [
INFO  16:02:58,034 - #46 3
INFO  16:02:58,034 - #42 ]
INFO  16:02:58,035 - #32 =
INFO  16:02:58,035 - #47 k2
INFO  16:02:58,035 - #35 ;
INFO  16:02:58,035 - #47 predmeti
INFO  16:02:58,035 - #41 [
INFO  16:02:58,035 - #46 5
INFO  16:02:58,035 - #42 ]
INFO  16:02:58,035 - #32 =
INFO  16:02:58,035 - #47 k3
INFO  16:02:58,035 - #35 ;
INFO  16:02:58,035 - #13 read
INFO  16:02:58,035 - #39 (
INFO  16:02:58,035 - #47 t
INFO  16:02:58,035 - #40 )
INFO  16:02:58,036 - #35 ;
INFO  16:02:58,036 - #47 i
INFO  16:02:58,036 - #32 =
INFO  16:02:58,036 - #46 0
INFO  16:02:58,036 - #35 ;
INFO  16:02:58,036 - #11 while
INFO  16:02:58,036 - #39 (
INFO  16:02:58,036 - #47 i
INFO  16:02:58,041 - #28 <
INFO  16:02:58,042 - #46 6
INFO  16:02:58,046 - #40 )
INFO  16:02:58,047 - #43 {
INFO  16:02:58,047 - #47 predmeti
INFO  16:02:58,047 - #41 [
INFO  16:02:58,047 - #47 i
INFO  16:02:58,047 - #42 ]
INFO  16:02:58,047 - #38 .
INFO  16:02:58,047 - #47 postaviTezinu
INFO  16:02:58,047 - #39 (
INFO  16:02:58,047 - #47 t
INFO  16:02:58,047 - #40 )
INFO  16:02:58,047 - #35 ;
INFO  16:02:58,047 - #47 i
INFO  16:02:58,047 - #33 ++
INFO  16:02:58,047 - #35 ;
INFO  16:02:58,047 - #44 }
INFO  16:02:58,048 - #47 zapreminaS
INFO  16:02:58,048 - #32 =
INFO  16:02:58,048 - #46 0
INFO  16:02:58,048 - #35 ;
INFO  16:02:58,048 - #47 tezinaS
INFO  16:02:58,048 - #32 =
INFO  16:02:58,049 - #46 0
INFO  16:02:58,049 - #35 ;
INFO  16:02:58,049 - #47 i
INFO  16:02:58,049 - #32 =
INFO  16:02:58,049 - #46 1
INFO  16:02:58,049 - #35 ;
INFO  16:02:58,049 - #11 while
INFO  16:02:58,049 - #39 (
INFO  16:02:58,049 - #47 i
INFO  16:02:58,049 - #28 <
INFO  16:02:58,049 - #46 6
INFO  16:02:58,049 - #40 )
INFO  16:02:58,049 - #43 {
INFO  16:02:58,049 - #9 if
INFO  16:02:58,049 - #39 (
INFO  16:02:58,051 - #47 i
INFO  16:02:58,051 - #23 %
INFO  16:02:58,051 - #46 2
INFO  16:02:58,052 - #24 ==
INFO  16:02:58,052 - #46 0
INFO  16:02:58,053 - #40 )
INFO  16:02:58,053 - #43 {
INFO  16:02:58,056 - #47 i
INFO  16:02:58,056 - #33 ++
INFO  16:02:58,056 - #35 ;
INFO  16:02:58,056 - #16 continue
INFO  16:02:58,056 - #35 ;
INFO  16:02:58,056 - #44 }
INFO  16:02:58,057 - #47 zapreminaS
INFO  16:02:58,059 - #32 =
INFO  16:02:58,060 - #47 zapreminaS
INFO  16:02:58,060 - #19 +
INFO  16:02:58,060 - #47 predmeti
INFO  16:02:58,060 - #41 [
INFO  16:02:58,060 - #47 i
INFO  16:02:58,060 - #20 -
INFO  16:02:58,060 - #46 1
INFO  16:02:58,061 - #42 ]
INFO  16:02:58,062 - #38 .
INFO  16:02:58,062 - #47 zapremina
INFO  16:02:58,062 - #39 (
INFO  16:02:58,062 - #40 )
INFO  16:02:58,062 - #35 ;
INFO  16:02:58,062 - #47 tezinaS
INFO  16:02:58,062 - #32 =
INFO  16:02:58,062 - #47 tezinaS
INFO  16:02:58,062 - #19 +
INFO  16:02:58,062 - #47 predmeti
INFO  16:02:58,062 - #41 [
INFO  16:02:58,062 - #47 i
INFO  16:02:58,062 - #20 -
INFO  16:02:58,062 - #46 1
INFO  16:02:58,062 - #42 ]
INFO  16:02:58,062 - #38 .
INFO  16:02:58,062 - #47 Q
INFO  16:02:58,062 - #39 (
INFO  16:02:58,062 - #40 )
INFO  16:02:58,062 - #35 ;
INFO  16:02:58,063 - #47 ispis
INFO  16:02:58,063 - #39 (
INFO  16:02:58,063 - #47 predmeti
INFO  16:02:58,063 - #41 [
INFO  16:02:58,063 - #47 i
INFO  16:02:58,063 - #20 -
INFO  16:02:58,063 - #46 1
INFO  16:02:58,063 - #42 ]
INFO  16:02:58,063 - #40 )
INFO  16:02:58,063 - #35 ;
INFO  16:02:58,063 - #47 i
INFO  16:02:58,063 - #33 ++
INFO  16:02:58,063 - #35 ;
INFO  16:02:58,063 - #44 }
INFO  16:02:58,063 - #47 zapreminaK
INFO  16:02:58,063 - #32 =
INFO  16:02:58,063 - #46 0
INFO  16:02:58,063 - #35 ;
INFO  16:02:58,063 - #47 tezinaK
INFO  16:02:58,063 - #32 =
INFO  16:02:58,063 - #46 0
INFO  16:02:58,063 - #35 ;
INFO  16:02:58,063 - #47 i
INFO  16:02:58,064 - #32 =
INFO  16:02:58,064 - #46 1
INFO  16:02:58,064 - #35 ;
INFO  16:02:58,064 - #11 while
INFO  16:02:58,064 - #39 (
INFO  16:02:58,064 - #47 i
INFO  16:02:58,064 - #28 <
INFO  16:02:58,064 - #46 6
INFO  16:02:58,064 - #40 )
INFO  16:02:58,064 - #43 {
INFO  16:02:58,064 - #9 if
INFO  16:02:58,064 - #39 (
INFO  16:02:58,064 - #47 i
INFO  16:02:58,064 - #23 %
INFO  16:02:58,064 - #46 2
INFO  16:02:58,065 - #24 ==
INFO  16:02:58,065 - #46 1
INFO  16:02:58,065 - #40 )
INFO  16:02:58,065 - #43 {
INFO  16:02:58,065 - #47 i
INFO  16:02:58,065 - #33 ++
INFO  16:02:58,065 - #35 ;
INFO  16:02:58,065 - #16 continue
INFO  16:02:58,065 - #35 ;
INFO  16:02:58,065 - #44 }
INFO  16:02:58,065 - #47 zapreminaS
INFO  16:02:58,065 - #32 =
INFO  16:02:58,065 - #47 zapreminaS
INFO  16:02:58,065 - #19 +
INFO  16:02:58,065 - #47 predmeti
INFO  16:02:58,065 - #41 [
INFO  16:02:58,065 - #47 i
INFO  16:02:58,065 - #20 -
INFO  16:02:58,065 - #46 1
INFO  16:02:58,065 - #42 ]
INFO  16:02:58,065 - #38 .
INFO  16:02:58,065 - #47 zapremina
INFO  16:02:58,065 - #39 (
INFO  16:02:58,065 - #40 )
INFO  16:02:58,066 - #35 ;
INFO  16:02:58,066 - #47 tezinaS
INFO  16:02:58,066 - #32 =
INFO  16:02:58,066 - #47 tezinaS
INFO  16:02:58,066 - #19 +
INFO  16:02:58,066 - #47 predmeti
INFO  16:02:58,066 - #41 [
INFO  16:02:58,066 - #47 i
INFO  16:02:58,066 - #20 -
INFO  16:02:58,066 - #46 1
INFO  16:02:58,066 - #42 ]
INFO  16:02:58,066 - #38 .
INFO  16:02:58,066 - #47 Q
INFO  16:02:58,066 - #39 (
INFO  16:02:58,066 - #40 )
INFO  16:02:58,066 - #35 ;
INFO  16:02:58,066 - #47 ispis
INFO  16:02:58,066 - #39 (
INFO  16:02:58,066 - #47 predmeti
INFO  16:02:58,066 - #41 [
INFO  16:02:58,066 - #47 i
INFO  16:02:58,066 - #20 -
INFO  16:02:58,066 - #46 1
INFO  16:02:58,066 - #42 ]
INFO  16:02:58,067 - #40 )
INFO  16:02:58,067 - #35 ;
INFO  16:02:58,067 - #47 i
INFO  16:02:58,067 - #33 ++
INFO  16:02:58,067 - #35 ;
INFO  16:02:58,067 - #44 }
INFO  16:02:58,067 - #3 print
INFO  16:02:58,067 - #39 (
INFO  16:02:58,067 - #47 zapreminaS
INFO  16:02:58,067 - #40 )
INFO  16:02:58,067 - #35 ;
INFO  16:02:58,067 - #3 print
INFO  16:02:58,067 - #39 (
INFO  16:02:58,067 - #47 eol
INFO  16:02:58,067 - #40 )
INFO  16:02:58,067 - #35 ;
INFO  16:02:58,067 - #3 print
INFO  16:02:58,067 - #39 (
INFO  16:02:58,067 - #47 zapreminaK
INFO  16:02:58,067 - #40 )
INFO  16:02:58,067 - #35 ;
INFO  16:02:58,067 - #3 print
INFO  16:02:58,067 - #39 (
INFO  16:02:58,067 - #47 eol
INFO  16:02:58,067 - #40 )
INFO  16:02:58,067 - #35 ;
INFO  16:02:58,068 - #3 print
INFO  16:02:58,068 - #39 (
INFO  16:02:58,068 - #47 tezinaS
INFO  16:02:58,068 - #40 )
INFO  16:02:58,068 - #35 ;
INFO  16:02:58,068 - #3 print
INFO  16:02:58,068 - #39 (
INFO  16:02:58,068 - #47 eol
INFO  16:02:58,068 - #40 )
INFO  16:02:58,068 - #35 ;
INFO  16:02:58,068 - #3 print
INFO  16:02:58,068 - #39 (
INFO  16:02:58,068 - #47 tezinaK
INFO  16:02:58,068 - #40 )
INFO  16:02:58,068 - #35 ;
INFO  16:02:58,068 - #3 print
INFO  16:02:58,068 - #39 (
INFO  16:02:58,068 - #47 eol
INFO  16:02:58,069 - #40 )
INFO  16:02:58,069 - #35 ;
INFO  16:02:58,069 - #44 }
INFO  16:02:58,069 - #44 }
INFO  16:02:58,097 - Program(
  ProgName(
   test_303
  ) [ProgName]
  VarDeclarations(
    VarDeclarations(
      ClassDeclarations(
        ClassDeclarations(
          ClassDeclarations(
            ConstDeclarations(
              NoVarDecl(
              ) [NoVarDecl]
              ConstDeclaration(
                Type(
                 int
                ) [Type]
                ConstantValueNumber(
                 cinilac
                 4
                ) [ConstantValueNumber]
                ListOfCharDeclarations(
                  EndOfListOfCharDeclarations(
                  ) [EndOfListOfCharDeclarations]
                  ConstantValueNumber(
                   delilac
                   3
                  ) [ConstantValueNumber]
                ) [ListOfCharDeclarations]
              ) [ConstDeclaration]
            ) [ConstDeclarations]
            ClassDeclaration(
              NameOfClass(
               Predmet
              ) [NameOfClass]
              ClassIsNotExtended(
              ) [ClassIsNotExtended]
              ClassBodyWithMethodNoConstructor(
                ClassVariables(
                  ClassVariables(
                    NoClassVariables(
                    ) [NoClassVariables]
                    ClassVarDeclaration(
                      Type(
                       int
                      ) [Type]
                      ClassVarDecLast(
                        ClassVariable(
                         tezina
                          VarDeclarationOfNotArray(
                          ) [VarDeclarationOfNotArray]
                        ) [ClassVariable]
                      ) [ClassVarDecLast]
                    ) [ClassVarDeclaration]
                  ) [ClassVariables]
                  ClassVarDeclaration(
                    Type(
                     char
                    ) [Type]
                    ClassVarDecLast(
                      ClassVariable(
                       vrsta
                        VarDeclarationOfNotArray(
                        ) [VarDeclarationOfNotArray]
                      ) [ClassVariable]
                    ) [ClassVarDecLast]
                  ) [ClassVarDeclaration]
                ) [ClassVariables]
                ListOfMethodsInClass(
                  ListOfMethodsInClass(
                    ListOfMethodsInClass(
                      ListOfMethodsInClass(
                        ListOfMethodsInClass(
                          ListOfMethodsInClass(
                            ListOfMethodsInClass(
                              SingleOrEndOfListMethod(
                                MethodDeclaration(
                                  VoidMethodTypeName(
                                   postaviTezinu
                                  ) [VoidMethodTypeName]
                                  FormalParameters(
                                    SingleOrEndOfListParameter(
                                      SingleFormalParameter(
                                        Type(
                                         int
                                        ) [Type]
                                       tezina
                                        VarDeclarationOfNotArray(
                                        ) [VarDeclarationOfNotArray]
                                      ) [SingleFormalParameter]
                                    ) [SingleOrEndOfListParameter]
                                  ) [FormalParameters]
                                  MethodWithoutVariables(
                                  ) [MethodWithoutVariables]
                                  Statements(
                                    NoStatements(
                                    ) [NoStatements]
                                    StatementDesignator(
                                      DesignatorAssignment(
                                        ClassFieldDesignator(
                                          SimpleDesignator(
                                           this
                                          ) [SimpleDesignator]
                                         tezina
                                        ) [ClassFieldDesignator]
                                        TermPositiveExpr(
                                          Term(
                                            SingleFactor(
                                              DesignatorFactor(
                                                SimpleDesignator(
                                                 tezina
                                                ) [SimpleDesignator]
                                              ) [DesignatorFactor]
                                            ) [SingleFactor]
                                          ) [Term]
                                        ) [TermPositiveExpr]
                                      ) [DesignatorAssignment]
                                    ) [StatementDesignator]
                                  ) [Statements]
                                ) [MethodDeclaration]
                              ) [SingleOrEndOfListMethod]
                              MethodDeclaration(
                                VoidMethodTypeName(
                                 ucitajTezinu
                                ) [VoidMethodTypeName]
                                NoFormalParameters(
                                ) [NoFormalParameters]
                                MethodWithoutVariables(
                                ) [MethodWithoutVariables]
                                Statements(
                                  NoStatements(
                                  ) [NoStatements]
                                  StatementRead(
                                    SimpleDesignator(
                                     tezina
                                    ) [SimpleDesignator]
                                  ) [StatementRead]
                                ) [Statements]
                              ) [MethodDeclaration]
                            ) [ListOfMethodsInClass]
                            MethodDeclaration(
                              ReturnMethodTypeName(
                                Type(
                                 int
                                ) [Type]
                               zapremina
                              ) [ReturnMethodTypeName]
                              NoFormalParameters(
                              ) [NoFormalParameters]
                              MethodWithoutVariables(
                              ) [MethodWithoutVariables]
                              Statements(
                                NoStatements(
                                ) [NoStatements]
                                StatementReturnExpr(
                                  TermPositiveExpr(
                                    Term(
                                      SingleFactor(
                                        NumberConstFactor(
                                         0
                                        ) [NumberConstFactor]
                                      ) [SingleFactor]
                                    ) [Term]
                                  ) [TermPositiveExpr]
                                ) [StatementReturnExpr]
                              ) [Statements]
                            ) [MethodDeclaration]
                          ) [ListOfMethodsInClass]
                          MethodDeclaration(
                            ReturnMethodTypeName(
                              Type(
                               int
                              ) [Type]
                             Q
                            ) [ReturnMethodTypeName]
                            NoFormalParameters(
                            ) [NoFormalParameters]
                            MethodWithoutVariables(
                            ) [MethodWithoutVariables]
                            Statements(
                              NoStatements(
                              ) [NoStatements]
                              StatementReturnExpr(
                                TermPositiveExpr(
                                  Term(
                                    MultipleFactors(
                                      SingleFactor(
                                        FuncCallFactor(
                                          FuncCallFactorDesignator(
                                            SimpleDesignator(
                                             zapremina
                                            ) [SimpleDesignator]
                                          ) [FuncCallFactorDesignator]
                                          NoActuals(
                                          ) [NoActuals]
                                        ) [FuncCallFactor]
                                      ) [SingleFactor]
                                      MultiplyOperator(
                                      ) [MultiplyOperator]
                                      DesignatorFactor(
                                        SimpleDesignator(
                                         tezina
                                        ) [SimpleDesignator]
                                      ) [DesignatorFactor]
                                    ) [MultipleFactors]
                                  ) [Term]
                                ) [TermPositiveExpr]
                              ) [StatementReturnExpr]
                            ) [Statements]
                          ) [MethodDeclaration]
                        ) [ListOfMethodsInClass]
                        MethodDeclaration(
                          VoidMethodTypeName(
                           postaviVrstu
                          ) [VoidMethodTypeName]
                          FormalParameters(
                            SingleOrEndOfListParameter(
                              SingleFormalParameter(
                                Type(
                                 char
                                ) [Type]
                               vrsta
                                VarDeclarationOfNotArray(
                                ) [VarDeclarationOfNotArray]
                              ) [SingleFormalParameter]
                            ) [SingleOrEndOfListParameter]
                          ) [FormalParameters]
                          MethodWithoutVariables(
                          ) [MethodWithoutVariables]
                          Statements(
                            NoStatements(
                            ) [NoStatements]
                            StatementDesignator(
                              DesignatorAssignment(
                                ClassFieldDesignator(
                                  SimpleDesignator(
                                   this
                                  ) [SimpleDesignator]
                                 vrsta
                                ) [ClassFieldDesignator]
                                TermPositiveExpr(
                                  Term(
                                    SingleFactor(
                                      DesignatorFactor(
                                        SimpleDesignator(
                                         vrsta
                                        ) [SimpleDesignator]
                                      ) [DesignatorFactor]
                                    ) [SingleFactor]
                                  ) [Term]
                                ) [TermPositiveExpr]
                              ) [DesignatorAssignment]
                            ) [StatementDesignator]
                          ) [Statements]
                        ) [MethodDeclaration]
                      ) [ListOfMethodsInClass]
                      MethodDeclaration(
                        ReturnMethodTypeName(
                          Type(
                           char
                          ) [Type]
                         dohvVrstu
                        ) [ReturnMethodTypeName]
                        NoFormalParameters(
                        ) [NoFormalParameters]
                        MethodWithoutVariables(
                        ) [MethodWithoutVariables]
                        Statements(
                          NoStatements(
                          ) [NoStatements]
                          StatementReturnExpr(
                            TermPositiveExpr(
                              Term(
                                SingleFactor(
                                  DesignatorFactor(
                                    SimpleDesignator(
                                     vrsta
                                    ) [SimpleDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleFactor]
                              ) [Term]
                            ) [TermPositiveExpr]
                          ) [StatementReturnExpr]
                        ) [Statements]
                      ) [MethodDeclaration]
                    ) [ListOfMethodsInClass]
                    MethodDeclaration(
                      ReturnMethodTypeName(
                        Type(
                         int
                        ) [Type]
                       dohvTezinu
                      ) [ReturnMethodTypeName]
                      NoFormalParameters(
                      ) [NoFormalParameters]
                      MethodWithoutVariables(
                      ) [MethodWithoutVariables]
                      Statements(
                        NoStatements(
                        ) [NoStatements]
                        StatementReturnExpr(
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                DesignatorFactor(
                                  SimpleDesignator(
                                   tezina
                                  ) [SimpleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [StatementReturnExpr]
                      ) [Statements]
                    ) [MethodDeclaration]
                  ) [ListOfMethodsInClass]
                  MethodDeclaration(
                    VoidMethodTypeName(
                     ispisi
                    ) [VoidMethodTypeName]
                    NoFormalParameters(
                    ) [NoFormalParameters]
                    MethodWithoutVariables(
                    ) [MethodWithoutVariables]
                    Statements(
                      Statements(
                        NoStatements(
                        ) [NoStatements]
                        StatementPrintWithoutWidth(
                          PrintEmptyDummy(
                          ) [PrintEmptyDummy]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                DesignatorFactor(
                                  SimpleDesignator(
                                   vrsta
                                  ) [SimpleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [StatementPrintWithoutWidth]
                      ) [Statements]
                      StatementPrintWithoutWidth(
                        PrintEmptyDummy(
                        ) [PrintEmptyDummy]
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              FuncCallFactor(
                                FuncCallFactorDesignator(
                                  SimpleDesignator(
                                   Q
                                  ) [SimpleDesignator]
                                ) [FuncCallFactorDesignator]
                                NoActuals(
                                ) [NoActuals]
                              ) [FuncCallFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [StatementPrintWithoutWidth]
                    ) [Statements]
                  ) [MethodDeclaration]
                ) [ListOfMethodsInClass]
              ) [ClassBodyWithMethodNoConstructor]
            ) [ClassDeclaration]
          ) [ClassDeclarations]
          ClassDeclaration(
            NameOfClass(
             Sfera
            ) [NameOfClass]
            ClassIsExtended(
              Type(
               Predmet
              ) [Type]
            ) [ClassIsExtended]
            ClassBodyWithMethodAndConstructor(
              ClassVariables(
                NoClassVariables(
                ) [NoClassVariables]
                ClassVarDeclaration(
                  Type(
                   int
                  ) [Type]
                  ClassVarDecLast(
                    ClassVariable(
                     r
                      VarDeclarationOfNotArray(
                      ) [VarDeclarationOfNotArray]
                    ) [ClassVariable]
                  ) [ClassVarDecLast]
                ) [ClassVarDeclaration]
              ) [ClassVariables]
              ListOfConstructorDeclarations(
                SingleOrLastConstructorDeclaration(
                  ConstructorDeclaration(
                    ConstructorDeclarationName(
                     Sfera
                    ) [ConstructorDeclarationName]
                    NoFormalParameters(
                    ) [NoFormalParameters]
                    ConstructorWithoutVar(
                    ) [ConstructorWithoutVar]
                    Statements(
                      Statements(
                        NoStatements(
                        ) [NoStatements]
                        StatementDesignator(
                          DesignatorAssignment(
                            SimpleDesignator(
                             vrsta
                            ) [SimpleDesignator]
                            TermPositiveExpr(
                              Term(
                                SingleFactor(
                                  CharConstFactor(
                                   s
                                  ) [CharConstFactor]
                                ) [SingleFactor]
                              ) [Term]
                            ) [TermPositiveExpr]
                          ) [DesignatorAssignment]
                        ) [StatementDesignator]
                      ) [Statements]
                      StatementDesignator(
                        DesignatorAssignment(
                          SimpleDesignator(
                           r
                          ) [SimpleDesignator]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                NumberConstFactor(
                                 1
                                ) [NumberConstFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [DesignatorAssignment]
                      ) [StatementDesignator]
                    ) [Statements]
                  ) [ConstructorDeclaration]
                ) [SingleOrLastConstructorDeclaration]
                ConstructorDeclaration(
                  ConstructorDeclarationName(
                   Sfera
                  ) [ConstructorDeclarationName]
                  FormalParameters(
                    SingleOrEndOfListParameter(
                      SingleFormalParameter(
                        Type(
                         int
                        ) [Type]
                       r
                        VarDeclarationOfNotArray(
                        ) [VarDeclarationOfNotArray]
                      ) [SingleFormalParameter]
                    ) [SingleOrEndOfListParameter]
                  ) [FormalParameters]
                  ConstructorWithoutVar(
                  ) [ConstructorWithoutVar]
                  Statements(
                    Statements(
                      NoStatements(
                      ) [NoStatements]
                      StatementDesignator(
                        DesignatorAssignment(
                          SimpleDesignator(
                           vrsta
                          ) [SimpleDesignator]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                CharConstFactor(
                                 s
                                ) [CharConstFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [DesignatorAssignment]
                      ) [StatementDesignator]
                    ) [Statements]
                    StatementDesignator(
                      DesignatorAssignment(
                        ClassFieldDesignator(
                          SimpleDesignator(
                           this
                          ) [SimpleDesignator]
                         r
                        ) [ClassFieldDesignator]
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              DesignatorFactor(
                                SimpleDesignator(
                                 r
                                ) [SimpleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [DesignatorAssignment]
                    ) [StatementDesignator]
                  ) [Statements]
                ) [ConstructorDeclaration]
              ) [ListOfConstructorDeclarations]
              ListOfMethodsInClass(
                SingleOrEndOfListMethod(
                  MethodDeclaration(
                    VoidMethodTypeName(
                     postaviPoluprecnik
                    ) [VoidMethodTypeName]
                    FormalParameters(
                      SingleOrEndOfListParameter(
                        SingleFormalParameter(
                          Type(
                           int
                          ) [Type]
                         r
                          VarDeclarationOfNotArray(
                          ) [VarDeclarationOfNotArray]
                        ) [SingleFormalParameter]
                      ) [SingleOrEndOfListParameter]
                    ) [FormalParameters]
                    MethodWithoutVariables(
                    ) [MethodWithoutVariables]
                    Statements(
                      NoStatements(
                      ) [NoStatements]
                      StatementDesignator(
                        DesignatorAssignment(
                          ClassFieldDesignator(
                            SimpleDesignator(
                             this
                            ) [SimpleDesignator]
                           r
                          ) [ClassFieldDesignator]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                DesignatorFactor(
                                  SimpleDesignator(
                                   r
                                  ) [SimpleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [DesignatorAssignment]
                      ) [StatementDesignator]
                    ) [Statements]
                  ) [MethodDeclaration]
                ) [SingleOrEndOfListMethod]
                MethodDeclaration(
                  ReturnMethodTypeName(
                    Type(
                     int
                    ) [Type]
                   zapremina
                  ) [ReturnMethodTypeName]
                  NoFormalParameters(
                  ) [NoFormalParameters]
                  MethodVariables(
                    MethodWithoutVariables(
                    ) [MethodWithoutVariables]
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarDeclarationLast(
                        LastVarDeclarations(
                         z
                          VarDeclarationOfNotArray(
                          ) [VarDeclarationOfNotArray]
                        ) [LastVarDeclarations]
                      ) [VarDeclarationLast]
                    ) [VarDeclaration]
                  ) [MethodVariables]
                  Statements(
                    Statements(
                      NoStatements(
                      ) [NoStatements]
                      StatementDesignator(
                        DesignatorAssignment(
                          SimpleDesignator(
                           z
                          ) [SimpleDesignator]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                DesignatorFactor(
                                  SimpleDesignator(
                                   cinilac
                                  ) [SimpleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [DesignatorAssignment]
                      ) [StatementDesignator]
                    ) [Statements]
                    StatementReturnExpr(
                      TermPositiveExpr(
                        Term(
                          MultipleFactors(
                            SingleFactor(
                              DesignatorFactor(
                                SimpleDesignator(
                                 z
                                ) [SimpleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleFactor]
                            MultiplyOperator(
                            ) [MultiplyOperator]
                            ExprFactor(
                              TermPositiveExpr(
                                Term(
                                  MultipleFactors(
                                    SingleFactor(
                                      DesignatorFactor(
                                        SimpleDesignator(
                                         r
                                        ) [SimpleDesignator]
                                      ) [DesignatorFactor]
                                    ) [SingleFactor]
                                    DivideOperator(
                                    ) [DivideOperator]
                                    DesignatorFactor(
                                      SimpleDesignator(
                                       delilac
                                      ) [SimpleDesignator]
                                    ) [DesignatorFactor]
                                  ) [MultipleFactors]
                                ) [Term]
                              ) [TermPositiveExpr]
                            ) [ExprFactor]
                          ) [MultipleFactors]
                        ) [Term]
                      ) [TermPositiveExpr]
                    ) [StatementReturnExpr]
                  ) [Statements]
                ) [MethodDeclaration]
              ) [ListOfMethodsInClass]
            ) [ClassBodyWithMethodAndConstructor]
          ) [ClassDeclaration]
        ) [ClassDeclarations]
        ClassDeclaration(
          NameOfClass(
           Kvadar
          ) [NameOfClass]
          ClassIsExtended(
            Type(
             Predmet
            ) [Type]
          ) [ClassIsExtended]
          ClassBodyWithMethodAndConstructor(
            ClassVariables(
              NoClassVariables(
              ) [NoClassVariables]
              ClassVarDeclaration(
                Type(
                 int
                ) [Type]
                ClassVarDecNotLast(
                  ClassVarDecNotLast(
                    ClassVarDecLast(
                      ClassVariable(
                       a
                        VarDeclarationOfNotArray(
                        ) [VarDeclarationOfNotArray]
                      ) [ClassVariable]
                    ) [ClassVarDecLast]
                    ClassVariable(
                     b
                      VarDeclarationOfNotArray(
                      ) [VarDeclarationOfNotArray]
                    ) [ClassVariable]
                  ) [ClassVarDecNotLast]
                  ClassVariable(
                   c
                    VarDeclarationOfNotArray(
                    ) [VarDeclarationOfNotArray]
                  ) [ClassVariable]
                ) [ClassVarDecNotLast]
              ) [ClassVarDeclaration]
            ) [ClassVariables]
            ListOfConstructorDeclarations(
              ListOfConstructorDeclarations(
                SingleOrLastConstructorDeclaration(
                  ConstructorDeclaration(
                    ConstructorDeclarationName(
                     Kvadar
                    ) [ConstructorDeclarationName]
                    NoFormalParameters(
                    ) [NoFormalParameters]
                    ConstructorWithoutVar(
                    ) [ConstructorWithoutVar]
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            NoStatements(
                            ) [NoStatements]
                            StatementDesignator(
                              DesignatorAssignment(
                                SimpleDesignator(
                                 vrsta
                                ) [SimpleDesignator]
                                TermPositiveExpr(
                                  Term(
                                    SingleFactor(
                                      CharConstFactor(
                                       k
                                      ) [CharConstFactor]
                                    ) [SingleFactor]
                                  ) [Term]
                                ) [TermPositiveExpr]
                              ) [DesignatorAssignment]
                            ) [StatementDesignator]
                          ) [Statements]
                          StatementDesignator(
                            DesignatorAssignment(
                              SimpleDesignator(
                               a
                              ) [SimpleDesignator]
                              TermPositiveExpr(
                                Term(
                                  SingleFactor(
                                    NumberConstFactor(
                                     1
                                    ) [NumberConstFactor]
                                  ) [SingleFactor]
                                ) [Term]
                              ) [TermPositiveExpr]
                            ) [DesignatorAssignment]
                          ) [StatementDesignator]
                        ) [Statements]
                        StatementDesignator(
                          DesignatorAssignment(
                            SimpleDesignator(
                             b
                            ) [SimpleDesignator]
                            TermPositiveExpr(
                              Term(
                                SingleFactor(
                                  NumberConstFactor(
                                   2
                                  ) [NumberConstFactor]
                                ) [SingleFactor]
                              ) [Term]
                            ) [TermPositiveExpr]
                          ) [DesignatorAssignment]
                        ) [StatementDesignator]
                      ) [Statements]
                      StatementDesignator(
                        DesignatorAssignment(
                          SimpleDesignator(
                           c
                          ) [SimpleDesignator]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                NumberConstFactor(
                                 3
                                ) [NumberConstFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [DesignatorAssignment]
                      ) [StatementDesignator]
                    ) [Statements]
                  ) [ConstructorDeclaration]
                ) [SingleOrLastConstructorDeclaration]
                ConstructorDeclaration(
                  ConstructorDeclarationName(
                   Kvadar
                  ) [ConstructorDeclarationName]
                  FormalParameters(
                    ListOfParameters(
                      SingleFormalParameter(
                        Type(
                         int
                        ) [Type]
                       a
                        VarDeclarationOfNotArray(
                        ) [VarDeclarationOfNotArray]
                      ) [SingleFormalParameter]
                      ListOfParameters(
                        SingleFormalParameter(
                          Type(
                           int
                          ) [Type]
                         b
                          VarDeclarationOfNotArray(
                          ) [VarDeclarationOfNotArray]
                        ) [SingleFormalParameter]
                        SingleOrEndOfListParameter(
                          SingleFormalParameter(
                            Type(
                             int
                            ) [Type]
                           c
                            VarDeclarationOfNotArray(
                            ) [VarDeclarationOfNotArray]
                          ) [SingleFormalParameter]
                        ) [SingleOrEndOfListParameter]
                      ) [ListOfParameters]
                    ) [ListOfParameters]
                  ) [FormalParameters]
                  ConstructorWithoutVar(
                  ) [ConstructorWithoutVar]
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          NoStatements(
                          ) [NoStatements]
                          StatementDesignator(
                            DesignatorAssignment(
                              SimpleDesignator(
                               vrsta
                              ) [SimpleDesignator]
                              TermPositiveExpr(
                                Term(
                                  SingleFactor(
                                    CharConstFactor(
                                     k
                                    ) [CharConstFactor]
                                  ) [SingleFactor]
                                ) [Term]
                              ) [TermPositiveExpr]
                            ) [DesignatorAssignment]
                          ) [StatementDesignator]
                        ) [Statements]
                        StatementDesignator(
                          DesignatorAssignment(
                            ClassFieldDesignator(
                              SimpleDesignator(
                               this
                              ) [SimpleDesignator]
                             a
                            ) [ClassFieldDesignator]
                            TermPositiveExpr(
                              Term(
                                SingleFactor(
                                  DesignatorFactor(
                                    SimpleDesignator(
                                     a
                                    ) [SimpleDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleFactor]
                              ) [Term]
                            ) [TermPositiveExpr]
                          ) [DesignatorAssignment]
                        ) [StatementDesignator]
                      ) [Statements]
                      StatementDesignator(
                        DesignatorAssignment(
                          ClassFieldDesignator(
                            SimpleDesignator(
                             this
                            ) [SimpleDesignator]
                           b
                          ) [ClassFieldDesignator]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                DesignatorFactor(
                                  SimpleDesignator(
                                   b
                                  ) [SimpleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [DesignatorAssignment]
                      ) [StatementDesignator]
                    ) [Statements]
                    StatementDesignator(
                      DesignatorAssignment(
                        ClassFieldDesignator(
                          SimpleDesignator(
                           this
                          ) [SimpleDesignator]
                         c
                        ) [ClassFieldDesignator]
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              DesignatorFactor(
                                SimpleDesignator(
                                 c
                                ) [SimpleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [DesignatorAssignment]
                    ) [StatementDesignator]
                  ) [Statements]
                ) [ConstructorDeclaration]
              ) [ListOfConstructorDeclarations]
              ConstructorDeclaration(
                ConstructorDeclarationName(
                 Kvadar
                ) [ConstructorDeclarationName]
                FormalParameters(
                  SingleOrEndOfListParameter(
                    SingleFormalParameter(
                      Type(
                       int
                      ) [Type]
                     a
                      VarDeclarationOfNotArray(
                      ) [VarDeclarationOfNotArray]
                    ) [SingleFormalParameter]
                  ) [SingleOrEndOfListParameter]
                ) [FormalParameters]
                ConstructorWithoutVar(
                ) [ConstructorWithoutVar]
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStatements(
                        ) [NoStatements]
                        StatementDesignator(
                          DesignatorAssignment(
                            SimpleDesignator(
                             vrsta
                            ) [SimpleDesignator]
                            TermPositiveExpr(
                              Term(
                                SingleFactor(
                                  CharConstFactor(
                                   k
                                  ) [CharConstFactor]
                                ) [SingleFactor]
                              ) [Term]
                            ) [TermPositiveExpr]
                          ) [DesignatorAssignment]
                        ) [StatementDesignator]
                      ) [Statements]
                      StatementDesignator(
                        DesignatorAssignment(
                          ClassFieldDesignator(
                            SimpleDesignator(
                             this
                            ) [SimpleDesignator]
                           a
                          ) [ClassFieldDesignator]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                DesignatorFactor(
                                  SimpleDesignator(
                                   a
                                  ) [SimpleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [DesignatorAssignment]
                      ) [StatementDesignator]
                    ) [Statements]
                    StatementDesignator(
                      DesignatorAssignment(
                        SimpleDesignator(
                         b
                        ) [SimpleDesignator]
                        AddExpr(
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                DesignatorFactor(
                                  SimpleDesignator(
                                   a
                                  ) [SimpleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                          PlusOperator(
                          ) [PlusOperator]
                          Term(
                            SingleFactor(
                              NumberConstFactor(
                               1
                              ) [NumberConstFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [AddExpr]
                      ) [DesignatorAssignment]
                    ) [StatementDesignator]
                  ) [Statements]
                  StatementDesignator(
                    DesignatorAssignment(
                      SimpleDesignator(
                       c
                      ) [SimpleDesignator]
                      AddExpr(
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              DesignatorFactor(
                                SimpleDesignator(
                                 a
                                ) [SimpleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                        PlusOperator(
                        ) [PlusOperator]
                        Term(
                          SingleFactor(
                            NumberConstFactor(
                             2
                            ) [NumberConstFactor]
                          ) [SingleFactor]
                        ) [Term]
                      ) [AddExpr]
                    ) [DesignatorAssignment]
                  ) [StatementDesignator]
                ) [Statements]
              ) [ConstructorDeclaration]
            ) [ListOfConstructorDeclarations]
            ListOfMethodsInClass(
              SingleOrEndOfListMethod(
                MethodDeclaration(
                  VoidMethodTypeName(
                   postaviStranice
                  ) [VoidMethodTypeName]
                  FormalParameters(
                    ListOfParameters(
                      SingleFormalParameter(
                        Type(
                         int
                        ) [Type]
                       a
                        VarDeclarationOfNotArray(
                        ) [VarDeclarationOfNotArray]
                      ) [SingleFormalParameter]
                      ListOfParameters(
                        SingleFormalParameter(
                          Type(
                           int
                          ) [Type]
                         b
                          VarDeclarationOfNotArray(
                          ) [VarDeclarationOfNotArray]
                        ) [SingleFormalParameter]
                        SingleOrEndOfListParameter(
                          SingleFormalParameter(
                            Type(
                             int
                            ) [Type]
                           c
                            VarDeclarationOfNotArray(
                            ) [VarDeclarationOfNotArray]
                          ) [SingleFormalParameter]
                        ) [SingleOrEndOfListParameter]
                      ) [ListOfParameters]
                    ) [ListOfParameters]
                  ) [FormalParameters]
                  MethodWithoutVariables(
                  ) [MethodWithoutVariables]
                  Statements(
                    Statements(
                      Statements(
                        NoStatements(
                        ) [NoStatements]
                        StatementDesignator(
                          DesignatorAssignment(
                            ClassFieldDesignator(
                              SimpleDesignator(
                               this
                              ) [SimpleDesignator]
                             a
                            ) [ClassFieldDesignator]
                            TermPositiveExpr(
                              Term(
                                SingleFactor(
                                  DesignatorFactor(
                                    SimpleDesignator(
                                     a
                                    ) [SimpleDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleFactor]
                              ) [Term]
                            ) [TermPositiveExpr]
                          ) [DesignatorAssignment]
                        ) [StatementDesignator]
                      ) [Statements]
                      StatementDesignator(
                        DesignatorAssignment(
                          ClassFieldDesignator(
                            SimpleDesignator(
                             this
                            ) [SimpleDesignator]
                           b
                          ) [ClassFieldDesignator]
                          TermPositiveExpr(
                            Term(
                              SingleFactor(
                                DesignatorFactor(
                                  SimpleDesignator(
                                   b
                                  ) [SimpleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactor]
                            ) [Term]
                          ) [TermPositiveExpr]
                        ) [DesignatorAssignment]
                      ) [StatementDesignator]
                    ) [Statements]
                    StatementDesignator(
                      DesignatorAssignment(
                        ClassFieldDesignator(
                          SimpleDesignator(
                           this
                          ) [SimpleDesignator]
                         c
                        ) [ClassFieldDesignator]
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              DesignatorFactor(
                                SimpleDesignator(
                                 c
                                ) [SimpleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [DesignatorAssignment]
                    ) [StatementDesignator]
                  ) [Statements]
                ) [MethodDeclaration]
              ) [SingleOrEndOfListMethod]
              MethodDeclaration(
                ReturnMethodTypeName(
                  Type(
                   int
                  ) [Type]
                 zapremina
                ) [ReturnMethodTypeName]
                NoFormalParameters(
                ) [NoFormalParameters]
                MethodVariables(
                  MethodWithoutVariables(
                  ) [MethodWithoutVariables]
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                    VarDeclarationLast(
                      LastVarDeclarations(
                       z
                        VarDeclarationOfNotArray(
                        ) [VarDeclarationOfNotArray]
                      ) [LastVarDeclarations]
                    ) [VarDeclarationLast]
                  ) [VarDeclaration]
                ) [MethodVariables]
                Statements(
                  Statements(
                    NoStatements(
                    ) [NoStatements]
                    StatementDesignator(
                      DesignatorAssignment(
                        SimpleDesignator(
                         z
                        ) [SimpleDesignator]
                        TermPositiveExpr(
                          Term(
                            MultipleFactors(
                              MultipleFactors(
                                SingleFactor(
                                  DesignatorFactor(
                                    SimpleDesignator(
                                     a
                                    ) [SimpleDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleFactor]
                                MultiplyOperator(
                                ) [MultiplyOperator]
                                DesignatorFactor(
                                  SimpleDesignator(
                                   b
                                  ) [SimpleDesignator]
                                ) [DesignatorFactor]
                              ) [MultipleFactors]
                              MultiplyOperator(
                              ) [MultiplyOperator]
                              DesignatorFactor(
                                SimpleDesignator(
                                 c
                                ) [SimpleDesignator]
                              ) [DesignatorFactor]
                            ) [MultipleFactors]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [DesignatorAssignment]
                    ) [StatementDesignator]
                  ) [Statements]
                  StatementReturnExpr(
                    TermPositiveExpr(
                      Term(
                        SingleFactor(
                          DesignatorFactor(
                            SimpleDesignator(
                             z
                            ) [SimpleDesignator]
                          ) [DesignatorFactor]
                        ) [SingleFactor]
                      ) [Term]
                    ) [TermPositiveExpr]
                  ) [StatementReturnExpr]
                ) [Statements]
              ) [MethodDeclaration]
            ) [ListOfMethodsInClass]
          ) [ClassBodyWithMethodAndConstructor]
        ) [ClassDeclaration]
      ) [ClassDeclarations]
      VarDeclaration(
        Type(
         int
        ) [Type]
        VarDeclarationNotLast(
          NotLastVarDeclarations(
           zapreminaK
            VarDeclarationOfNotArray(
            ) [VarDeclarationOfNotArray]
          ) [NotLastVarDeclarations]
          VarDeclarationLast(
            LastVarDeclarations(
             zapreminaS
              VarDeclarationOfNotArray(
              ) [VarDeclarationOfNotArray]
            ) [LastVarDeclarations]
          ) [VarDeclarationLast]
        ) [VarDeclarationNotLast]
      ) [VarDeclaration]
    ) [VarDeclarations]
    VarDeclaration(
      Type(
       int
      ) [Type]
      VarDeclarationNotLast(
        NotLastVarDeclarations(
         tezinaK
          VarDeclarationOfNotArray(
          ) [VarDeclarationOfNotArray]
        ) [NotLastVarDeclarations]
        VarDeclarationLast(
          LastVarDeclarations(
           tezinaS
            VarDeclarationOfNotArray(
            ) [VarDeclarationOfNotArray]
          ) [LastVarDeclarations]
        ) [VarDeclarationLast]
      ) [VarDeclarationNotLast]
    ) [VarDeclaration]
  ) [VarDeclarations]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDeclarations(
      ) [NoMethodDeclarations]
      MethodDeclaration(
        VoidMethodTypeName(
         ispis
        ) [VoidMethodTypeName]
        FormalParameters(
          SingleOrEndOfListParameter(
            SingleFormalParameter(
              Type(
               Predmet
              ) [Type]
             p
              VarDeclarationOfNotArray(
              ) [VarDeclarationOfNotArray]
            ) [SingleFormalParameter]
          ) [SingleOrEndOfListParameter]
        ) [FormalParameters]
        MethodWithoutVariables(
        ) [MethodWithoutVariables]
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              StatementDesignator(
                DesignatorFuncCall(
                  FuncCallFactorDesignator(
                    ClassFieldDesignator(
                      SimpleDesignator(
                       p
                      ) [SimpleDesignator]
                     ispisi
                    ) [ClassFieldDesignator]
                  ) [FuncCallFactorDesignator]
                  NoActuals(
                  ) [NoActuals]
                ) [DesignatorFuncCall]
              ) [StatementDesignator]
            ) [Statements]
            StatementPrintWithoutWidth(
              PrintEmptyDummy(
              ) [PrintEmptyDummy]
              TermPositiveExpr(
                Term(
                  SingleFactor(
                    DesignatorFactor(
                      SimpleDesignator(
                       eol
                      ) [SimpleDesignator]
                    ) [DesignatorFactor]
                  ) [SingleFactor]
                ) [Term]
              ) [TermPositiveExpr]
            ) [StatementPrintWithoutWidth]
          ) [Statements]
          StatementPrintWithoutWidth(
            PrintEmptyDummy(
            ) [PrintEmptyDummy]
            TermPositiveExpr(
              Term(
                SingleFactor(
                  FuncCallFactor(
                    FuncCallFactorDesignator(
                      ClassFieldDesignator(
                        SimpleDesignator(
                         p
                        ) [SimpleDesignator]
                       dohvTezinu
                      ) [ClassFieldDesignator]
                    ) [FuncCallFactorDesignator]
                    NoActuals(
                    ) [NoActuals]
                  ) [FuncCallFactor]
                ) [SingleFactor]
              ) [Term]
            ) [TermPositiveExpr]
          ) [StatementPrintWithoutWidth]
        ) [Statements]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      VoidMethodTypeName(
       main
      ) [VoidMethodTypeName]
      NoFormalParameters(
      ) [NoFormalParameters]
      MethodVariables(
        MethodVariables(
          MethodVariables(
            MethodVariables(
              MethodVariables(
                MethodWithoutVariables(
                ) [MethodWithoutVariables]
                VarDeclaration(
                  Type(
                   Predmet
                  ) [Type]
                  VarDeclarationLast(
                    LastVarDeclarations(
                     predmeti
                      VarDeclarationOfArray(
                      ) [VarDeclarationOfArray]
                    ) [LastVarDeclarations]
                  ) [VarDeclarationLast]
                ) [VarDeclaration]
              ) [MethodVariables]
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarDeclarationLast(
                  LastVarDeclarations(
                   i
                    VarDeclarationOfNotArray(
                    ) [VarDeclarationOfNotArray]
                  ) [LastVarDeclarations]
                ) [VarDeclarationLast]
              ) [VarDeclaration]
            ) [MethodVariables]
            VarDeclaration(
              Type(
               Sfera
              ) [Type]
              VarDeclarationNotLast(
                NotLastVarDeclarations(
                 s1
                  VarDeclarationOfNotArray(
                  ) [VarDeclarationOfNotArray]
                ) [NotLastVarDeclarations]
                VarDeclarationNotLast(
                  NotLastVarDeclarations(
                   s2
                    VarDeclarationOfNotArray(
                    ) [VarDeclarationOfNotArray]
                  ) [NotLastVarDeclarations]
                  VarDeclarationLast(
                    LastVarDeclarations(
                     s3
                      VarDeclarationOfNotArray(
                      ) [VarDeclarationOfNotArray]
                    ) [LastVarDeclarations]
                  ) [VarDeclarationLast]
                ) [VarDeclarationNotLast]
              ) [VarDeclarationNotLast]
            ) [VarDeclaration]
          ) [MethodVariables]
          VarDeclaration(
            Type(
             Kvadar
            ) [Type]
            VarDeclarationNotLast(
              NotLastVarDeclarations(
               k1
                VarDeclarationOfNotArray(
                ) [VarDeclarationOfNotArray]
              ) [NotLastVarDeclarations]
              VarDeclarationNotLast(
                NotLastVarDeclarations(
                 k2
                  VarDeclarationOfNotArray(
                  ) [VarDeclarationOfNotArray]
                ) [NotLastVarDeclarations]
                VarDeclarationLast(
                  LastVarDeclarations(
                   k3
                    VarDeclarationOfNotArray(
                    ) [VarDeclarationOfNotArray]
                  ) [LastVarDeclarations]
                ) [VarDeclarationLast]
              ) [VarDeclarationNotLast]
            ) [VarDeclarationNotLast]
          ) [VarDeclaration]
        ) [MethodVariables]
        VarDeclaration(
          Type(
           int
          ) [Type]
          VarDeclarationLast(
            LastVarDeclarations(
             t
              VarDeclarationOfNotArray(
              ) [VarDeclarationOfNotArray]
            ) [LastVarDeclarations]
          ) [VarDeclarationLast]
        ) [VarDeclaration]
      ) [MethodVariables]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      Statements(
                                                        Statements(
                                                          Statements(
                                                            Statements(
                                                              Statements(
                                                                Statements(
                                                                  Statements(
                                                                    Statements(
                                                                      NoStatements(
                                                                      ) [NoStatements]
                                                                      StatementDesignator(
                                                                        DesignatorAssignment(
                                                                          SimpleDesignator(
                                                                           predmeti
                                                                          ) [SimpleDesignator]
                                                                          TermPositiveExpr(
                                                                            Term(
                                                                              SingleFactor(
                                                                                NewArrayOperatorFactor(
                                                                                  Type(
                                                                                   Predmet
                                                                                  ) [Type]
                                                                                  TermPositiveExpr(
                                                                                    Term(
                                                                                      SingleFactor(
                                                                                        NumberConstFactor(
                                                                                         6
                                                                                        ) [NumberConstFactor]
                                                                                      ) [SingleFactor]
                                                                                    ) [Term]
                                                                                  ) [TermPositiveExpr]
                                                                                ) [NewArrayOperatorFactor]
                                                                              ) [SingleFactor]
                                                                            ) [Term]
                                                                          ) [TermPositiveExpr]
                                                                        ) [DesignatorAssignment]
                                                                      ) [StatementDesignator]
                                                                    ) [Statements]
                                                                    StatementDesignator(
                                                                      DesignatorAssignment(
                                                                        SimpleDesignator(
                                                                         s1
                                                                        ) [SimpleDesignator]
                                                                        TermPositiveExpr(
                                                                          Term(
                                                                            SingleFactor(
                                                                              NewClassWithActParsOperatorFactor(
                                                                                Type(
                                                                                 Sfera
                                                                                ) [Type]
                                                                                NoActuals(
                                                                                ) [NoActuals]
                                                                              ) [NewClassWithActParsOperatorFactor]
                                                                            ) [SingleFactor]
                                                                          ) [Term]
                                                                        ) [TermPositiveExpr]
                                                                      ) [DesignatorAssignment]
                                                                    ) [StatementDesignator]
                                                                  ) [Statements]
                                                                  StatementDesignator(
                                                                    DesignatorAssignment(
                                                                      SimpleDesignator(
                                                                       s2
                                                                      ) [SimpleDesignator]
                                                                      TermPositiveExpr(
                                                                        Term(
                                                                          SingleFactor(
                                                                            NewClassWithActParsOperatorFactor(
                                                                              Type(
                                                                               Sfera
                                                                              ) [Type]
                                                                              Actuals(
                                                                                ActualParam(
                                                                                  TermPositiveExpr(
                                                                                    Term(
                                                                                      SingleFactor(
                                                                                        NumberConstFactor(
                                                                                         2
                                                                                        ) [NumberConstFactor]
                                                                                      ) [SingleFactor]
                                                                                    ) [Term]
                                                                                  ) [TermPositiveExpr]
                                                                                ) [ActualParam]
                                                                              ) [Actuals]
                                                                            ) [NewClassWithActParsOperatorFactor]
                                                                          ) [SingleFactor]
                                                                        ) [Term]
                                                                      ) [TermPositiveExpr]
                                                                    ) [DesignatorAssignment]
                                                                  ) [StatementDesignator]
                                                                ) [Statements]
                                                                StatementDesignator(
                                                                  DesignatorAssignment(
                                                                    SimpleDesignator(
                                                                     s3
                                                                    ) [SimpleDesignator]
                                                                    TermPositiveExpr(
                                                                      Term(
                                                                        SingleFactor(
                                                                          NewClassWithActParsOperatorFactor(
                                                                            Type(
                                                                             Sfera
                                                                            ) [Type]
                                                                            Actuals(
                                                                              ActualParam(
                                                                                TermPositiveExpr(
                                                                                  Term(
                                                                                    SingleFactor(
                                                                                      NumberConstFactor(
                                                                                       3
                                                                                      ) [NumberConstFactor]
                                                                                    ) [SingleFactor]
                                                                                  ) [Term]
                                                                                ) [TermPositiveExpr]
                                                                              ) [ActualParam]
                                                                            ) [Actuals]
                                                                          ) [NewClassWithActParsOperatorFactor]
                                                                        ) [SingleFactor]
                                                                      ) [Term]
                                                                    ) [TermPositiveExpr]
                                                                  ) [DesignatorAssignment]
                                                                ) [StatementDesignator]
                                                              ) [Statements]
                                                              StatementDesignator(
                                                                DesignatorAssignment(
                                                                  SimpleDesignator(
                                                                   k3
                                                                  ) [SimpleDesignator]
                                                                  TermPositiveExpr(
                                                                    Term(
                                                                      SingleFactor(
                                                                        NewClassWithActParsOperatorFactor(
                                                                          Type(
                                                                           Kvadar
                                                                          ) [Type]
                                                                          NoActuals(
                                                                          ) [NoActuals]
                                                                        ) [NewClassWithActParsOperatorFactor]
                                                                      ) [SingleFactor]
                                                                    ) [Term]
                                                                  ) [TermPositiveExpr]
                                                                ) [DesignatorAssignment]
                                                              ) [StatementDesignator]
                                                            ) [Statements]
                                                            StatementDesignator(
                                                              DesignatorAssignment(
                                                                SimpleDesignator(
                                                                 k1
                                                                ) [SimpleDesignator]
                                                                TermPositiveExpr(
                                                                  Term(
                                                                    SingleFactor(
                                                                      NewClassWithActParsOperatorFactor(
                                                                        Type(
                                                                         Kvadar
                                                                        ) [Type]
                                                                        Actuals(
                                                                          ActualParam(
                                                                            TermPositiveExpr(
                                                                              Term(
                                                                                SingleFactor(
                                                                                  NumberConstFactor(
                                                                                   2
                                                                                  ) [NumberConstFactor]
                                                                                ) [SingleFactor]
                                                                              ) [Term]
                                                                            ) [TermPositiveExpr]
                                                                          ) [ActualParam]
                                                                        ) [Actuals]
                                                                      ) [NewClassWithActParsOperatorFactor]
                                                                    ) [SingleFactor]
                                                                  ) [Term]
                                                                ) [TermPositiveExpr]
                                                              ) [DesignatorAssignment]
                                                            ) [StatementDesignator]
                                                          ) [Statements]
                                                          StatementDesignator(
                                                            DesignatorAssignment(
                                                              SimpleDesignator(
                                                               k2
                                                              ) [SimpleDesignator]
                                                              TermPositiveExpr(
                                                                Term(
                                                                  SingleFactor(
                                                                    NewClassWithActParsOperatorFactor(
                                                                      Type(
                                                                       Kvadar
                                                                      ) [Type]
                                                                      Actuals(
                                                                        ActualParams(
                                                                          ActualParams(
                                                                            ActualParam(
                                                                              TermPositiveExpr(
                                                                                Term(
                                                                                  SingleFactor(
                                                                                    NumberConstFactor(
                                                                                     3
                                                                                    ) [NumberConstFactor]
                                                                                  ) [SingleFactor]
                                                                                ) [Term]
                                                                              ) [TermPositiveExpr]
                                                                            ) [ActualParam]
                                                                            TermPositiveExpr(
                                                                              Term(
                                                                                SingleFactor(
                                                                                  NumberConstFactor(
                                                                                   4
                                                                                  ) [NumberConstFactor]
                                                                                ) [SingleFactor]
                                                                              ) [Term]
                                                                            ) [TermPositiveExpr]
                                                                          ) [ActualParams]
                                                                          TermPositiveExpr(
                                                                            Term(
                                                                              SingleFactor(
                                                                                NumberConstFactor(
                                                                                 5
                                                                                ) [NumberConstFactor]
                                                                              ) [SingleFactor]
                                                                            ) [Term]
                                                                          ) [TermPositiveExpr]
                                                                        ) [ActualParams]
                                                                      ) [Actuals]
                                                                    ) [NewClassWithActParsOperatorFactor]
                                                                  ) [SingleFactor]
                                                                ) [Term]
                                                              ) [TermPositiveExpr]
                                                            ) [DesignatorAssignment]
                                                          ) [StatementDesignator]
                                                        ) [Statements]
                                                        StatementDesignator(
                                                          DesignatorAssignment(
                                                            ArrayDesignator(
                                                              ArrayDesig(
                                                                SimpleDesignator(
                                                                 predmeti
                                                                ) [SimpleDesignator]
                                                              ) [ArrayDesig]
                                                              TermPositiveExpr(
                                                                Term(
                                                                  SingleFactor(
                                                                    NumberConstFactor(
                                                                     0
                                                                    ) [NumberConstFactor]
                                                                  ) [SingleFactor]
                                                                ) [Term]
                                                              ) [TermPositiveExpr]
                                                            ) [ArrayDesignator]
                                                            TermPositiveExpr(
                                                              Term(
                                                                SingleFactor(
                                                                  DesignatorFactor(
                                                                    SimpleDesignator(
                                                                     s1
                                                                    ) [SimpleDesignator]
                                                                  ) [DesignatorFactor]
                                                                ) [SingleFactor]
                                                              ) [Term]
                                                            ) [TermPositiveExpr]
                                                          ) [DesignatorAssignment]
                                                        ) [StatementDesignator]
                                                      ) [Statements]
                                                      StatementDesignator(
                                                        DesignatorAssignment(
                                                          ArrayDesignator(
                                                            ArrayDesig(
                                                              SimpleDesignator(
                                                               predmeti
                                                              ) [SimpleDesignator]
                                                            ) [ArrayDesig]
                                                            TermPositiveExpr(
                                                              Term(
                                                                SingleFactor(
                                                                  NumberConstFactor(
                                                                   2
                                                                  ) [NumberConstFactor]
                                                                ) [SingleFactor]
                                                              ) [Term]
                                                            ) [TermPositiveExpr]
                                                          ) [ArrayDesignator]
                                                          TermPositiveExpr(
                                                            Term(
                                                              SingleFactor(
                                                                DesignatorFactor(
                                                                  SimpleDesignator(
                                                                   s2
                                                                  ) [SimpleDesignator]
                                                                ) [DesignatorFactor]
                                                              ) [SingleFactor]
                                                            ) [Term]
                                                          ) [TermPositiveExpr]
                                                        ) [DesignatorAssignment]
                                                      ) [StatementDesignator]
                                                    ) [Statements]
                                                    StatementDesignator(
                                                      DesignatorAssignment(
                                                        ArrayDesignator(
                                                          ArrayDesig(
                                                            SimpleDesignator(
                                                             predmeti
                                                            ) [SimpleDesignator]
                                                          ) [ArrayDesig]
                                                          TermPositiveExpr(
                                                            Term(
                                                              SingleFactor(
                                                                NumberConstFactor(
                                                                 4
                                                                ) [NumberConstFactor]
                                                              ) [SingleFactor]
                                                            ) [Term]
                                                          ) [TermPositiveExpr]
                                                        ) [ArrayDesignator]
                                                        TermPositiveExpr(
                                                          Term(
                                                            SingleFactor(
                                                              DesignatorFactor(
                                                                SimpleDesignator(
                                                                 s3
                                                                ) [SimpleDesignator]
                                                              ) [DesignatorFactor]
                                                            ) [SingleFactor]
                                                          ) [Term]
                                                        ) [TermPositiveExpr]
                                                      ) [DesignatorAssignment]
                                                    ) [StatementDesignator]
                                                  ) [Statements]
                                                  StatementDesignator(
                                                    DesignatorAssignment(
                                                      ArrayDesignator(
                                                        ArrayDesig(
                                                          SimpleDesignator(
                                                           predmeti
                                                          ) [SimpleDesignator]
                                                        ) [ArrayDesig]
                                                        TermPositiveExpr(
                                                          Term(
                                                            SingleFactor(
                                                              NumberConstFactor(
                                                               1
                                                              ) [NumberConstFactor]
                                                            ) [SingleFactor]
                                                          ) [Term]
                                                        ) [TermPositiveExpr]
                                                      ) [ArrayDesignator]
                                                      TermPositiveExpr(
                                                        Term(
                                                          SingleFactor(
                                                            DesignatorFactor(
                                                              SimpleDesignator(
                                                               k1
                                                              ) [SimpleDesignator]
                                                            ) [DesignatorFactor]
                                                          ) [SingleFactor]
                                                        ) [Term]
                                                      ) [TermPositiveExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StatementDesignator]
                                                ) [Statements]
                                                StatementDesignator(
                                                  DesignatorAssignment(
                                                    ArrayDesignator(
                                                      ArrayDesig(
                                                        SimpleDesignator(
                                                         predmeti
                                                        ) [SimpleDesignator]
                                                      ) [ArrayDesig]
                                                      TermPositiveExpr(
                                                        Term(
                                                          SingleFactor(
                                                            NumberConstFactor(
                                                             3
                                                            ) [NumberConstFactor]
                                                          ) [SingleFactor]
                                                        ) [Term]
                                                      ) [TermPositiveExpr]
                                                    ) [ArrayDesignator]
                                                    TermPositiveExpr(
                                                      Term(
                                                        SingleFactor(
                                                          DesignatorFactor(
                                                            SimpleDesignator(
                                                             k2
                                                            ) [SimpleDesignator]
                                                          ) [DesignatorFactor]
                                                        ) [SingleFactor]
                                                      ) [Term]
                                                    ) [TermPositiveExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StatementDesignator]
                                              ) [Statements]
                                              StatementDesignator(
                                                DesignatorAssignment(
                                                  ArrayDesignator(
                                                    ArrayDesig(
                                                      SimpleDesignator(
                                                       predmeti
                                                      ) [SimpleDesignator]
                                                    ) [ArrayDesig]
                                                    TermPositiveExpr(
                                                      Term(
                                                        SingleFactor(
                                                          NumberConstFactor(
                                                           5
                                                          ) [NumberConstFactor]
                                                        ) [SingleFactor]
                                                      ) [Term]
                                                    ) [TermPositiveExpr]
                                                  ) [ArrayDesignator]
                                                  TermPositiveExpr(
                                                    Term(
                                                      SingleFactor(
                                                        DesignatorFactor(
                                                          SimpleDesignator(
                                                           k3
                                                          ) [SimpleDesignator]
                                                        ) [DesignatorFactor]
                                                      ) [SingleFactor]
                                                    ) [Term]
                                                  ) [TermPositiveExpr]
                                                ) [DesignatorAssignment]
                                              ) [StatementDesignator]
                                            ) [Statements]
                                            StatementRead(
                                              SimpleDesignator(
                                               t
                                              ) [SimpleDesignator]
                                            ) [StatementRead]
                                          ) [Statements]
                                          StatementDesignator(
                                            DesignatorAssignment(
                                              SimpleDesignator(
                                               i
                                              ) [SimpleDesignator]
                                              TermPositiveExpr(
                                                Term(
                                                  SingleFactor(
                                                    NumberConstFactor(
                                                     0
                                                    ) [NumberConstFactor]
                                                  ) [SingleFactor]
                                                ) [Term]
                                              ) [TermPositiveExpr]
                                            ) [DesignatorAssignment]
                                          ) [StatementDesignator]
                                        ) [Statements]
                                        StatementWhile(
                                          WhileLoopParen(
                                          ) [WhileLoopParen]
                                          FirstFixupForWhile(
                                          ) [FirstFixupForWhile]
                                          ConditionsWithoutOr(
                                            ConditionsWithoutAnd(
                                              RelopCondition(
                                                TermPositiveExpr(
                                                  Term(
                                                    SingleFactor(
                                                      DesignatorFactor(
                                                        SimpleDesignator(
                                                         i
                                                        ) [SimpleDesignator]
                                                      ) [DesignatorFactor]
                                                    ) [SingleFactor]
                                                  ) [Term]
                                                ) [TermPositiveExpr]
                                                LessOperator(
                                                ) [LessOperator]
                                                TermPositiveExpr(
                                                  Term(
                                                    SingleFactor(
                                                      NumberConstFactor(
                                                       6
                                                      ) [NumberConstFactor]
                                                    ) [SingleFactor]
                                                  ) [Term]
                                                ) [TermPositiveExpr]
                                              ) [RelopCondition]
                                            ) [ConditionsWithoutAnd]
                                          ) [ConditionsWithoutOr]
                                          StatementBlock(
                                            Statements(
                                              Statements(
                                                NoStatements(
                                                ) [NoStatements]
                                                StatementDesignator(
                                                  DesignatorFuncCall(
                                                    FuncCallFactorDesignator(
                                                      ClassFieldDesignator(
                                                        ArrayDesignator(
                                                          ArrayDesig(
                                                            SimpleDesignator(
                                                             predmeti
                                                            ) [SimpleDesignator]
                                                          ) [ArrayDesig]
                                                          TermPositiveExpr(
                                                            Term(
                                                              SingleFactor(
                                                                DesignatorFactor(
                                                                  SimpleDesignator(
                                                                   i
                                                                  ) [SimpleDesignator]
                                                                ) [DesignatorFactor]
                                                              ) [SingleFactor]
                                                            ) [Term]
                                                          ) [TermPositiveExpr]
                                                        ) [ArrayDesignator]
                                                       postaviTezinu
                                                      ) [ClassFieldDesignator]
                                                    ) [FuncCallFactorDesignator]
                                                    Actuals(
                                                      ActualParam(
                                                        TermPositiveExpr(
                                                          Term(
                                                            SingleFactor(
                                                              DesignatorFactor(
                                                                SimpleDesignator(
                                                                 t
                                                                ) [SimpleDesignator]
                                                              ) [DesignatorFactor]
                                                            ) [SingleFactor]
                                                          ) [Term]
                                                        ) [TermPositiveExpr]
                                                      ) [ActualParam]
                                                    ) [Actuals]
                                                  ) [DesignatorFuncCall]
                                                ) [StatementDesignator]
                                              ) [Statements]
                                              StatementDesignator(
                                                DesignatorInc(
                                                  SimpleDesignator(
                                                   i
                                                  ) [SimpleDesignator]
                                                ) [DesignatorInc]
                                              ) [StatementDesignator]
                                            ) [Statements]
                                          ) [StatementBlock]
                                        ) [StatementWhile]
                                      ) [Statements]
                                      StatementDesignator(
                                        DesignatorAssignment(
                                          SimpleDesignator(
                                           zapreminaS
                                          ) [SimpleDesignator]
                                          TermPositiveExpr(
                                            Term(
                                              SingleFactor(
                                                NumberConstFactor(
                                                 0
                                                ) [NumberConstFactor]
                                              ) [SingleFactor]
                                            ) [Term]
                                          ) [TermPositiveExpr]
                                        ) [DesignatorAssignment]
                                      ) [StatementDesignator]
                                    ) [Statements]
                                    StatementDesignator(
                                      DesignatorAssignment(
                                        SimpleDesignator(
                                         tezinaS
                                        ) [SimpleDesignator]
                                        TermPositiveExpr(
                                          Term(
                                            SingleFactor(
                                              NumberConstFactor(
                                               0
                                              ) [NumberConstFactor]
                                            ) [SingleFactor]
                                          ) [Term]
                                        ) [TermPositiveExpr]
                                      ) [DesignatorAssignment]
                                    ) [StatementDesignator]
                                  ) [Statements]
                                  StatementDesignator(
                                    DesignatorAssignment(
                                      SimpleDesignator(
                                       i
                                      ) [SimpleDesignator]
                                      TermPositiveExpr(
                                        Term(
                                          SingleFactor(
                                            NumberConstFactor(
                                             1
                                            ) [NumberConstFactor]
                                          ) [SingleFactor]
                                        ) [Term]
                                      ) [TermPositiveExpr]
                                    ) [DesignatorAssignment]
                                  ) [StatementDesignator]
                                ) [Statements]
                                StatementWhile(
                                  WhileLoopParen(
                                  ) [WhileLoopParen]
                                  FirstFixupForWhile(
                                  ) [FirstFixupForWhile]
                                  ConditionsWithoutOr(
                                    ConditionsWithoutAnd(
                                      RelopCondition(
                                        TermPositiveExpr(
                                          Term(
                                            SingleFactor(
                                              DesignatorFactor(
                                                SimpleDesignator(
                                                 i
                                                ) [SimpleDesignator]
                                              ) [DesignatorFactor]
                                            ) [SingleFactor]
                                          ) [Term]
                                        ) [TermPositiveExpr]
                                        LessOperator(
                                        ) [LessOperator]
                                        TermPositiveExpr(
                                          Term(
                                            SingleFactor(
                                              NumberConstFactor(
                                               6
                                              ) [NumberConstFactor]
                                            ) [SingleFactor]
                                          ) [Term]
                                        ) [TermPositiveExpr]
                                      ) [RelopCondition]
                                    ) [ConditionsWithoutAnd]
                                  ) [ConditionsWithoutOr]
                                  StatementBlock(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              NoStatements(
                                              ) [NoStatements]
                                              StatementIf(
                                                IfCondition(
                                                  OnlyIf(
                                                  ) [OnlyIf]
                                                  ConditionsWithoutOr(
                                                    ConditionsWithoutAnd(
                                                      RelopCondition(
                                                        TermPositiveExpr(
                                                          Term(
                                                            MultipleFactors(
                                                              SingleFactor(
                                                                DesignatorFactor(
                                                                  SimpleDesignator(
                                                                   i
                                                                  ) [SimpleDesignator]
                                                                ) [DesignatorFactor]
                                                              ) [SingleFactor]
                                                              ModuoOperator(
                                                              ) [ModuoOperator]
                                                              NumberConstFactor(
                                                               2
                                                              ) [NumberConstFactor]
                                                            ) [MultipleFactors]
                                                          ) [Term]
                                                        ) [TermPositiveExpr]
                                                        EqualOperator(
                                                        ) [EqualOperator]
                                                        TermPositiveExpr(
                                                          Term(
                                                            SingleFactor(
                                                              NumberConstFactor(
                                                               0
                                                              ) [NumberConstFactor]
                                                            ) [SingleFactor]
                                                          ) [Term]
                                                        ) [TermPositiveExpr]
                                                      ) [RelopCondition]
                                                    ) [ConditionsWithoutAnd]
                                                  ) [ConditionsWithoutOr]
                                                  FirstFixupForIf(
                                                  ) [FirstFixupForIf]
                                                ) [IfCondition]
                                                StatementBlock(
                                                  Statements(
                                                    Statements(
                                                      NoStatements(
                                                      ) [NoStatements]
                                                      StatementDesignator(
                                                        DesignatorInc(
                                                          SimpleDesignator(
                                                           i
                                                          ) [SimpleDesignator]
                                                        ) [DesignatorInc]
                                                      ) [StatementDesignator]
                                                    ) [Statements]
                                                    StatementContinue(
                                                    ) [StatementContinue]
                                                  ) [Statements]
                                                ) [StatementBlock]
                                                SecondFixupForIf(
                                                ) [SecondFixupForIf]
                                              ) [StatementIf]
                                            ) [Statements]
                                            StatementDesignator(
                                              DesignatorAssignment(
                                                SimpleDesignator(
                                                 zapreminaS
                                                ) [SimpleDesignator]
                                                AddExpr(
                                                  TermPositiveExpr(
                                                    Term(
                                                      SingleFactor(
                                                        DesignatorFactor(
                                                          SimpleDesignator(
                                                           zapreminaS
                                                          ) [SimpleDesignator]
                                                        ) [DesignatorFactor]
                                                      ) [SingleFactor]
                                                    ) [Term]
                                                  ) [TermPositiveExpr]
                                                  PlusOperator(
                                                  ) [PlusOperator]
                                                  Term(
                                                    SingleFactor(
                                                      FuncCallFactor(
                                                        FuncCallFactorDesignator(
                                                          ClassFieldDesignator(
                                                            ArrayDesignator(
                                                              ArrayDesig(
                                                                SimpleDesignator(
                                                                 predmeti
                                                                ) [SimpleDesignator]
                                                              ) [ArrayDesig]
                                                              AddExpr(
                                                                TermPositiveExpr(
                                                                  Term(
                                                                    SingleFactor(
                                                                      DesignatorFactor(
                                                                        SimpleDesignator(
                                                                         i
                                                                        ) [SimpleDesignator]
                                                                      ) [DesignatorFactor]
                                                                    ) [SingleFactor]
                                                                  ) [Term]
                                                                ) [TermPositiveExpr]
                                                                MinusOperator(
                                                                ) [MinusOperator]
                                                                Term(
                                                                  SingleFactor(
                                                                    NumberConstFactor(
                                                                     1
                                                                    ) [NumberConstFactor]
                                                                  ) [SingleFactor]
                                                                ) [Term]
                                                              ) [AddExpr]
                                                            ) [ArrayDesignator]
                                                           zapremina
                                                          ) [ClassFieldDesignator]
                                                        ) [FuncCallFactorDesignator]
                                                        NoActuals(
                                                        ) [NoActuals]
                                                      ) [FuncCallFactor]
                                                    ) [SingleFactor]
                                                  ) [Term]
                                                ) [AddExpr]
                                              ) [DesignatorAssignment]
                                            ) [StatementDesignator]
                                          ) [Statements]
                                          StatementDesignator(
                                            DesignatorAssignment(
                                              SimpleDesignator(
                                               tezinaS
                                              ) [SimpleDesignator]
                                              AddExpr(
                                                TermPositiveExpr(
                                                  Term(
                                                    SingleFactor(
                                                      DesignatorFactor(
                                                        SimpleDesignator(
                                                         tezinaS
                                                        ) [SimpleDesignator]
                                                      ) [DesignatorFactor]
                                                    ) [SingleFactor]
                                                  ) [Term]
                                                ) [TermPositiveExpr]
                                                PlusOperator(
                                                ) [PlusOperator]
                                                Term(
                                                  SingleFactor(
                                                    FuncCallFactor(
                                                      FuncCallFactorDesignator(
                                                        ClassFieldDesignator(
                                                          ArrayDesignator(
                                                            ArrayDesig(
                                                              SimpleDesignator(
                                                               predmeti
                                                              ) [SimpleDesignator]
                                                            ) [ArrayDesig]
                                                            AddExpr(
                                                              TermPositiveExpr(
                                                                Term(
                                                                  SingleFactor(
                                                                    DesignatorFactor(
                                                                      SimpleDesignator(
                                                                       i
                                                                      ) [SimpleDesignator]
                                                                    ) [DesignatorFactor]
                                                                  ) [SingleFactor]
                                                                ) [Term]
                                                              ) [TermPositiveExpr]
                                                              MinusOperator(
                                                              ) [MinusOperator]
                                                              Term(
                                                                SingleFactor(
                                                                  NumberConstFactor(
                                                                   1
                                                                  ) [NumberConstFactor]
                                                                ) [SingleFactor]
                                                              ) [Term]
                                                            ) [AddExpr]
                                                          ) [ArrayDesignator]
                                                         Q
                                                        ) [ClassFieldDesignator]
                                                      ) [FuncCallFactorDesignator]
                                                      NoActuals(
                                                      ) [NoActuals]
                                                    ) [FuncCallFactor]
                                                  ) [SingleFactor]
                                                ) [Term]
                                              ) [AddExpr]
                                            ) [DesignatorAssignment]
                                          ) [StatementDesignator]
                                        ) [Statements]
                                        StatementDesignator(
                                          DesignatorFuncCall(
                                            FuncCallFactorDesignator(
                                              SimpleDesignator(
                                               ispis
                                              ) [SimpleDesignator]
                                            ) [FuncCallFactorDesignator]
                                            Actuals(
                                              ActualParam(
                                                TermPositiveExpr(
                                                  Term(
                                                    SingleFactor(
                                                      DesignatorFactor(
                                                        ArrayDesignator(
                                                          ArrayDesig(
                                                            SimpleDesignator(
                                                             predmeti
                                                            ) [SimpleDesignator]
                                                          ) [ArrayDesig]
                                                          AddExpr(
                                                            TermPositiveExpr(
                                                              Term(
                                                                SingleFactor(
                                                                  DesignatorFactor(
                                                                    SimpleDesignator(
                                                                     i
                                                                    ) [SimpleDesignator]
                                                                  ) [DesignatorFactor]
                                                                ) [SingleFactor]
                                                              ) [Term]
                                                            ) [TermPositiveExpr]
                                                            MinusOperator(
                                                            ) [MinusOperator]
                                                            Term(
                                                              SingleFactor(
                                                                NumberConstFactor(
                                                                 1
                                                                ) [NumberConstFactor]
                                                              ) [SingleFactor]
                                                            ) [Term]
                                                          ) [AddExpr]
                                                        ) [ArrayDesignator]
                                                      ) [DesignatorFactor]
                                                    ) [SingleFactor]
                                                  ) [Term]
                                                ) [TermPositiveExpr]
                                              ) [ActualParam]
                                            ) [Actuals]
                                          ) [DesignatorFuncCall]
                                        ) [StatementDesignator]
                                      ) [Statements]
                                      StatementDesignator(
                                        DesignatorInc(
                                          SimpleDesignator(
                                           i
                                          ) [SimpleDesignator]
                                        ) [DesignatorInc]
                                      ) [StatementDesignator]
                                    ) [Statements]
                                  ) [StatementBlock]
                                ) [StatementWhile]
                              ) [Statements]
                              StatementDesignator(
                                DesignatorAssignment(
                                  SimpleDesignator(
                                   zapreminaK
                                  ) [SimpleDesignator]
                                  TermPositiveExpr(
                                    Term(
                                      SingleFactor(
                                        NumberConstFactor(
                                         0
                                        ) [NumberConstFactor]
                                      ) [SingleFactor]
                                    ) [Term]
                                  ) [TermPositiveExpr]
                                ) [DesignatorAssignment]
                              ) [StatementDesignator]
                            ) [Statements]
                            StatementDesignator(
                              DesignatorAssignment(
                                SimpleDesignator(
                                 tezinaK
                                ) [SimpleDesignator]
                                TermPositiveExpr(
                                  Term(
                                    SingleFactor(
                                      NumberConstFactor(
                                       0
                                      ) [NumberConstFactor]
                                    ) [SingleFactor]
                                  ) [Term]
                                ) [TermPositiveExpr]
                              ) [DesignatorAssignment]
                            ) [StatementDesignator]
                          ) [Statements]
                          StatementDesignator(
                            DesignatorAssignment(
                              SimpleDesignator(
                               i
                              ) [SimpleDesignator]
                              TermPositiveExpr(
                                Term(
                                  SingleFactor(
                                    NumberConstFactor(
                                     1
                                    ) [NumberConstFactor]
                                  ) [SingleFactor]
                                ) [Term]
                              ) [TermPositiveExpr]
                            ) [DesignatorAssignment]
                          ) [StatementDesignator]
                        ) [Statements]
                        StatementWhile(
                          WhileLoopParen(
                          ) [WhileLoopParen]
                          FirstFixupForWhile(
                          ) [FirstFixupForWhile]
                          ConditionsWithoutOr(
                            ConditionsWithoutAnd(
                              RelopCondition(
                                TermPositiveExpr(
                                  Term(
                                    SingleFactor(
                                      DesignatorFactor(
                                        SimpleDesignator(
                                         i
                                        ) [SimpleDesignator]
                                      ) [DesignatorFactor]
                                    ) [SingleFactor]
                                  ) [Term]
                                ) [TermPositiveExpr]
                                LessOperator(
                                ) [LessOperator]
                                TermPositiveExpr(
                                  Term(
                                    SingleFactor(
                                      NumberConstFactor(
                                       6
                                      ) [NumberConstFactor]
                                    ) [SingleFactor]
                                  ) [Term]
                                ) [TermPositiveExpr]
                              ) [RelopCondition]
                            ) [ConditionsWithoutAnd]
                          ) [ConditionsWithoutOr]
                          StatementBlock(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      NoStatements(
                                      ) [NoStatements]
                                      StatementIf(
                                        IfCondition(
                                          OnlyIf(
                                          ) [OnlyIf]
                                          ConditionsWithoutOr(
                                            ConditionsWithoutAnd(
                                              RelopCondition(
                                                TermPositiveExpr(
                                                  Term(
                                                    MultipleFactors(
                                                      SingleFactor(
                                                        DesignatorFactor(
                                                          SimpleDesignator(
                                                           i
                                                          ) [SimpleDesignator]
                                                        ) [DesignatorFactor]
                                                      ) [SingleFactor]
                                                      ModuoOperator(
                                                      ) [ModuoOperator]
                                                      NumberConstFactor(
                                                       2
                                                      ) [NumberConstFactor]
                                                    ) [MultipleFactors]
                                                  ) [Term]
                                                ) [TermPositiveExpr]
                                                EqualOperator(
                                                ) [EqualOperator]
                                                TermPositiveExpr(
                                                  Term(
                                                    SingleFactor(
                                                      NumberConstFactor(
                                                       1
                                                      ) [NumberConstFactor]
                                                    ) [SingleFactor]
                                                  ) [Term]
                                                ) [TermPositiveExpr]
                                              ) [RelopCondition]
                                            ) [ConditionsWithoutAnd]
                                          ) [ConditionsWithoutOr]
                                          FirstFixupForIf(
                                          ) [FirstFixupForIf]
                                        ) [IfCondition]
                                        StatementBlock(
                                          Statements(
                                            Statements(
                                              NoStatements(
                                              ) [NoStatements]
                                              StatementDesignator(
                                                DesignatorInc(
                                                  SimpleDesignator(
                                                   i
                                                  ) [SimpleDesignator]
                                                ) [DesignatorInc]
                                              ) [StatementDesignator]
                                            ) [Statements]
                                            StatementContinue(
                                            ) [StatementContinue]
                                          ) [Statements]
                                        ) [StatementBlock]
                                        SecondFixupForIf(
                                        ) [SecondFixupForIf]
                                      ) [StatementIf]
                                    ) [Statements]
                                    StatementDesignator(
                                      DesignatorAssignment(
                                        SimpleDesignator(
                                         zapreminaS
                                        ) [SimpleDesignator]
                                        AddExpr(
                                          TermPositiveExpr(
                                            Term(
                                              SingleFactor(
                                                DesignatorFactor(
                                                  SimpleDesignator(
                                                   zapreminaS
                                                  ) [SimpleDesignator]
                                                ) [DesignatorFactor]
                                              ) [SingleFactor]
                                            ) [Term]
                                          ) [TermPositiveExpr]
                                          PlusOperator(
                                          ) [PlusOperator]
                                          Term(
                                            SingleFactor(
                                              FuncCallFactor(
                                                FuncCallFactorDesignator(
                                                  ClassFieldDesignator(
                                                    ArrayDesignator(
                                                      ArrayDesig(
                                                        SimpleDesignator(
                                                         predmeti
                                                        ) [SimpleDesignator]
                                                      ) [ArrayDesig]
                                                      AddExpr(
                                                        TermPositiveExpr(
                                                          Term(
                                                            SingleFactor(
                                                              DesignatorFactor(
                                                                SimpleDesignator(
                                                                 i
                                                                ) [SimpleDesignator]
                                                              ) [DesignatorFactor]
                                                            ) [SingleFactor]
                                                          ) [Term]
                                                        ) [TermPositiveExpr]
                                                        MinusOperator(
                                                        ) [MinusOperator]
                                                        Term(
                                                          SingleFactor(
                                                            NumberConstFactor(
                                                             1
                                                            ) [NumberConstFactor]
                                                          ) [SingleFactor]
                                                        ) [Term]
                                                      ) [AddExpr]
                                                    ) [ArrayDesignator]
                                                   zapremina
                                                  ) [ClassFieldDesignator]
                                                ) [FuncCallFactorDesignator]
                                                NoActuals(
                                                ) [NoActuals]
                                              ) [FuncCallFactor]
                                            ) [SingleFactor]
                                          ) [Term]
                                        ) [AddExpr]
                                      ) [DesignatorAssignment]
                                    ) [StatementDesignator]
                                  ) [Statements]
                                  StatementDesignator(
                                    DesignatorAssignment(
                                      SimpleDesignator(
                                       tezinaS
                                      ) [SimpleDesignator]
                                      AddExpr(
                                        TermPositiveExpr(
                                          Term(
                                            SingleFactor(
                                              DesignatorFactor(
                                                SimpleDesignator(
                                                 tezinaS
                                                ) [SimpleDesignator]
                                              ) [DesignatorFactor]
                                            ) [SingleFactor]
                                          ) [Term]
                                        ) [TermPositiveExpr]
                                        PlusOperator(
                                        ) [PlusOperator]
                                        Term(
                                          SingleFactor(
                                            FuncCallFactor(
                                              FuncCallFactorDesignator(
                                                ClassFieldDesignator(
                                                  ArrayDesignator(
                                                    ArrayDesig(
                                                      SimpleDesignator(
                                                       predmeti
                                                      ) [SimpleDesignator]
                                                    ) [ArrayDesig]
                                                    AddExpr(
                                                      TermPositiveExpr(
                                                        Term(
                                                          SingleFactor(
                                                            DesignatorFactor(
                                                              SimpleDesignator(
                                                               i
                                                              ) [SimpleDesignator]
                                                            ) [DesignatorFactor]
                                                          ) [SingleFactor]
                                                        ) [Term]
                                                      ) [TermPositiveExpr]
                                                      MinusOperator(
                                                      ) [MinusOperator]
                                                      Term(
                                                        SingleFactor(
                                                          NumberConstFactor(
                                                           1
                                                          ) [NumberConstFactor]
                                                        ) [SingleFactor]
                                                      ) [Term]
                                                    ) [AddExpr]
                                                  ) [ArrayDesignator]
                                                 Q
                                                ) [ClassFieldDesignator]
                                              ) [FuncCallFactorDesignator]
                                              NoActuals(
                                              ) [NoActuals]
                                            ) [FuncCallFactor]
                                          ) [SingleFactor]
                                        ) [Term]
                                      ) [AddExpr]
                                    ) [DesignatorAssignment]
                                  ) [StatementDesignator]
                                ) [Statements]
                                StatementDesignator(
                                  DesignatorFuncCall(
                                    FuncCallFactorDesignator(
                                      SimpleDesignator(
                                       ispis
                                      ) [SimpleDesignator]
                                    ) [FuncCallFactorDesignator]
                                    Actuals(
                                      ActualParam(
                                        TermPositiveExpr(
                                          Term(
                                            SingleFactor(
                                              DesignatorFactor(
                                                ArrayDesignator(
                                                  ArrayDesig(
                                                    SimpleDesignator(
                                                     predmeti
                                                    ) [SimpleDesignator]
                                                  ) [ArrayDesig]
                                                  AddExpr(
                                                    TermPositiveExpr(
                                                      Term(
                                                        SingleFactor(
                                                          DesignatorFactor(
                                                            SimpleDesignator(
                                                             i
                                                            ) [SimpleDesignator]
                                                          ) [DesignatorFactor]
                                                        ) [SingleFactor]
                                                      ) [Term]
                                                    ) [TermPositiveExpr]
                                                    MinusOperator(
                                                    ) [MinusOperator]
                                                    Term(
                                                      SingleFactor(
                                                        NumberConstFactor(
                                                         1
                                                        ) [NumberConstFactor]
                                                      ) [SingleFactor]
                                                    ) [Term]
                                                  ) [AddExpr]
                                                ) [ArrayDesignator]
                                              ) [DesignatorFactor]
                                            ) [SingleFactor]
                                          ) [Term]
                                        ) [TermPositiveExpr]
                                      ) [ActualParam]
                                    ) [Actuals]
                                  ) [DesignatorFuncCall]
                                ) [StatementDesignator]
                              ) [Statements]
                              StatementDesignator(
                                DesignatorInc(
                                  SimpleDesignator(
                                   i
                                  ) [SimpleDesignator]
                                ) [DesignatorInc]
                              ) [StatementDesignator]
                            ) [Statements]
                          ) [StatementBlock]
                        ) [StatementWhile]
                      ) [Statements]
                      StatementPrintWithoutWidth(
                        PrintEmptyDummy(
                        ) [PrintEmptyDummy]
                        TermPositiveExpr(
                          Term(
                            SingleFactor(
                              DesignatorFactor(
                                SimpleDesignator(
                                 zapreminaS
                                ) [SimpleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleFactor]
                          ) [Term]
                        ) [TermPositiveExpr]
                      ) [StatementPrintWithoutWidth]
                    ) [Statements]
                    StatementPrintWithoutWidth(
                      PrintEmptyDummy(
                      ) [PrintEmptyDummy]
                      TermPositiveExpr(
                        Term(
                          SingleFactor(
                            DesignatorFactor(
                              SimpleDesignator(
                               eol
                              ) [SimpleDesignator]
                            ) [DesignatorFactor]
                          ) [SingleFactor]
                        ) [Term]
                      ) [TermPositiveExpr]
                    ) [StatementPrintWithoutWidth]
                  ) [Statements]
                  StatementPrintWithoutWidth(
                    PrintEmptyDummy(
                    ) [PrintEmptyDummy]
                    TermPositiveExpr(
                      Term(
                        SingleFactor(
                          DesignatorFactor(
                            SimpleDesignator(
                             zapreminaK
                            ) [SimpleDesignator]
                          ) [DesignatorFactor]
                        ) [SingleFactor]
                      ) [Term]
                    ) [TermPositiveExpr]
                  ) [StatementPrintWithoutWidth]
                ) [Statements]
                StatementPrintWithoutWidth(
                  PrintEmptyDummy(
                  ) [PrintEmptyDummy]
                  TermPositiveExpr(
                    Term(
                      SingleFactor(
                        DesignatorFactor(
                          SimpleDesignator(
                           eol
                          ) [SimpleDesignator]
                        ) [DesignatorFactor]
                      ) [SingleFactor]
                    ) [Term]
                  ) [TermPositiveExpr]
                ) [StatementPrintWithoutWidth]
              ) [Statements]
              StatementPrintWithoutWidth(
                PrintEmptyDummy(
                ) [PrintEmptyDummy]
                TermPositiveExpr(
                  Term(
                    SingleFactor(
                      DesignatorFactor(
                        SimpleDesignator(
                         tezinaS
                        ) [SimpleDesignator]
                      ) [DesignatorFactor]
                    ) [SingleFactor]
                  ) [Term]
                ) [TermPositiveExpr]
              ) [StatementPrintWithoutWidth]
            ) [Statements]
            StatementPrintWithoutWidth(
              PrintEmptyDummy(
              ) [PrintEmptyDummy]
              TermPositiveExpr(
                Term(
                  SingleFactor(
                    DesignatorFactor(
                      SimpleDesignator(
                       eol
                      ) [SimpleDesignator]
                    ) [DesignatorFactor]
                  ) [SingleFactor]
                ) [Term]
              ) [TermPositiveExpr]
            ) [StatementPrintWithoutWidth]
          ) [Statements]
          StatementPrintWithoutWidth(
            PrintEmptyDummy(
            ) [PrintEmptyDummy]
            TermPositiveExpr(
              Term(
                SingleFactor(
                  DesignatorFactor(
                    SimpleDesignator(
                     tezinaK
                    ) [SimpleDesignator]
                  ) [DesignatorFactor]
                ) [SingleFactor]
              ) [Term]
            ) [TermPositiveExpr]
          ) [StatementPrintWithoutWidth]
        ) [Statements]
        StatementPrintWithoutWidth(
          PrintEmptyDummy(
          ) [PrintEmptyDummy]
          TermPositiveExpr(
            Term(
              SingleFactor(
                DesignatorFactor(
                  SimpleDesignator(
                   eol
                  ) [SimpleDesignator]
                ) [DesignatorFactor]
              ) [SingleFactor]
            ) [Term]
          ) [TermPositiveExpr]
        ) [StatementPrintWithoutWidth]
      ) [Statements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  16:02:58,108 - ====================================
INFO  16:02:58,116 - Kreirana je klasa Predmet na liniji 7
INFO  16:02:58,116 - Definicija metode postaviTezinu na liniji 13
INFO  16:02:58,117 - Definicija metode ucitajTezinu na liniji 14
INFO  16:02:58,117 - Definicija metode zapremina na liniji 15
INFO  16:02:58,117 - Definicija metode Q na liniji 16
INFO  16:02:58,117 - Definicija metode postaviVrstu na liniji 17
INFO  16:02:58,117 - Definicija metode dohvVrstu na liniji 18
INFO  16:02:58,117 - Definicija metode dohvTezinu na liniji 19
INFO  16:02:58,117 - Definicija metode ispisi na liniji 20
INFO  16:02:58,117 - Prepoznata naredba print
INFO  16:02:58,117 - Prepoznata naredba print
INFO  16:02:58,117 - Broj konstruktora: 0
INFO  16:02:58,117 - Kreirana je klasa Sfera na liniji 27
INFO  16:02:58,118 - Konst broj: 0
INFO  16:02:58,118 - NAPRAVLJEN KONST SA FORM PARS0
INFO  16:02:58,118 - Konst broj: 1
INFO  16:02:58,118 - CONSTRUCTOR: Sfera
INFO  16:02:58,119 - NAPRAVLJEN KONST SA FORM PARS1
INFO  16:02:58,119 - Definicija metode postaviPoluprecnik na liniji 41
INFO  16:02:58,119 - Definicija metode zapremina na liniji 43
INFO  16:02:58,119 - Kreirana je promenjiva z na liniji 44
INFO  16:02:58,119 - Broj konstruktora: 2
INFO  16:02:58,119 - Kreirana je klasa Kvadar na liniji 53
INFO  16:02:58,119 - Konst broj: 0
INFO  16:02:58,119 - NAPRAVLJEN KONST SA FORM PARS0
INFO  16:02:58,119 - Konst broj: 1
INFO  16:02:58,119 - CONSTRUCTOR: Kvadar
INFO  16:02:58,119 - NAPRAVLJEN KONST SA FORM PARS3
INFO  16:02:58,120 - Konst broj: 2
INFO  16:02:58,120 - CONSTRUCTOR: Kvadar
INFO  16:02:58,120 - CONSTRUCTOR: Kvadar
INFO  16:02:58,120 - int
INFO  16:02:58,120 - int
INFO  16:02:58,120 - int
INFO  16:02:58,120 - NAPRAVLJEN KONST SA FORM PARS1
INFO  16:02:58,120 - Definicija metode postaviStranice na liniji 78
INFO  16:02:58,120 - Definicija metode zapremina na liniji 79
INFO  16:02:58,120 - Kreirana je promenjiva z na liniji 80
INFO  16:02:58,120 - Broj konstruktora: 3
INFO  16:02:58,120 - Kreirana je promenjiva zapreminaK na liniji 89
INFO  16:02:58,120 - Kreirana je promenjiva zapreminaS na liniji 89
INFO  16:02:58,120 - Kreirana je promenjiva tezinaK na liniji 90
INFO  16:02:58,120 - Kreirana je promenjiva tezinaS na liniji 90
INFO  16:02:58,120 - Definicija funkcije ispis na liniji 93
INFO  16:02:58,120 - Pristup polju p.ispisi na liniji 95
INFO  16:02:58,121 - Prepoznata naredba print
INFO  16:02:58,121 - Pristup polju p.dohvTezinu na liniji 97
INFO  16:02:58,121 - Prepoznata naredba print
INFO  16:02:58,121 - Definicija funkcije main na liniji 100
INFO  16:02:58,121 - Kreirana je promenjiva predmeti[] na liniji 100
INFO  16:02:58,121 - Kreirana je promenjiva i na liniji 100
INFO  16:02:58,121 - Kreirana je promenjiva s1 na liniji 100
INFO  16:02:58,121 - Kreirana je promenjiva s2 na liniji 100
INFO  16:02:58,121 - Kreirana je promenjiva s3 na liniji 100
INFO  16:02:58,121 - Kreirana je promenjiva k1 na liniji 100
INFO  16:02:58,121 - Kreirana je promenjiva k2 na liniji 100
INFO  16:02:58,121 - Kreirana je promenjiva k3 na liniji 100
INFO  16:02:58,121 - Kreirana je promenjiva t na liniji 100
INFO  16:02:58,122 - Pristup elemntu niza predmeti na liniji 111
INFO  16:02:58,122 - Pristup elemntu niza predmeti na liniji 112
INFO  16:02:58,122 - Pristup elemntu niza predmeti na liniji 113
INFO  16:02:58,122 - Pristup elemntu niza predmeti na liniji 114
INFO  16:02:58,122 - Pristup elemntu niza predmeti na liniji 115
INFO  16:02:58,122 - Pristup elemntu niza predmeti na liniji 116
INFO  16:02:58,122 - Pristup elemntu niza predmeti na liniji 121
INFO  16:02:58,122 - Pristup polju predmeti.postaviTezinu na liniji 121
INFO  16:02:58,123 - Pristup elemntu niza predmeti na liniji 133
INFO  16:02:58,123 - Pristup polju predmeti.zapremina na liniji 133
INFO  16:02:58,123 - Pristup elemntu niza predmeti na liniji 134
INFO  16:02:58,123 - Pristup polju predmeti.Q na liniji 134
INFO  16:02:58,123 - Pristup elemntu niza predmeti na liniji 135
INFO  16:02:58,123 - Pristup elemntu niza predmeti na liniji 148
INFO  16:02:58,123 - Pristup polju predmeti.zapremina na liniji 148
INFO  16:02:58,123 - Pristup elemntu niza predmeti na liniji 149
INFO  16:02:58,123 - Pristup polju predmeti.Q na liniji 149
INFO  16:02:58,123 - Pristup elemntu niza predmeti na liniji 150
INFO  16:02:58,123 - Prepoznata naredba print
INFO  16:02:58,123 - Prepoznata naredba print
INFO  16:02:58,123 - Prepoznata naredba print
INFO  16:02:58,123 - Prepoznata naredba print
INFO  16:02:58,123 - Prepoznata naredba print
INFO  16:02:58,123 - Prepoznata naredba print
INFO  16:02:58,123 - Prepoznata naredba print
INFO  16:02:58,123 - Prepoznata naredba print
INFO  16:02:58,123 - Print count calls = 12
INFO  16:02:58,123 - ====================================
INFO  16:02:58,140 - Parsiranje uspesno zavrseno!
