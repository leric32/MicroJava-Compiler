INFO  01:23:35,338 - Compiling source file: C:\Users\el190235d\Desktop\PP1\projekat\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\test302.mj
INFO  01:23:35,380 - #2 program
INFO  01:23:35,380 - #48 test302
INFO  01:23:35,380 - #8 const
INFO  01:23:35,381 - #48 int
INFO  01:23:35,381 - #48 jedan
INFO  01:23:35,382 - #33 =
INFO  01:23:35,382 - #47 1
INFO  01:23:35,382 - #36 ;
INFO  01:23:35,382 - #48 int
INFO  01:23:35,383 - #48 i
INFO  01:23:35,383 - #36 ;
INFO  01:23:35,384 - #48 bool
INFO  01:23:35,384 - #48 ibool
INFO  01:23:35,384 - #36 ;
INFO  01:23:35,384 - #48 int
INFO  01:23:35,384 - #48 niz2
INFO  01:23:35,384 - #36 ;
INFO  01:23:35,384 - #48 int
INFO  01:23:35,384 - #48 niz
INFO  01:23:35,385 - #42 [
INFO  01:23:35,385 - #43 ]
INFO  01:23:35,385 - #36 ;
INFO  01:23:35,386 - #48 int
INFO  01:23:35,386 - #48 a
INFO  01:23:35,386 - #38 ,
INFO  01:23:35,386 - #48 curr
INFO  01:23:35,387 - #36 ;
INFO  01:23:35,387 - #44 {
INFO  01:23:35,387 - #48 int
INFO  01:23:35,388 - #48 sum
INFO  01:23:35,388 - #40 (
INFO  01:23:35,388 - #48 int
INFO  01:23:35,388 - #48 z
INFO  01:23:35,388 - #38 ,
INFO  01:23:35,388 - #48 int
INFO  01:23:35,388 - #48 d
INFO  01:23:35,388 - #41 )
INFO  01:23:35,389 - #44 {
INFO  01:23:35,389 - #4 return
INFO  01:23:35,390 - #48 z
INFO  01:23:35,390 - #20 +
INFO  01:23:35,391 - #48 d
INFO  01:23:35,392 - #36 ;
INFO  01:23:35,392 - #45 }
INFO  01:23:35,392 - #48 int
INFO  01:23:35,393 - #48 inkrement
INFO  01:23:35,393 - #40 (
INFO  01:23:35,393 - #48 int
INFO  01:23:35,393 - #48 a
INFO  01:23:35,393 - #38 ,
INFO  01:23:35,393 - #48 int
INFO  01:23:35,393 - #48 inc
INFO  01:23:35,393 - #41 )
INFO  01:23:35,393 - #48 int
INFO  01:23:35,393 - #48 pom
INFO  01:23:35,394 - #36 ;
INFO  01:23:35,394 - #44 {
INFO  01:23:35,394 - #9 if
INFO  01:23:35,394 - #40 (
INFO  01:23:35,395 - #48 inc
INFO  01:23:35,395 - #25 ==
INFO  01:23:35,395 - #48 jedan
INFO  01:23:35,397 - #41 )
INFO  01:23:35,397 - #48 pom
INFO  01:23:35,397 - #33 =
INFO  01:23:35,397 - #47 1
INFO  01:23:35,397 - #36 ;
INFO  01:23:35,397 - #7 else
INFO  01:23:35,398 - #9 if
INFO  01:23:35,398 - #40 (
INFO  01:23:35,398 - #48 inc
INFO  01:23:35,398 - #25 ==
INFO  01:23:35,398 - #47 2
INFO  01:23:35,398 - #41 )
INFO  01:23:35,398 - #48 pom
INFO  01:23:35,398 - #33 =
INFO  01:23:35,398 - #48 a
INFO  01:23:35,398 - #36 ;
INFO  01:23:35,398 - #4 return
INFO  01:23:35,398 - #48 sum
INFO  01:23:35,398 - #40 (
INFO  01:23:35,398 - #48 a
INFO  01:23:35,398 - #38 ,
INFO  01:23:35,399 - #48 pom
INFO  01:23:35,399 - #41 )
INFO  01:23:35,399 - #36 ;
INFO  01:23:35,399 - #45 }
INFO  01:23:35,399 - #48 bool
INFO  01:23:35,399 - #48 verify
INFO  01:23:35,399 - #40 (
INFO  01:23:35,399 - #41 )
INFO  01:23:35,400 - #44 {
INFO  01:23:35,400 - #3 print
INFO  01:23:35,400 - #40 (
INFO  01:23:35,400 - #49 v
INFO  01:23:35,400 - #41 )
INFO  01:23:35,400 - #36 ;
INFO  01:23:35,400 - #4 return
INFO  01:23:35,400 - #50 false
INFO  01:23:35,400 - #36 ;
INFO  01:23:35,400 - #45 }
INFO  01:23:35,401 - #14 void
INFO  01:23:35,401 - #48 main
INFO  01:23:35,401 - #40 (
INFO  01:23:35,401 - #41 )
INFO  01:23:35,401 - #44 {
INFO  01:23:35,401 - #9 if
INFO  01:23:35,401 - #40 (
INFO  01:23:35,401 - #47 1
INFO  01:23:35,401 - #26 !=
INFO  01:23:35,401 - #47 1
INFO  01:23:35,402 - #41 )
INFO  01:23:35,402 - #3 print
INFO  01:23:35,402 - #40 (
INFO  01:23:35,402 - #21 -
INFO  01:23:35,402 - #47 6
INFO  01:23:35,402 - #41 )
INFO  01:23:35,402 - #36 ;
INFO  01:23:35,402 - #7 else
INFO  01:23:35,402 - #3 print
INFO  01:23:35,402 - #40 (
INFO  01:23:35,402 - #47 0
INFO  01:23:35,402 - #41 )
INFO  01:23:35,402 - #36 ;
INFO  01:23:35,403 - #48 ibool
INFO  01:23:35,403 - #33 =
INFO  01:23:35,403 - #50 false
INFO  01:23:35,403 - #36 ;
INFO  01:23:35,403 - #48 i
INFO  01:23:35,403 - #33 =
INFO  01:23:35,403 - #47 0
INFO  01:23:35,403 - #36 ;
INFO  01:23:35,403 - #11 while
INFO  01:23:35,403 - #40 (
INFO  01:23:35,403 - #48 i
INFO  01:23:35,403 - #29 <
INFO  01:23:35,403 - #47 5
INFO  01:23:35,404 - #41 )
INFO  01:23:35,404 - #44 {
INFO  01:23:35,404 - #9 if
INFO  01:23:35,404 - #40 (
INFO  01:23:35,404 - #48 i
INFO  01:23:35,404 - #25 ==
INFO  01:23:35,404 - #47 2
INFO  01:23:35,404 - #41 )
INFO  01:23:35,404 - #48 ibool
INFO  01:23:35,404 - #33 =
INFO  01:23:35,404 - #50 true
INFO  01:23:35,405 - #36 ;
INFO  01:23:35,405 - #48 i
INFO  01:23:35,405 - #34 ++
INFO  01:23:35,405 - #36 ;
INFO  01:23:35,405 - #45 }
INFO  01:23:35,405 - #9 if
INFO  01:23:35,405 - #40 (
INFO  01:23:35,405 - #48 ibool
INFO  01:23:35,405 - #41 )
INFO  01:23:35,405 - #9 if
INFO  01:23:35,405 - #40 (
INFO  01:23:35,406 - #48 i
INFO  01:23:35,406 - #25 ==
INFO  01:23:35,406 - #47 5
INFO  01:23:35,406 - #41 )
INFO  01:23:35,406 - #3 print
INFO  01:23:35,406 - #40 (
INFO  01:23:35,406 - #47 1
INFO  01:23:35,406 - #41 )
INFO  01:23:35,406 - #36 ;
INFO  01:23:35,406 - #7 else
INFO  01:23:35,406 - #3 print
INFO  01:23:35,406 - #40 (
INFO  01:23:35,406 - #21 -
INFO  01:23:35,406 - #47 1
INFO  01:23:35,407 - #41 )
INFO  01:23:35,407 - #36 ;
INFO  01:23:35,407 - #48 a
INFO  01:23:35,407 - #33 =
INFO  01:23:35,407 - #47 2
INFO  01:23:35,407 - #36 ;
INFO  01:23:35,407 - #48 niz
INFO  01:23:35,407 - #33 =
INFO  01:23:35,407 - #12 new
INFO  01:23:35,407 - #48 int
INFO  01:23:35,407 - #42 [
ERROR 01:23:35,407 - 
Sintaksna greska na liniji 54
ERROR 01:23:35,408 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 54
